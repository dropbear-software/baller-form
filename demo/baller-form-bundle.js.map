{
  "version": 3,
  "sources": ["../node_modules/tslib/tslib.es6.mjs", "../node_modules/@lit/reactive-element/src/css-tag.ts", "../node_modules/@lit/reactive-element/src/reactive-element.ts", "../node_modules/lit-html/src/lit-html.ts", "../node_modules/lit-element/src/lit-element.ts", "../node_modules/@lit/reactive-element/src/decorators/custom-element.ts", "../node_modules/@lit/reactive-element/src/decorators/property.ts", "../node_modules/@lit/reactive-element/src/decorators/state.ts", "../node_modules/@lit/reactive-element/src/decorators/base.ts", "../node_modules/@lit/reactive-element/src/decorators/query.ts", "../node_modules/@lit/reactive-element/src/decorators/query-all.ts", "../node_modules/@lit/reactive-element/src/decorators/query-assigned-elements.ts", "../node_modules/@lit/task/src/task.ts", "../src/baller-form.css.ts", "../src/application-data.ts", "../src/enrollment-service.ts", "../src/spam-service.ts", "../src/tooltips.ts", "../node_modules/@material/web/elevation/internal/elevation.ts", "../node_modules/@material/web/elevation/internal/elevation-styles.css.ts", "../node_modules/@material/web/elevation/elevation.ts", "../node_modules/@material/web/internal/controller/attachable-controller.ts", "../node_modules/@material/web/focus/internal/focus-ring.ts", "../node_modules/@material/web/focus/internal/focus-ring-styles.css.ts", "../node_modules/@material/web/focus/md-focus-ring.ts", "../node_modules/lit-html/src/directive.ts", "../node_modules/lit-html/src/directives/class-map.ts", "../node_modules/@material/web/internal/motion/animation.ts", "../node_modules/@material/web/ripple/internal/ripple.ts", "../node_modules/@material/web/ripple/internal/ripple-styles.css.ts", "../node_modules/@material/web/ripple/ripple.ts", "../node_modules/lit-html/src/static.ts", "../node_modules/@material/web/internal/aria/aria.ts", "../node_modules/@material/web/internal/aria/delegate.ts", "../node_modules/@material/web/internal/controller/element-internals.ts", "../node_modules/@material/web/internal/controller/events.ts", "../node_modules/@material/web/internal/controller/form-submitter.ts", "../node_modules/@material/web/button/internal/button.ts", "../node_modules/@material/web/button/internal/filled-button.ts", "../node_modules/@material/web/button/internal/filled-styles.css.ts", "../node_modules/@material/web/button/internal/shared-elevation-styles.css.ts", "../node_modules/@material/web/button/internal/shared-styles.css.ts", "../node_modules/@material/web/button/filled-button.ts", "../node_modules/@material/web/button/internal/filled-tonal-button.ts", "../node_modules/@material/web/button/internal/filled-tonal-styles.css.ts", "../node_modules/@material/web/button/filled-tonal-button.ts", "../node_modules/@material/web/button/internal/outlined-button.ts", "../node_modules/@material/web/button/internal/outlined-styles.css.ts", "../node_modules/@material/web/button/outlined-button.ts", "../node_modules/@material/web/field/internal/field.ts", "../node_modules/@material/web/field/internal/filled-field.ts", "../node_modules/@material/web/field/internal/filled-styles.css.ts", "../node_modules/@material/web/field/internal/shared-styles.css.ts", "../node_modules/@material/web/field/filled-field.ts", "../node_modules/@material/web/textfield/internal/filled-forced-colors-styles.css.ts", "../node_modules/@material/web/textfield/internal/filled-styles.css.ts", "../node_modules/lit-html/src/directive-helpers.ts", "../node_modules/lit-html/src/directives/live.ts", "../node_modules/lit-html/src/directives/style-map.ts", "../node_modules/@material/web/internal/controller/string-converter.ts", "../node_modules/@material/web/textfield/internal/text-field.ts", "../node_modules/@material/web/textfield/internal/filled-text-field.ts", "../node_modules/@material/web/textfield/internal/shared-styles.css.ts", "../node_modules/@material/web/textfield/filled-text-field.ts", "../node_modules/@material/web/checkbox/internal/checkbox.ts", "../node_modules/@material/web/checkbox/internal/checkbox-styles.css.ts", "../node_modules/@material/web/checkbox/checkbox.ts", "../node_modules/@material/web/icon/internal/icon.ts", "../node_modules/@material/web/icon/internal/icon-styles.css.ts", "../node_modules/@material/web/icon/icon.ts", "../node_modules/@material/web/select/internal/filled-forced-colors-styles.css.ts", "../node_modules/@material/web/menu/internal/forced-colors-styles.css.ts", "../node_modules/@material/web/list/internal/list-navigation-helpers.ts", "../node_modules/@material/web/list/internal/list-controller.ts", "../node_modules/@material/web/menu/internal/controllers/shared.ts", "../node_modules/@material/web/menu/internal/controllers/surfacePositionController.ts", "../node_modules/@material/web/menu/internal/controllers/typeaheadController.ts", "../node_modules/@material/web/menu/internal/menu.ts", "../node_modules/@material/web/menu/internal/menu-styles.css.ts", "../node_modules/@material/web/menu/menu.ts", "../node_modules/@material/web/select/internal/shared.ts", "../node_modules/@material/web/select/internal/select.ts", "../node_modules/@material/web/select/internal/filled-select.ts", "../node_modules/@material/web/select/internal/filled-select-styles.css.ts", "../node_modules/@material/web/select/internal/shared-styles.css.ts", "../node_modules/@material/web/select/filled-select.ts", "../node_modules/@material/web/menu/internal/menuitem/forced-colors-styles.css.ts", "../node_modules/@material/web/menu/internal/menuitem/menu-item-styles.css.ts", "../node_modules/@material/web/labs/item/internal/item.ts", "../node_modules/@material/web/labs/item/internal/item-styles.css.ts", "../node_modules/@material/web/labs/item/item.ts", "../node_modules/@material/web/menu/internal/controllers/menuItemController.ts", "../node_modules/@material/web/select/internal/selectoption/selectOptionController.ts", "../node_modules/@material/web/select/internal/selectoption/select-option.ts", "../node_modules/@material/web/select/select-option.ts", "../node_modules/@material/web/divider/internal/divider.ts", "../node_modules/@material/web/divider/internal/divider-styles.css.ts", "../node_modules/@material/web/divider/divider.ts", "../node_modules/@material/web/dialog/internal/animations.ts", "../node_modules/@material/web/dialog/internal/dialog.ts", "../node_modules/@material/web/dialog/internal/dialog-styles.css.ts", "../node_modules/@material/web/dialog/dialog.ts", "../src/baller-form.ts"],
  "sourcesContent": ["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.3');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _necessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._$parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.8.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.3.3');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise compatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty =\n  ({\n    finisher,\n    descriptor,\n  }: {\n    finisher?:\n      | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n      | null;\n    descriptor?: (property: PropertyKey) => PropertyDescriptor;\n  }) =>\n  (\n    protoOrDescriptor: Interface<ReactiveElement> | ClassElement,\n    name?: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any => {\n    // TypeScript / Babel legacy mode\n    if (name !== undefined) {\n      const ctor = (protoOrDescriptor as ReactiveElement)\n        .constructor as typeof ReactiveElement;\n      if (descriptor !== undefined) {\n        Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n      }\n      finisher?.(ctor, name!);\n      // Babel standard mode\n    } else {\n      // Note, the @property decorator saves `key` as `originalKey`\n      // so try to use it here.\n      const key =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (protoOrDescriptor as any).originalKey ??\n        (protoOrDescriptor as ClassElement).key;\n      const info: ClassElement =\n        descriptor != undefined\n          ? {\n              kind: 'method',\n              placement: 'prototype',\n              key,\n              descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n            }\n          : {...(protoOrDescriptor as ClassElement), key};\n      if (finisher != undefined) {\n        info.finisher = function <ReactiveElement>(\n          ctor: Constructor<ReactiveElement>\n        ) {\n          finisher(ctor as unknown as typeof ReactiveElement, key);\n        };\n      }\n      return info;\n    }\n  };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        return this.renderRoot?.querySelectorAll(selector) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {notEqual} from '@lit/reactive-element';\nimport {ReactiveControllerHost} from '@lit/reactive-element/reactive-controller.js';\n\nexport interface TaskFunctionOptions {\n  signal: AbortSignal;\n}\n\nexport type TaskFunction<D extends ReadonlyArray<unknown>, R = unknown> = (\n  args: D,\n  options: TaskFunctionOptions\n) => R | typeof initialState | Promise<R | typeof initialState>;\nexport type ArgsFunction<D extends ReadonlyArray<unknown>> = () => D;\n\n// `DepsFunction` is being maintained for BC with its previous name.\nexport {ArgsFunction as DepsFunction};\n\n/**\n * States for task status\n */\nexport const TaskStatus = {\n  INITIAL: 0,\n  PENDING: 1,\n  COMPLETE: 2,\n  ERROR: 3,\n} as const;\n\n/**\n * A special value that can be returned from task functions to reset the task\n * status to INITIAL.\n */\nexport const initialState = Symbol();\n\nexport type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus];\n\nexport type StatusRenderer<R> = {\n  initial?: () => unknown;\n  pending?: () => unknown;\n  complete?: (value: R) => unknown;\n  error?: (error: unknown) => unknown;\n};\n\nexport interface TaskConfig<T extends ReadonlyArray<unknown>, R> {\n  task: TaskFunction<T, R>;\n  args?: ArgsFunction<T>;\n\n  /**\n   * Determines if the task is run automatically when arguments change after a\n   * host update. Default to `true`.\n   *\n   * If `true`, the task checks arguments during the host update (after\n   * `willUpdate()` and before `update()` in Lit) and runs if they change. For\n   * a task to see argument changes they must be done in `willUpdate()` or\n   * earlier. The host element can see task status changes caused by its own\n   * current update.\n   *\n   * If `'afterUpdate'`, the task checks arguments and runs _after_ the host\n   * update. This means that the task can see host changes done in update, such\n   * as rendered DOM. The host element can not see task status changes caused\n   * by its own update, so the task must trigger a second host update to make\n   * those changes renderable.\n   *\n   * Note: `'afterUpdate'` is unlikely to be SSR compatible in the future.\n   *\n   * If `false`, the task is not run automatically, and must be run with the\n   * {@linkcode run} method.\n   */\n  autoRun?: boolean | 'afterUpdate';\n\n  /**\n   * A function that determines if the current arg and previous args arrays are\n   * equal. If the argsEqual function returns true, the task will not auto-run.\n   *\n   * The default is {@linkcode shallowArrayEquals}. {@linkcode deepArrayEquals}\n   * is also available.\n   */\n  argsEqual?: (oldArgs: T, newArgs: T) => boolean;\n\n  /**\n   * If initialValue is provided, the task is initialized to the COMPLETE\n   * status and the value is set to initialData.\n   *\n   * Initial args should be coherent with the initialValue, since they are\n   * assumed to be the args that would produce that value. When autoRun is\n   * `true` the task will not auto-run again until the args change.\n   */\n  initialValue?: R;\n  onComplete?: (value: R) => unknown;\n  onError?: (error: unknown) => unknown;\n}\n\n// TODO(sorvell / justinfagnani): Some issues:\n// 1. With the task triggered in `update`, there is no ReactiveElement\n// change-in-update warning in the common case that the update itself does not change\n// the deps; however, Task's `requestUpdate` call to render pending state  will not\n// trigger another update since the element is updating. This `requestUpdate`\n// could be triggered in updated, but that results a change-in-update warning.\n// 2. There is no good signal for when the task has resolved and rendered other\n// than requestAnimationFrame. The user would need to store a promise for the\n// task and then wait for that and the element to update. (Update just justinfagnani:\n// Why isn't waiting taskComplete and updateComplete sufficient? This comment is\n// from before taskComplete existed!)\n\n/**\n * A controller that performs an asynchronous task (like a fetch) when its\n * host element updates.\n *\n * Task requests an update on the host element when the task starts and\n * completes so that the host can render the task status, value, and error as\n * the task runs.\n *\n * The task function must be supplied and can take a list of arguments. The\n * arguments are given to the Task as a function that returns a list of values,\n * which is run and checked for changes on every host update.\n *\n * The `value` property reports the completed value, and the `error` property\n * an error state if one occurs. The `status` property can be checked for\n * status and is of type `TaskStatus` which has states for initial, pending,\n * complete, and error.\n *\n * The `render` method accepts an object with optional methods corresponding\n * to the task statuses to easily render different templates for each task\n * status.\n *\n * The task is run automatically when its arguments change; however, this can\n * be customized by setting `autoRun` to false and calling `run` explicitly\n * to run the task.\n *\n * For a task to see state changes in the current update pass of the host\n * element, those changes must be made in `willUpdate()`. State changes in\n * `update()` or `updated()` will not be visible to the task until the next\n * update pass.\n *\n * @example\n *\n * ```ts\n * class MyElement extends LitElement {\n *   url = 'example.com/api';\n *   id = 0;\n *\n *   task = new Task(\n *     this,\n *     {\n *       task: async ([url, id]) => {\n *         const response = await fetch(`${this.url}?id=${this.id}`);\n *         if (!response.ok) {\n *           throw new Error(response.statusText);\n *         }\n *         return response.json();\n *       },\n *       args: () => [this.id, this.url],\n *     }\n *   );\n *\n *   render() {\n *     return this.task.render({\n *       pending: () => html`<p>Loading...</p>`,\n *       complete: (value) => html`<p>Result: ${value}</p>`\n *     });\n *   }\n * }\n * ```\n */\nexport class Task<\n  T extends ReadonlyArray<unknown> = ReadonlyArray<unknown>,\n  R = unknown\n> {\n  private _previousArgs?: T;\n  private _task: TaskFunction<T, R>;\n  private _argsFn?: ArgsFunction<T>;\n  private _argsEqual: (oldArgs: T, newArgs: T) => boolean;\n  private _callId = 0;\n  private _host: ReactiveControllerHost;\n  private _value?: R;\n  private _error?: unknown;\n  private _abortController?: AbortController;\n  private _onComplete?: (result: R) => unknown;\n  private _onError?: (error: unknown) => unknown;\n  status: TaskStatus = TaskStatus.INITIAL;\n\n  /**\n   * Determines if the task is run automatically when arguments change after a\n   * host update. Default to `true`.\n   *\n   * @see {@link TaskConfig.autoRun} for more information.\n   */\n  autoRun: boolean | 'afterUpdate';\n\n  /**\n   * A Promise that resolve when the current task run is complete.\n   *\n   * If a new task run is started while a previous run is pending, the Promise\n   * is kept and only resolved when the new run is completed.\n   */\n  get taskComplete(): Promise<R> {\n    // If a task run exists, return the cached promise. This is true in the case\n    // where the user has called taskComplete in pending or completed state\n    // before and has not started a new task run since.\n    if (this._taskComplete) {\n      return this._taskComplete;\n    }\n\n    // Generate an in-progress promise if the the status is pending and has been\n    // cleared by .run().\n    if (this.status === TaskStatus.PENDING) {\n      this._taskComplete = new Promise((res, rej) => {\n        this._resolveTaskComplete = res;\n        this._rejectTaskComplete = rej;\n      });\n      // If the status is error, return a rejected promise.\n    } else if (this.status === TaskStatus.ERROR) {\n      this._taskComplete = Promise.reject(this._error);\n      // Otherwise we are at a task run's completion or this is the first\n      // request and we are not in the middle of a task (i.e. INITIAL).\n    } else {\n      this._taskComplete = Promise.resolve(this._value!);\n    }\n\n    return this._taskComplete;\n  }\n\n  private _resolveTaskComplete?: (value: R) => void;\n  private _rejectTaskComplete?: (e: unknown) => void;\n  private _taskComplete?: Promise<R>;\n\n  constructor(\n    host: ReactiveControllerHost,\n    task: TaskFunction<T, R>,\n    args?: ArgsFunction<T>\n  );\n  constructor(host: ReactiveControllerHost, task: TaskConfig<T, R>);\n  constructor(\n    host: ReactiveControllerHost,\n    task: TaskFunction<T, R> | TaskConfig<T, R>,\n    args?: ArgsFunction<T>\n  ) {\n    (this._host = host).addController(this);\n    const taskConfig =\n      typeof task === 'object' ? task : ({task, args} as TaskConfig<T, R>);\n    this._task = taskConfig.task;\n    this._argsFn = taskConfig.args;\n    this._argsEqual = taskConfig.argsEqual ?? shallowArrayEquals;\n    this._onComplete = taskConfig.onComplete;\n    this._onError = taskConfig.onError;\n    this.autoRun = taskConfig.autoRun ?? true;\n    // Providing initialValue puts the task in COMPLETE state and stores the\n    // args immediately so it only runs when they change again.\n    if ('initialValue' in taskConfig) {\n      this._value = taskConfig.initialValue;\n      this.status = TaskStatus.COMPLETE;\n      this._previousArgs = this._getArgs?.();\n    }\n  }\n\n  hostUpdate() {\n    if (this.autoRun === true) {\n      this._performTask();\n    }\n  }\n\n  hostUpdated() {\n    if (this.autoRun === 'afterUpdate') {\n      this._performTask();\n    }\n  }\n\n  private _getArgs() {\n    if (this._argsFn === undefined) {\n      return undefined;\n    }\n    const args = this._argsFn();\n    if (!Array.isArray(args)) {\n      throw new Error('The args function must return an array');\n    }\n    return args;\n  }\n\n  /**\n   * Determines if the task should run when it's triggered because of a\n   * host update, and runs the task if it should.\n   *\n   * A task should run when its arguments change from the previous run, based on\n   * the args equality function.\n   *\n   * This method is side-effectful: it stores the new args as the previous args.\n   */\n  private async _performTask() {\n    const args = this._getArgs();\n    const prev = this._previousArgs;\n    this._previousArgs = args;\n    if (\n      args !== prev &&\n      args !== undefined &&\n      (prev === undefined || !this._argsEqual(prev, args))\n    ) {\n      await this.run(args);\n    }\n  }\n\n  /**\n   * Runs a task manually.\n   *\n   * This can be useful for running tasks in response to events as opposed to\n   * automatically running when host element state changes.\n   *\n   * @param args an optional set of arguments to use for this task run. If args\n   *     is not given, the args function is called to get the arguments for\n   *     this run.\n   */\n  async run(args?: T) {\n    args ??= this._getArgs();\n\n    // Remember the args for potential future automatic runs.\n    // TODO (justinfagnani): add test\n    this._previousArgs = args;\n\n    if (this.status === TaskStatus.PENDING) {\n      this._abortController?.abort();\n    } else {\n      // Clear the last complete task run in INITIAL because it may be a resolved\n      // promise. Also clear if COMPLETE or ERROR because the value returned by\n      // awaiting taskComplete may have changed since last run.\n      this._taskComplete = undefined;\n      this._resolveTaskComplete = undefined;\n      this._rejectTaskComplete = undefined;\n    }\n\n    this.status = TaskStatus.PENDING;\n    let result!: R | typeof initialState;\n    let error: unknown;\n\n    // Request an update to report pending state.\n    if (this.autoRun === 'afterUpdate') {\n      // Avoids a change-in-update warning\n      queueMicrotask(() => this._host.requestUpdate());\n    } else {\n      this._host.requestUpdate();\n    }\n\n    const key = ++this._callId;\n    this._abortController = new AbortController();\n    let errored = false;\n    try {\n      result = await this._task(args!, {signal: this._abortController.signal});\n    } catch (e) {\n      errored = true;\n      error = e;\n    }\n    // If this is the most recent task call, process this value.\n    if (this._callId === key) {\n      if (result === initialState) {\n        this.status = TaskStatus.INITIAL;\n      } else {\n        if (errored === false) {\n          try {\n            this._onComplete?.(result as R);\n          } catch {\n            // Ignore user errors from onComplete.\n          }\n          this.status = TaskStatus.COMPLETE;\n          this._resolveTaskComplete?.(result as R);\n        } else {\n          try {\n            this._onError?.(error);\n          } catch {\n            // Ignore user errors from onError.\n          }\n          this.status = TaskStatus.ERROR;\n          this._rejectTaskComplete?.(error);\n        }\n        this._value = result as R;\n        this._error = error;\n      }\n      // Request an update with the final value.\n      this._host.requestUpdate();\n    }\n  }\n\n  /**\n   * Aborts the currently pending task run by aborting the AbortSignal\n   * passed to the task function.\n   *\n   * Aborting a task does nothing if the task is not running: ie, in the\n   * complete, error, or initial states.\n   *\n   * Aborting a task does not automatically cancel the task function. The task\n   * function must be written to accept the AbortSignal and either forward it\n   * to other APIs like `fetch()`, or handle cancellation manually by using\n   * [`signal.throwIfAborted()`]{@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted}\n   * or the\n   * [`abort`]{@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/abort_event}\n   * event.\n   *\n   * @param reason The reason for aborting. Passed to\n   *     `AbortController.abort()`.\n   */\n  abort(reason?: unknown) {\n    if (this.status === TaskStatus.PENDING) {\n      this._abortController?.abort(reason);\n    }\n  }\n\n  /**\n   * The result of the previous task run, if it resolved.\n   *\n   * Is `undefined` if the task has not run yet, or if the previous run errored.\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * The error from the previous task run, if it rejected.\n   *\n   * Is `undefined` if the task has not run yet, or if the previous run\n   * completed successfully.\n   */\n  get error() {\n    return this._error;\n  }\n\n  render<T extends StatusRenderer<R>>(renderer: T) {\n    switch (this.status) {\n      case TaskStatus.INITIAL:\n        return renderer.initial?.() as MaybeReturnType<T['initial']>;\n      case TaskStatus.PENDING:\n        return renderer.pending?.() as MaybeReturnType<T['pending']>;\n      case TaskStatus.COMPLETE:\n        return renderer.complete?.(this.value!) as MaybeReturnType<\n          T['complete']\n        >;\n      case TaskStatus.ERROR:\n        return renderer.error?.(this.error) as MaybeReturnType<T['error']>;\n      default:\n        throw new Error(`Unexpected status: ${this.status}`);\n    }\n  }\n}\n\ntype MaybeReturnType<F> = F extends (...args: never[]) => infer R\n  ? R\n  : undefined;\n\nexport const shallowArrayEquals = <T extends ReadonlyArray<unknown>>(\n  oldArgs: T,\n  newArgs: T\n) =>\n  oldArgs === newArgs ||\n  (oldArgs.length === newArgs.length &&\n    oldArgs.every((v, i) => !notEqual(v, newArgs[i])));\n", "import { css } from 'lit';\n\nexport const componentStyles = css`\n  :host {\n    display: block;\n    padding: 25px;\n    color: var(--baller-form-color-on-background, #1b1c17);\n    font-family: var(--baller-form-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n\n    --md-sys-color-primary: var(--baller-form-color-primary);\n    --md-sys-color-on-primary: var(--baller-form-color-on-primary);\n    --md-sys-color-primary-container: var(--baller-form-color-primary-container);\n    --md-sys-color-on-primary-container: var(--baller-form-color-on-primary-container);\n\n    --md-sys-color-error: var(--baller-form-color-error, #ba1a1a);\n    --md-sys-color-on-error: var(--baller-form-color-on-error: #ffffff);\n    --md-sys-color-error-container: var(--baller-form-color-error-container, #ffdad6);\n    --md-sys-color-on-error-container: var(--baller-form-color-on-error-container: #410002);\n\n    --md-sys-color-secondary: var(--baller-form-color-secondary);\n    --md-sys-color-on-secondary: var(--baller-form-color-on-secondary);\n    --md-sys-color-secondary-container: var(--baller-form-color-secondary-container);\n    --md-sys-color-on-secondary-container: var(--baller-form-color-on-secondary-container);\n\n    --md-sys-color-tertiary: var(--baller-form-color-tertiary);\n    --md-sys-color-on-tertiary: var(--baller-form-color-on-tertiary);\n    --md-sys-color-tertiary-container: var(--baller-form-color-tertiary-container);\n    --md-sys-color-on-tertiary-container: var(--baller-form-color-on-tertiary-container);\n\n    --md-sys-color-surface: var(--baller-form-color-surface);\n    --md-sys-color-on-surface: var(--baller-form-color-on-surface);\n    --md-sys-color-surface-container: var(--baller-form-color-surface-container);\n    --md-sys-color-on-surface-container: var(--baller-form-color-on-surface-container);\n\n    --md-ref-typeface-plain: var(--baller-form-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n  }\n\n  md-filled-select {\n    --md-filled-select-text-field-container-color: #F4F4F5;\n    --md-filled-select-text-field-input-text-color: #5E737D;\n    --md-filled-select-text-field-label-text-color: #5E737D;\n    --md-menu-item-label-text-color: var(--baller-form-color-secondary, #5E737D);\n  }\n\n  md-checkbox {\n    --md-checkbox-outline-color: var(--baller-form-checkbox-outline-color, #45483c);\n    --md-checkbox-selected-container-color: var(--baller-form-selected-container-color, #4b6700);\n    --md-checkbox-selected-icon-color: var(--baller-form-selected-icon-color, #ffffff);\n  }\n\n  md-filled-text-field {\n    --md-filled-text-field-container-color: #F4F4F5;\n    --md-filled-text-field-input-text-color: #5E737D;\n    --md-filled-field-label-text-color: #5E737D;\n    --md-filled-field-hover-label-text-color: #5E737D;\n    --md-filled-field-hover-input-text-color: #5E737D;\n    --md-filled-text-field-focus-outline-color: var(--baller-form-text-field-focus-outline-color, #4b6700);\n    --md-filled-text-field-label-text-font: var(--baller-form-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n    --md-filled-text-field-input-text-font: var(--baller-form-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n  }\n\n  md-filled-button {\n    --md-filled-button-container-color: var(--baller-form-filled-button-container-color, #4b6700);\n    --md-filled-button-container-shape: var(--baller-form-filled-button-container-shape, 9999px);\n  }\n\n  md-outlined-select {\n    --md-outlined-select-text-field-outline-color: var(--baller-form-outlined-select-text-field-outline-color, #76786b);\n    --md-outlined-select-text-field-input-text-color: var(--baller-form-outlined-select-text-field-input-text-color, #1b1c17);\n    --md-outlined-select-text-field-input-text-font: var(--baller-form-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n  }\n\n  md-outlined-select::part(menu) {\n    --md-menu-container-color: var(--baller-form-menu-background, #f4fbfa);\n  }\n\n  #form-wrapper {\n    background-color: var(--baller-form-color-background, #fefcf4);\n    /* border: 1px solid var(--baller-form-color-outline, #76786b); */\n    padding: 1.5rem;\n    /* border-radius: 5px; */\n    margin: 0 auto;\n  }\n\n  .form-fields { \n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n    justify-content: center;\n  }\n  .form-footer {\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  .inline-label {\n    display: flex;\n    align-items: center;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  .invisible-icon {\n    height: 18px;\n    width: 18px;\n  }\n\n  /* Typography */\n  .display-small {\n    font-family: var(--baller-form-display-headline-large-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n    font-weight: 700;\n    font-size: 32px;\n    letter-spacing: var(--baller-form-display-headline-large-letter-spacing, 0px);\n    line-height: 38px;\n    color: #1D2124;\n  }\n\n  .headline-small {\n    font-family: var(--baller-form-display-headline-small-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n    font-weight: 400;\n    font-size: 18px;\n    letter-spacing: var(--baller-form-display-headline-small-letter-spacing, 0px);\n    line-height: 27px;\n    color: #1D2124;\n  }\n\n  .label-medium {\n    font-family: var(--baller-form-display-label-medium-font-family, \"Open Sans\", \"Trebuchet MS\", Arial, \"Helvetica Neue\", sans-serif);\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: var(--baller-form-display-label-medium-letter-spacing, 0.5px);\n    line-height: 20px;\n    color: #1D2124;\n  }\n\n  /* Tooltip */\n  .field-with-tooltip {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .tooltip-toggle {\n    cursor: pointer;\n    position: relative;\n  }\n\n  .tooltip-toggle svg {\n    height: 18px;\n    width: 18px;\n  }\n  \n  .tooltip-toggle::before {\n    position: absolute;\n    top: -100px;\n    left: -250px;\n    background-color: var(--baller-form-color-surface-variant);\n    border-radius: 5px;\n    color: #fff;\n    content: attr(aria-label);\n    padding: 1rem;\n    text-transform: none;\n    transition: all 0.5s ease;\n    min-width: 160px;\n    z-index:50;\n    border: 1px solid var(--baller-form-color-outline);\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n  }\n  \n  .tooltip-toggle::before, .tooltip-toggle::after {\n    color: var(--baller-form-color-on-surface-variant);\n    opacity: 0;\n    pointer-events: none;\n    text-align: center;\n  }\n  \n  .tooltip-toggle:focus::before, .tooltip-toggle:focus::after, .tooltip-toggle:hover::before, .tooltip-toggle:hover::after {\n    opacity: 1;\n    transition: all 0.75s ease;\n  }\n`;\n", "export interface ApplicationDataInit {\n  givenName: string,\n  familyName: string,\n  email: string,\n  telephone: string,\n  birthDate: Date,\n  shirtSize: string,\n  bundesland: string,\n  customCurrentCountry: string,\n  position: string,\n  currentPlayingStatus: string,\n  currentFootballCountry: string,\n  teamType: string\n  germanLeague: string,\n  internationalLeague: string,\n  otherExperience: string,\n  highestDomesticLeague: string,\n  highestInternationalCountry: string,\n  highestInternationalLeague: string,\n  highestExperience: string,\n  clubName: string,\n  highlightTape: string,\n  transfermarktProfile: string,\n  youTube: string,\n  instagram: string,\n  tiktok: string,\n  xing: string,\n  comments: string,\n  acceptedTos: boolean,\n  acceptedPrivacy: boolean\n}\n\nexport class ApplicationData {\n  readonly givenName: string;\n\n  readonly familyName: string;\n\n  readonly email: string;\n\n  readonly telephone: string;\n\n  readonly birthDate: string;\n\n  readonly shirt: string;\n\n  readonly bundesland: string;\n\n  readonly currentCountry: string;\n\n  readonly position: string;\n\n  readonly currentLeague: string;\n\n  readonly currentTeamType: string;\n\n  readonly currentTeamCountry: string;\n\n  readonly highestTeamCountry: string;\n\n  readonly highestTeamLeague: string;\n\n  readonly clubName: string;\n\n  readonly transfermarktProfile: string\n\n  readonly highlightTape: string\n\n  readonly youTube: string;\n\n  readonly instagram: string;\n\n  readonly tikTok: string;\n\n  readonly xing: string;\n\n  readonly comments: string;\n\n  constructor(\n    args: ApplicationDataInit\n  ) {\n    this.givenName = args.givenName;\n    this.familyName = args.familyName;\n    this.telephone = args.telephone;\n    this.email = args.email;\n    this.birthDate = ApplicationData.normalizeBirthDate(args.birthDate);\n    this.shirt = args.shirtSize;\n    this.bundesland = args.bundesland;\n    this.currentCountry = ApplicationData.normalizeCountry(args.bundesland, args.customCurrentCountry);\n    this.position = args.position;\n    this.currentTeamCountry = ApplicationData.normalizeCurrentTeamCountry(args.currentPlayingStatus, args.currentFootballCountry);\n    this.currentTeamType = ApplicationData.normalizeTeamType(args.currentPlayingStatus, args.teamType);\n    this.currentLeague = ApplicationData.normalizeLeague(args.currentPlayingStatus, args.germanLeague, args.internationalLeague);\n    this.highestTeamCountry = ApplicationData.normalizeHighestCountry(args.highestExperience, args.highestInternationalCountry);\n    this.highestTeamLeague = ApplicationData.normalizeHighestLeague(args.highestExperience, args.highestDomesticLeague, args.highestInternationalLeague)\n    this.clubName = args.clubName;\n    this.highlightTape = args.highlightTape;\n    this.transfermarktProfile = args.transfermarktProfile;\n    this.youTube = args.youTube;\n    this.instagram = args.instagram;\n    this.tikTok = args.tiktok;\n    this.xing = args.xing;\n    this.comments = args.comments;\n  }\n  \n  // Normalize the DOB with the appropriate YYYY-MM-DD formatting\n  private static normalizeBirthDate(birthDate: Date) : string {\n    // Get the year, month, and day of the date.\n    const year = birthDate.getFullYear();\n    const month = birthDate.getMonth() + 1; // Months are zero-indexed, so we need to add one.\n    const day = birthDate.getDate();\n\n    // Add leading zeros to the month and day if necessary.\n    const formattedMonth = month < 10 ? `0${month}` : month;\n    const formattedDay = day < 10 ? `0${day}` : day;\n\n    // Return the formatted date string.\n    return `${year}-${formattedMonth}-${formattedDay}`;\n  }\n\n  // We allow users to choose 'other' as an experience level and instead provide a string\n  // this function will put the apporpriate version into the right field.\n  private static normalizeLeague(location: string, germanLeague: string, internationalLeague: string){\n    if (location === 'deutschland') {\n      return germanLeague;\n    } \n    \n    if (location === 'international') {\n      return internationalLeague;\n    }\n    \n    return '';\n  }\n\n  private static normalizeHighestCountry(currentStatus: string, highestTeamCountry: string){\n    if (currentStatus === 'deutschland') {\n      return 'Deutschland';\n    } \n    \n    if (currentStatus === 'international') {\n      return highestTeamCountry;\n    }\n    \n    return '';\n  }\n\n  private static normalizeCurrentTeamCountry(currentStatus: string, highestTeamCountry: string){\n    if (currentStatus === 'deutschland') {\n      return 'Deutschland';\n    } \n    \n    if (currentStatus === 'international') {\n      return highestTeamCountry;\n    }\n    \n    return '';\n  }\n\n  private static normalizeTeamType(currentStatus: string, teamType: string){\n    if (currentStatus === 'deutschland') {\n      return teamType;\n    }\n    \n    return '';\n  }\n\n  private static normalizeHighestLeague(currentStatus: string, domesticLeague: string, internationalLeague: string){\n    if (currentStatus === 'deutschland') {\n      return domesticLeague;\n    } \n    \n    if (currentStatus === 'international') {\n      return internationalLeague;\n    }\n    \n    return 'Same as current';\n  }\n  \n\n  // We allow users to choose 'other' as an experience level and instead provide a string\n  // this function will put the apporpriate version into the right field.\n  private static normalizeCountry(stateValue: string, countryValue: string){\n    if (stateValue === 'Ausland') {\n      return countryValue;\n    } \n    \n    return 'Deutschland';\n  }\n}\n", "import { ApplicationData } from './application-data.js';\n\ninterface BrazeResponse {\n  message: string,\n  errors?: Array<object>,\n  attributes_processed?: number\n  events_processed?: number\n  purchases_processed?: number\n}\n\n/**\n * A service for processing and sending application data to Braze.\n *\n * @constructor\n * @param {string} endpoint The endpoint URL for the Braze API.\n */\nexport class EnrollmentService {\n  readonly endpoint: URL;\n\n  constructor(endpoint: string) {\n    this.endpoint = new URL(endpoint, window.location.origin);\n  }\n\n  /**\n   * Handles the response from Braze.\n   *\n   * @param {object} response The response from Braze.\n   *\n   * @returns {void}\n   */\n  private static handleBrazeResponse(response: BrazeResponse) {\n    // console.log(`[DEBUG] Server Response \\n ${JSON.stringify(response, null, \"\\t\")}`);\n\n    if (response.errors) {\n      console.error(response);\n      throw new Error(\"Invalid Braze API response.\");\n    }\n\n  }\n\n  /**\n   * Processes an application data object and sends it to Braze.\n   * @param {ApplicationData} data The application data object to process.\n   * \n   * @returns {Promise<void>} A promise that resolves when the application data has been successfully sent to Braze.\n   */\n  async process(data: ApplicationData) {\n    const jsonData = EnrollmentService.prepareDataForBraze(data);\n    // console.log(`[DEBUG]: Sending the followig data to Braze \\n ${JSON.stringify(jsonData, null, \"\\t\")}`);\n    const brazeResponse = await this.sendDataToBraze(jsonData);\n    const parsedResponse = JSON.parse(brazeResponse);\n    EnrollmentService.handleBrazeResponse(parsedResponse);\n  }\n\n  /**\n   * Sends data to Braze.\n   * \n   * @param {object} data The data to send to Braze.\n   * \n   * @returns {Promise<object>} A promise that resolves to the JSON response from Braze.\n   */\n  private async sendDataToBraze(data: object) {\n    // Default options are marked with *\n    const response = await fetch(this.endpoint, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  /**\n   * Prepares data for sending to Braze.\n   * \n   * @param {ApplicationData} data The application data to prepare.\n   * @returns {object} The data prepared for sending to Braze.\n   */\n  private static prepareDataForBraze(data: ApplicationData) {\n    const brazeEvent = {\n      events: [\n        {\n          email: data.email,\n          app_id: '220983e3-8db5-49d5-8272-620b09b1f7fa',\n          name: 'Submit_BallerLeague_Application',\n          time: new Date().toISOString(),\n        },\n      ],\n      attributes: [\n        {\n          email: data.email,\n          personal_details: {\n            first_name: data.givenName,\n            last_name: data.familyName,\n            email: data.email,\n            tel: data.telephone,\n            dob: data.birthDate,\n            bundesland: data.bundesland,\n            current_country: data.currentCountry,\n            clothes_size: data.shirt\n          },\n          experience_level: {\n            position: data.position,\n            current_status: {\n              land: data.currentTeamCountry,\n              association: data.clubName,\n              team_type: data.currentTeamType,\n              league: data.currentLeague\n            },\n            highest_status: {\n              land: data.highestTeamCountry,\n              league: data.highestTeamLeague,\n            }\n          },\n          other_details: {\n            highlight_tape: data.highlightTape,\n            link_transfermarket: data.transfermarktProfile,\n            youtube_link: data.youTube,\n            instagram_link: data.instagram,\n            tiktok_link: data.tikTok,\n            xing: data.xing,\n            comment: data.comments,\n          }\n        }\n      ]\n    }\n\n    return brazeEvent;\n  }\n}\n\n", "interface RecaptchaValidationResponse {\n  success: boolean;\n  score: number;\n  action: string;\n  challenge_ts: string;\n  hostname: string;\n  error_codes?: string[];\n}\n\n/**\n * A service for using reCAPTCHA v3 to prevent spam.\n *\n * This service provides a number of methods for generating reCAPTCHA challenges,\n * validating responses, and determining if a user is likely to be a bot.\n *\n * To use the service, you must first create an instance of it,\n * passing in your reCAPTCHA site key and server-side validation endpoint\n */\nexport class SpamService {\n  readonly siteKey: string;\n\n  readonly serverSideValidationEndpoint: URL;\n\n  readonly scriptURL: URL;\n\n  readonly minimumTrustRequired = 0.4;\n\n  // Simple flag to set if we are actually using this feature or not\n  featureEnabled = true;\n\n  constructor(siteKey: string, endpoint: string) {\n    this.siteKey = siteKey;\n    this.scriptURL = SpamService.generateScriptUrl(siteKey);\n    this.serverSideValidationEndpoint = new URL(endpoint, window.location.origin);\n  }\n\n  /**\n   * Generates an HTML script element for the Google reCAPTCHA script.\n   *\n   * @returns An HTML script element for the Google reCAPTCHA script.\n   */\n  generateScriptElement(): HTMLScriptElement {\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = this.scriptURL.href;\n    return script;\n  }\n\n  /**\n   * Determines if the current user is likely to be valid user or a bot.\n   *\n   * This function uses reCAPTCHA v3 to verify the user's identity.\n   * If reCAPTCHA is enabled and available, the function will execute a reCAPTCHA\n   * challenge and use the response score to determine if the user is valid.\n   * If reCAPTCHA is disabled or unavailable, the function will simulate a valid score.\n   *\n   * @returns `true` if the user meets our reCAPTCHA validation scoring criteria, `false` otherwise.\n   *\n   * @link https://developers.google.com/recaptcha/v3/\n   * @link https://developers.google.com/recaptcha/docs/v3#programmatically_invoke_the_challenge\n   */\n  async isValidUser(): Promise<boolean> {\n    if (!this.featureEnabled) {\n      return true;\n    }\n\n    if (!('grecaptcha' in window)) {\n      throw new Error(\"reCAPTCHA object not found\");\n    }\n\n    // @ts-ignore\n    const token = await window.grecaptcha.execute(this.siteKey, {action: 'submit'});\n\n    try {\n      const response = await this.validateTokenWithServer(token);\n      return response.score >= this.minimumTrustRequired;\n    } catch (err) {\n      console.error(err);\n      throw new Error(\"Problem communicating with reCAPTCHA endpoint.\");\n    }\n  }\n\n  /**\n   * Validates the given token with the server.\n   *\n   * @param token The reCAPTCHA v3 token to validate.\n   * @returns A Promise that resolves to an object containing the validation results, or rejects with an error if the validation fails.\n   */\n  private async validateTokenWithServer(\n    token: string\n  ): Promise<RecaptchaValidationResponse> {\n    // Time out after 10 seconds if we don't already have a response\n    const abortSignal = AbortSignal.timeout(10000); // milliseconds\n\n    const response = await fetch(this.serverSideValidationEndpoint, {\n      method: 'POST',\n      signal: abortSignal,\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ token }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Unable to validate Recaptcha Token with the server');\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Generates a URL to the Google reCAPTCHA script.\n   *\n   * @param siteKey The reCAPTCHA site key.\n   * @returns A URL to the Google reCAPTCHA script.\n   */\n  private static generateScriptUrl(siteKey: string): URL {\n    const scriptUrl = new URL('https://www.google.com/recaptcha/api.js');\n    scriptUrl.searchParams.append('render', siteKey);\n    return scriptUrl;\n  }\n}\n", "export const tooltipMessages = {\n  phone: \"Es ist zwar freiwillig, die Nummer anzugeben. Aber wie sollen Dich Poldi oder Mats denn sonst anrufen, wenn es mit der Baller League klappt?\",\n  clothes: \"Warum wir Deine Größe brauchen? Easy: Kein Spiel ohne Trikots. Und die sollen am Ende doch passen, oder?\",\n  experience: \"Deine Prime-Liga: / Dein höchstes Level bisher:\",\n  birthday: \"Jedes Spiel hat seine Regeln. Unsere machen immer Spaß. Außer vielleicht diese hier: Du musst nämlich mindestens 18 Jahre alt sein, um Dich für die Baller League bewerben zu können.\",\n  highlight: \"Hier kannst Du Wetransfer-Links und Co. angeben. Für größere Datien. Du verstehst. Wichtig: achte darauf, dass die Filme gängige Formate haben.\"\n};", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    return html`<span class=\"shadow\"></span>`;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000));display:flex;pointer-events:none}:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}/*# sourceMappingURL=elevation-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Elevation} from './internal/elevation.js';\nimport {styles} from './internal/elevation-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-elevation': MdElevation;\n  }\n}\n\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n */\n@customElement('md-elevation')\nexport class MdElevation extends Elevation {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string|null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement|null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver|undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver(records => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[ATTACHABLE_CONTROLLER]\n          ?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string|null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (this.host.getRootNode() as Document | ShadowRoot)\n          .querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement|null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement|null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n      private readonly host: AttachableControllerHost,\n      private readonly onControlChange:\n          (prev: HTMLElement|null, next: HTMLElement|null) => void) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement|null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {Attachable, AttachableController} from '../../internal/controller/attachable-controller.js';\n\n/**\n * Events that the focus ring listens to.\n *\n * @fires visibility-changed Fired whenever `visible` changes.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string|null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement|null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController =\n      new AttachableController(this, this.onControlChange.bind(this));\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement|null, next: HTMLElement|null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, 9999px)) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, 9999px)) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, 9999px)) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, 9999px)) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, 9999px)) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, 9999px)) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, 9999px)) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, 9999px)) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}/*# sourceMappingURL=focus-ring-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {FocusRing} from './internal/focus-ring.js';\nimport {styles} from './internal/focus-ring-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that we don't require down-level\n    // iteration.\n    this._previousClasses.forEach((name) => {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    });\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n} as const;\n\n/**\n * A signal that is used for abortable tasks.\n */\nexport interface AnimationSignal {\n  /**\n   * Starts the abortable task. Any previous tasks started with this instance\n   * will be aborted.\n   *\n   * @return An `AbortSignal` for the current task.\n   */\n  start(): AbortSignal;\n  /**\n   * Complete the current task.\n   */\n  finish(): void;\n}\n\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal(): AnimationSignal {\n  // The current animation's AbortController\n  let animationAbortController: AbortController|null = null;\n\n  return {\n    start() {\n      // Tell the previous animation to cancel.\n      animationAbortController?.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    },\n  };\n}\n\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (\n             key = '', cb: (...args: unknown[]) => unknown,\n             timeout = async () => {\n               await new Promise(requestAnimationFrame);\n             }) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value: string) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match?.[1];\n  const seconds = match?.[2];\n  return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {Attachable, AttachableController} from '../../internal/controller/attachable-controller.js';\nimport {EASING} from '../../internal/motion/animation.js';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click', 'contextmenu', 'pointercancel', 'pointerdown', 'pointerenter',\n  'pointerleave', 'pointerup'\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string|null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement|null) {\n    this.attachableController.control = control;\n  }\n\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement|null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController =\n      new AttachableController(this, this.onControlChange.bind(this));\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise(resolve => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize =\n        Math.max(SOFT_EDGE_CONTAINER_RATIO * maxDim, SOFT_EDGE_MINIMUM_SIZE);\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent):\n      {x: number, y: number} {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - (this.initialSize / 2),\n      y: startPoint.y - (this.initialSize / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n        this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n        {\n          top: [0, 0],\n          left: [0, 0],\n          height: [this.rippleSize, this.rippleSize],\n          width: [this.rippleSize, this.rippleSize],\n          transform: [\n            `translate(${translateStart}) scale(1)`,\n            `translate(${translateEnd}) scale(${this.rippleScale})`\n          ],\n        },\n        {\n          pseudoElement: PRESS_PSEUDO,\n          duration: PRESS_GROW_MS,\n          easing: EASING.STANDARD,\n          fill: ANIMATION_FILL\n        });\n  }\n\n  private async endPressAnimation() {\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    const pressAnimationPlayState = animation?.currentTime ?? Infinity;\n    // TODO: go/ts51upgrade - Auto-added to unblock TS5.1 migration.\n    //   TS2365: Operator '>=' cannot be applied to types 'CSSNumberish' and\n    //   'number'.\n    // @ts-ignore\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise(resolve => {\n      // TODO: go/ts51upgrade - Auto-added to unblock TS5.1 migration.\n      //   TS2363: The right-hand side of an arithmetic operation must be of\n      //   type 'any', 'number', 'bigint' or an enum type.\n      // @ts-ignore\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (this.rippleStartEvent &&\n        this.rippleStartEvent.pointerId !== event.pointerId) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement|null, next: HTMLElement|null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_hover-color: var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-opacity: var(--md-ripple-hover-opacity, 0.08);--_pressed-color: var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-opacity: var(--md-ripple-pressed-opacity, 0.12);display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--_hover-color);inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--_pressed-color) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--_hover-color);opacity:var(--_hover-opacity)}.pressed::after{opacity:var(--_pressed-opacity);transition-duration:105ms}/*# sourceMappingURL=ripple-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {html as coreHtml, svg as coreSvg, TemplateResult} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * a attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveElement} from 'lit';\n\n/**\n * Accessibility Object Model reflective aria property name types.\n */\nexport type ARIAProperty = Exclude<keyof ARIAMixin, 'role'>;\n\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES: ARIAProperty[] = [\n  'ariaAtomic',\n  'ariaAutoComplete',\n  'ariaBusy',\n  'ariaChecked',\n  'ariaColCount',\n  'ariaColIndex',\n  'ariaColSpan',\n  'ariaCurrent',\n  'ariaDisabled',\n  'ariaExpanded',\n  'ariaHasPopup',\n  'ariaHidden',\n  'ariaInvalid',\n  'ariaKeyShortcuts',\n  'ariaLabel',\n  'ariaLevel',\n  'ariaLive',\n  'ariaModal',\n  'ariaMultiLine',\n  'ariaMultiSelectable',\n  'ariaOrientation',\n  'ariaPlaceholder',\n  'ariaPosInSet',\n  'ariaPressed',\n  'ariaReadOnly',\n  'ariaRequired',\n  'ariaRoleDescription',\n  'ariaRowCount',\n  'ariaRowIndex',\n  'ariaRowSpan',\n  'ariaSelected',\n  'ariaSetSize',\n  'ariaSort',\n  'ariaValueMax',\n  'ariaValueMin',\n  'ariaValueNow',\n  'ariaValueText',\n];\n\n/**\n * Accessibility Object Model aria attribute name types.\n */\nexport type ARIAAttribute = ARIAPropertyToAttribute<ARIAProperty>;\n\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute: string): attribute is ARIAAttribute {\n  return attribute.startsWith('aria-');\n}\n\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute<K extends ARIAProperty|'role'>(\n    property: K) {\n  return property\n             .replace('aria', 'aria-')\n             // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n             .replace(/Elements?/g, '')\n             .toLowerCase() as ARIAPropertyToAttribute<K>;\n}\n\n// Converts an `ariaFoo` string type to an `aria-foo` string type.\ntype ARIAPropertyToAttribute<K extends string> =\n    K extends `aria${infer Suffix}Element${infer OptS}` ?\n    `aria-${Lowercase < Suffix >}` :\n    K extends `aria${infer Suffix}` ? `aria-${Lowercase < Suffix >}` : K;\n\n/**\n * An extension of `ARIAMixin` that enforces strict value types for aria\n * properties.\n *\n * This is needed for correct typing in render functions with lit analyzer.\n *\n * @example\n * render() {\n *   const {ariaLabel} = this as ARIAMixinStrict;\n *   return html`\n *     <button aria-label=${ariaLabel || nothing}>\n *       <slot></slot>\n *     </button>\n *   `;\n * }\n */\nexport interface ARIAMixinStrict extends ARIAMixin {\n  ariaAtomic: 'true'|'false'|null;\n  ariaAutoComplete: 'none'|'inline'|'list'|'both'|null;\n  ariaBusy: 'true'|'false'|null;\n  ariaChecked: 'true'|'false'|null;\n  ariaColCount: `${number}`|null;\n  ariaColIndex: `${number}`|null;\n  ariaColSpan: `${number}`|null;\n  ariaCurrent: 'page'|'step'|'location'|'date'|'time'|'true'|'false'|null;\n  ariaDisabled: 'true'|'false'|null;\n  ariaExpanded: 'true'|'false'|null;\n  ariaHasPopup: 'false'|'true'|'menu'|'listbox'|'tree'|'grid'|'dialog'|null;\n  ariaHidden: 'true'|'false'|null;\n  ariaInvalid: 'true'|'false'|null;\n  ariaKeyShortcuts: string|null;\n  ariaLabel: string|null;\n  ariaLevel: `${number}`|null;\n  ariaLive: 'assertive'|'off'|'polite'|null;\n  ariaModal: 'true'|'false'|null;\n  ariaMultiLine: 'true'|'false'|null;\n  ariaMultiSelectable: 'true'|'false'|null;\n  ariaOrientation: 'horizontal'|'vertical'|'undefined'|null;\n  ariaPlaceholder: string|null;\n  ariaPosInSet: `${number}`|null;\n  ariaPressed: 'true'|'false'|null;\n  ariaReadOnly: 'true'|'false'|null;\n  ariaRequired: 'true'|'false'|null;\n  ariaRoleDescription: string|null;\n  ariaRowCount: `${number}`|null;\n  ariaRowIndex: `${number}`|null;\n  ariaRowSpan: `${number}`|null;\n  ariaSelected: 'true'|'false'|null;\n  ariaSetSize: `${number}`|null;\n  ariaSort: 'ascending'|'descending'|'none'|'other'|null;\n  ariaValueMax: `${number}`|null;\n  ariaValueMin: `${number}`|null;\n  ariaValueNow: `${number}`|null;\n  ariaValueText: string|null;\n  role: ARIARole|null;\n}\n\n/**\n * Valid values for `role`.\n */\nexport type ARIARole =\n    'alert'|'alertdialog'|'button'|'checkbox'|'dialog'|'gridcell'|'link'|'log'|\n    'marquee'|'menuitem'|'menuitemcheckbox'|'menuitemradio'|'option'|\n    'progressbar'|'radio'|'scrollbar'|'searchbox'|'slider'|'spinbutton'|\n    'status'|'switch'|'tab'|'tabpanel'|'textbox'|'timer'|'tooltip'|'treeitem'|\n    'combobox'|'grid'|'listbox'|'menu'|'menubar'|'radiogroup'|'tablist'|'tree'|\n    'treegrid'|'application'|'article'|'cell'|'columnheader'|'definition'|\n    'directory'|'document'|'feed'|'figure'|'group'|'heading'|'img'|'list'|\n    'listitem'|'math'|'none'|'note'|'presentation'|'region'|'row'|'rowgroup'|\n    'rowheader'|'separator'|'table'|'term'|'text'|'toolbar'|'banner'|\n    'complementary'|'contentinfo'|'form'|'main'|'navigation'|'region'|'search'|\n    'doc-abstract'|'doc-acknowledgments'|'doc-afterword'|'doc-appendix'|\n    'doc-backlink'|'doc-biblioentry'|'doc-bibliography'|'doc-biblioref'|\n    'doc-chapter'|'doc-colophon'|'doc-conclusion'|'doc-cover'|'doc-credit'|\n    'doc-credits'|'doc-dedication'|'doc-endnote'|'doc-endnotes'|'doc-epigraph'|\n    'doc-epilogue'|'doc-errata'|'doc-example'|'doc-footnote'|'doc-foreword'|\n    'doc-glossary'|'doc-glossref'|'doc-index'|'doc-introduction'|'doc-noteref'|\n    'doc-notice'|'doc-pagebreak'|'doc-pagelist'|'doc-part'|'doc-preface'|\n    'doc-prologue'|'doc-pullquote'|'doc-qna'|'doc-subtitle'|'doc-tip'|'doc-toc';\n\n/**\n * Enables a host custom element to be the target for aria roles and attributes.\n * Components should set the `elementInternals.role` property.\n *\n * By default, aria components are tab focusable. Provide a `focusable: false`\n * option for components that should not be tab focusable, such as\n * `role=\"listbox\"`.\n *\n * This function will also polyfill aria `ElementInternals` properties for\n * Firefox.\n *\n * @param ctor The `ReactiveElement` constructor to set up.\n * @param options Options to configure the element's host aria.\n */\nexport function setupHostAria(\n    ctor: typeof ReactiveElement, {focusable}: SetupHostAriaOptions = {}) {\n  if (focusable !== false) {\n    ctor.addInitializer(host => {\n      host.addController({\n        hostConnected() {\n          if (host.hasAttribute('tabindex')) {\n            return;\n          }\n\n          host.tabIndex = 0;\n        }\n      });\n    });\n  }\n\n  if (isServer || 'role' in Element.prototype) {\n    return;\n  }\n\n  // Polyfill reflective aria properties for Firefox\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    ctor.createProperty(ariaProperty, {\n      attribute: ariaPropertyToAttribute(ariaProperty),\n      reflect: true,\n    });\n  }\n\n  ctor.createProperty('role', {reflect: true});\n}\n\n/**\n * Options for setting up a host element as an aria target.\n */\nexport interface SetupHostAriaOptions {\n  /**\n   * Whether or not the element can be focused with the tab key. Defaults to\n   * true.\n   *\n   * Set this to false for aria roles that should not be tab focusable, such as\n   * `role=\"listbox\"`.\n   */\n  focusable?: boolean;\n}\n\n/**\n * Polyfills an element and its `ElementInternals` to support `ARIAMixin`\n * properties on internals. This is needed for Firefox.\n *\n * `setupHostAria()` must be called for the element class.\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     setupHostAria(XButton);\n *   }\n *\n *   private internals =\n *       polyfillElementInternalsAria(this, this.attachInternals());\n *\n *   constructor() {\n *     super();\n *     this.internals.role = 'button';\n *   }\n * }\n */\nexport function polyfillElementInternalsAria(\n    host: ReactiveElement, internals: ElementInternals) {\n  if (checkIfElementInternalsSupportsAria(internals)) {\n    return internals;\n  }\n\n  if (!('role' in host)) {\n    throw new Error('Missing setupHostAria()');\n  }\n\n  let firstConnectedCallbacks:\n      Array<{property: ARIAProperty | 'role', callback: () => void}> = [];\n  let hasBeenConnected = false;\n\n  // Add support for Firefox, which has not yet implement ElementInternals aria\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    let internalAriaValue: string|null = null;\n    Object.defineProperty(internals, ariaProperty, {\n      enumerable: true,\n      configurable: true,\n      get() {\n        return internalAriaValue;\n      },\n      set(value: string|null) {\n        const setValue = () => {\n          internalAriaValue = value;\n          if (!hasBeenConnected) {\n            firstConnectedCallbacks.push(\n                {property: ariaProperty, callback: setValue});\n            return;\n          }\n\n          // Dynamic lookup rather than hardcoding all properties.\n          // tslint:disable-next-line:no-dict-access-on-struct-type\n          host[ariaProperty] = value;\n        };\n\n        setValue();\n      },\n    });\n  }\n\n  let internalRoleValue: string|null = null;\n  Object.defineProperty(internals, 'role', {\n    enumerable: true,\n    configurable: true,\n    get() {\n      return internalRoleValue;\n    },\n    set(value: string|null) {\n      const setRole = () => {\n        internalRoleValue = value;\n\n        if (!hasBeenConnected) {\n          firstConnectedCallbacks.push({\n            property: 'role',\n            callback: setRole,\n          });\n          return;\n        }\n\n        if (value === null) {\n          host.removeAttribute('role');\n        } else {\n          host.setAttribute('role', value);\n        }\n      };\n\n      setRole();\n    },\n  });\n\n  host.addController({\n    hostConnected() {\n      if (hasBeenConnected) {\n        return;\n      }\n\n      hasBeenConnected = true;\n\n      const propertiesSetByUser = new Set<ARIAProperty|'role'>();\n\n      // See which properties were set by the user on host before we apply\n      // internals values as attributes to host. Needs to be done in another\n      // for loop because the callbacks set these attributes on host.\n      for (const {property} of firstConnectedCallbacks) {\n        const wasSetByUser =\n            host.getAttribute(ariaPropertyToAttribute(property)) !== null ||\n            // Dynamic lookup rather than hardcoding all properties.\n            // tslint:disable-next-line:no-dict-access-on-struct-type\n            host[property] !== undefined;\n\n        if (wasSetByUser) {\n          propertiesSetByUser.add(property);\n        }\n      }\n\n      for (const {property, callback} of firstConnectedCallbacks) {\n        // If the user has set the attribute or property, do not override the\n        // user's value\n        if (propertiesSetByUser.has(property)) {\n          continue;\n        }\n\n        callback();\n      }\n\n      // Remove strong callback references\n      firstConnectedCallbacks = [];\n    }\n  });\n\n  return internals;\n}\n\n\n// Separate function so that typescript doesn't complain about internals being\n// \"never\".\nfunction checkIfElementInternalsSupportsAria(internals: ElementInternals) {\n  return 'role' in internals;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveElement} from 'lit';\n\nimport {ARIA_PROPERTIES, ariaPropertyToAttribute} from './aria.js';\n\n/**\n * Sets up a `ReactiveElement` constructor to enable updates when delegating\n * aria attributes. Elements may bind `this.aria*` properties to `aria-*`\n * attributes in their render functions.\n *\n * This function will:\n * - Call `requestUpdate()` when an aria attribute changes.\n * - Add `role=\"presentation\"` to the host.\n *\n * NOTE: The following features are not currently supported:\n * - Delegating IDREF attributes (ex: `aria-labelledby`, `aria-controls`)\n * - Delegating the `role` attribute\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     requestUpdateOnAriaChange(XButton);\n *   }\n *\n *   protected override render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nexport function requestUpdateOnAriaChange(ctor: typeof ReactiveElement) {\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    ctor.createProperty(ariaProperty, {\n      attribute: ariaPropertyToAttribute(ariaProperty),\n      reflect: true,\n    });\n  }\n\n  ctor.addInitializer(element => {\n    const controller = {\n      hostConnected() {\n        element.setAttribute('role', 'presentation');\n      }\n    };\n\n    element.addController(controller);\n  });\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement {\n *   static formAssociated = true;\n *\n *   [internals] = this.attachInternals();\n * }\n *\n * function getForm(element: MyElement) {\n *   return element[internals].form;\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n\n/**\n * An instance with `ElementInternals`.\n *\n * Use this when protected access is needed for an instance's `ElementInternals`\n * from other files. A unique symbol is used to access the internals.\n */\nexport interface WithInternals {\n  /**\n   * An instance's `ElementInternals`.\n   */\n  [internals]: ElementInternals;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Re-dispatches an event from the provided element.\n *\n * This function is useful for forwarding non-composed events, such as `change`\n * events.\n *\n * @example\n * class MyInput extends LitElement {\n *   render() {\n *     return html`<input @change=${this.redispatchEvent}>`;\n *   }\n *\n *   protected redispatchEvent(event: Event) {\n *     redispatchEvent(this, event);\n *   }\n * }\n *\n * @param element The element to dispatch the event from.\n * @param event The event to re-dispatch.\n * @return Whether or not the event was dispatched (if cancelable).\n */\nexport function redispatchEvent(element: Element, event: Event) {\n  // For bubbling events in SSR light DOM (or composed), stop their propagation\n  // and dispatch the copy.\n  if (event.bubbles && (!element.shadowRoot || event.composed)) {\n    event.stopPropagation();\n  }\n\n  const copy = Reflect.construct(event.constructor, [event.type, event]);\n  const dispatched = element.dispatchEvent(copy);\n  if (!dispatched) {\n    event.preventDefault();\n  }\n\n  return dispatched;\n}\n\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element: HTMLElement) {\n  const event = new MouseEvent('click', {bubbles: true});\n  element.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event: Event) {\n  // Event must start at the event target.\n  if (event.currentTarget !== event.target) {\n    return false;\n  }\n  // Event must not be retargeted from shadowRoot.\n  if (event.composedPath()[0] !== event.target) {\n    return false;\n  }\n  // Target must not be disabled; this should only occur for a synthetically\n  // dispatched click.\n  if ((event.target as EventTarget & {disabled: boolean}).disabled) {\n    return false;\n  }\n  // This is an activation if the event should not be squelched.\n  return !squelchEvent(event);\n}\n\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event: Event) {\n  const squelched = isSquelchingEvents;\n  if (squelched) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  squelchEventsForMicrotask();\n  return squelched;\n}\n\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n  isSquelchingEvents = true;\n  // Need to pause for just one microtask.\n  // tslint:disable-next-line\n  await null;\n  isSquelchingEvents = false;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveElement} from 'lit';\n\nimport {internals, WithInternals} from './element-internals.js';\n\n/**\n * A string indicating the form submission behavior of the element.\n *\n * - submit: The element submits the form. This is the default value if the\n * attribute is not specified, or if it is dynamically changed to an empty or\n * invalid value.\n * - reset: The element resets the form.\n * - button: The element does nothing.\n */\nexport type FormSubmitterType = 'button'|'submit'|'reset';\n\n/**\n * An element that can submit or reset a `<form>`, similar to\n * `<button type=\"submit\">`.\n */\nexport interface FormSubmitter extends ReactiveElement, WithInternals {\n  /**\n   * A string indicating the form submission behavior of the element.\n   *\n   * - submit: The element submits the form. This is the default value if the\n   * attribute is not specified, or if it is dynamically changed to an empty or\n   * invalid value.\n   * - reset: The element resets the form.\n   * - button: The element does nothing.\n   */\n  type: FormSubmitterType;\n\n  /**\n   * The HTML name to use in form submission. When combined with a `value`, the\n   * submitting button's name/value will be added to the form.\n   *\n   * Names must reflect to a `name` attribute for form integration.\n   */\n  name: string;\n\n  /**\n   * The value of the button. When combined with a `name`, the submitting\n   * button's name/value will be added to the form.\n   */\n  value: string;\n}\n\ntype FormSubmitterConstructor =\n    (new () => FormSubmitter)|(abstract new () => FormSubmitter);\n\n/**\n * Sets up an element's constructor to enable form submission. The element\n * instance should be form associated and have a `type` property.\n *\n * A click listener is added to each element instance. If the click is not\n * default prevented, it will submit the element's form, if any.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement {\n *   static {\n *     setupFormSubmitter(MyElement);\n *   }\n *\n *   static formAssociated = true;\n *\n *   type: FormSubmitterType = 'submit';\n *\n *   [internals] = this.attachInternals();\n * }\n * ```\n *\n * @param ctor The form submitter element's constructor.\n */\nexport function setupFormSubmitter(ctor: FormSubmitterConstructor) {\n  if (isServer) {\n    return;\n  }\n\n  (ctor as unknown as typeof ReactiveElement).addInitializer(instance => {\n    const submitter = instance as FormSubmitter;\n    submitter.addEventListener('click', async event => {\n      const {type, [internals]: elementInternals} = submitter;\n      const {form} = elementInternals;\n      if (!form || type === 'button') {\n        return;\n      }\n\n      // Wait a microtask for event bubbling to complete.\n      await new Promise<void>(resolve => {\n        resolve();\n      });\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (type === 'reset') {\n        form.reset();\n        return;\n      }\n\n      // form.requestSubmit(submitter) does not work with form associated custom\n      // elements. This patches the dispatched submit event to add the correct\n      // `submitter`.\n      // See https://github.com/WICG/webcomponents/issues/814\n      form.addEventListener('submit', submitEvent => {\n        Object.defineProperty(submitEvent, 'submitter', {\n          configurable: true,\n          enumerable: true,\n          get: () => submitter,\n        });\n      }, {capture: true, once: true});\n\n      elementInternals.setFormValue(submitter.value);\n      form.requestSubmit();\n    });\n  });\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {html as staticHtml, literal} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {internals} from '../../internal/controller/element-internals.js';\nimport {dispatchActivationClick, isActivationClick} from '../../internal/controller/events.js';\nimport {FormSubmitter, FormSubmitterType, setupFormSubmitter} from '../../internal/controller/form-submitter.js';\n\n/**\n * A button component.\n */\nexport abstract class Button extends LitElement implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(Button);\n    setupFormSubmitter(Button);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /**\n   * Whether or not the button is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * The URL that the link button points to.\n   */\n  @property() href = '';\n\n  /**\n   * Where to display the linked `href` URL for a link button. Common options\n   * include `_blank` to open in a new tab.\n   */\n  @property() target: '_blank'|'_parent'|'_self'|'_top'|'' = '';\n\n  /**\n   * Whether to render the icon at the inline end of the label rather than the\n   * inline start.\n   *\n   * _Note:_ Link buttons cannot have trailing icons.\n   */\n  @property({type: Boolean, attribute: 'trailing-icon'}) trailingIcon = false;\n\n  /**\n   * Whether to display the icon or not.\n   */\n  @property({type: Boolean, attribute: 'has-icon'}) hasIcon = false;\n\n  @property() type: FormSubmitterType = 'submit';\n\n  @property() value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  @query('.button') private readonly buttonElement!: HTMLElement|null;\n\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n\n  /** @private */\n  [internals] =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', this.handleActivationClick);\n    }\n  }\n\n  override focus() {\n    this.buttonElement?.focus();\n  }\n\n  override blur() {\n    this.buttonElement?.blur();\n  }\n\n  protected override render() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n\n    const button = this.href ? literal`a` : literal`button`;\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return staticHtml`\n      <${button}\n        class=\"button ${classMap(this.getRenderClasses())}\"\n        ?disabled=${isDisabled}\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-haspopup=\"${ariaHasPopup || nothing}\"\n        aria-expanded=\"${ariaExpanded || nothing}\"\n        href=${this.href || nothing}\n        target=${this.target || nothing}\n      >${this.renderContent()}</${button}>`;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'button--icon-leading': !this.trailingIcon && this.hasIcon,\n      'button--icon-trailing': this.trailingIcon && this.hasIcon,\n    };\n  }\n\n  protected renderElevation?(): unknown;\n\n  protected renderOutline?(): unknown;\n\n  private renderContent() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n    const icon =\n        html`<slot name=\"icon\" @slotchange=\"${this.handleSlotChange}\"></slot>`;\n\n    return html`\n      ${this.renderElevation?.()}\n      ${this.renderOutline?.()}\n      <md-focus-ring part=\"focus-ring\"></md-focus-ring>\n      <md-ripple class=\"button__ripple\" ?disabled=\"${isDisabled}\"></md-ripple>\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"button__label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n\n  private readonly handleActivationClick = (event: MouseEvent) => {\n    if (!isActivationClick((event)) || !this.buttonElement) {\n      return;\n    }\n    this.focus();\n    dispatchActivationClick(this.buttonElement);\n  };\n\n  private handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * A filled button component.\n */\nexport class FilledButton extends Button {\n  protected override renderElevation() {\n    return html`<md-elevation></md-elevation>`;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_container-color: var(--md-filled-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-elevation: var(--md-filled-button-container-elevation, 0);--_container-height: var(--md-filled-button-container-height, 40px);--_container-shadow-color: var(--md-filled-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-shape: var(--md-filled-button-container-shape, 9999px);--_disabled-container-color: var(--md-filled-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-button-focus-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-container-elevation: var(--md-filled-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-button-hover-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-button-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-filled-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-button-pressed-label-text-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-color: var(--md-filled-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_leading-space: var(--md-filled-button-leading-space, 24px);--_trailing-space: var(--md-filled-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-button-with-trailing-icon-trailing-space, 16px);--_container-shape-start-start: var( --md-filled-button-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-filled-button-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-filled-button-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-filled-button-container-shape-end-start, var(--_container-shape) )}/*# sourceMappingURL=filled-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`md-elevation{transition-duration:280ms}.button:disabled md-elevation{transition:none}.button{--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color)}.button:focus{--md-elevation-level: var(--_focus-container-elevation)}.button:hover{--md-elevation-level: var(--_hover-container-elevation)}.button:active{--md-elevation-level: var(--_pressed-container-elevation)}.button:disabled{--md-elevation-level: var(--_disabled-container-elevation)}/*# sourceMappingURL=shared-elevation-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;height:var(--_container-height);outline:none;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){cursor:default;pointer-events:none}.button{display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-inline-size:64px;border:none;outline:none;user-select:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;inline-size:100%;position:relative;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);gap:8px}.button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute}.button::-moz-focus-inner{padding:0;border:0}.button:hover{color:var(--_hover-label-text-color);cursor:pointer}.button:focus{color:var(--_focus-label-text-color)}.button:active{color:var(--_pressed-label-text-color);outline:none}.button:disabled .button__label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.button:disabled::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.button::before{content:\"\";box-sizing:border-box;border:1px solid CanvasText;border-radius:inherit;inset:0;pointer-events:none;position:absolute}.button:disabled{--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-opacity: 1}}.button,.button__ripple{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.button::after,.button::before,md-elevation,.button__ripple{z-index:-1}.button--icon-leading{padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}.button--icon-trailing{padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}.link-button-wrapper{inline-size:100%}.button ::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}.button:hover ::slotted([slot=icon]){color:var(--_hover-icon-color)}.button:focus ::slotted([slot=icon]){color:var(--_focus-icon-color)}.button:active ::slotted([slot=icon]){color:var(--_pressed-icon-color)}.button:disabled ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=none]) .touch{display:none}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledButton} from './internal/filled-button.js';\nimport {styles as filledStyles} from './internal/filled-styles.css.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.css.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-button': MdFilledButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The filled button’s contrasting surface color makes it the\n * most prominent button after the FAB. It’s used for final or unblocking\n * actions in a flow.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-button')\nexport class MdFilledButton extends FilledButton {\n  static override styles = [sharedStyles, sharedElevationStyles, filledStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * A filled tonal button component.\n */\nexport class FilledTonalButton extends Button {\n  protected override renderElevation() {\n    return html`<md-elevation></md-elevation>`;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_container-color: var(--md-filled-tonal-button-container-color, var(--md-sys-color-secondary-container, #e8def8));--_container-elevation: var(--md-filled-tonal-button-container-elevation, 0);--_container-height: var(--md-filled-tonal-button-container-height, 40px);--_container-shadow-color: var(--md-filled-tonal-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-shape: var(--md-filled-tonal-button-container-shape, 9999px);--_disabled-container-color: var(--md-filled-tonal-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-tonal-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-tonal-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-tonal-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-tonal-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-tonal-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-tonal-button-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-container-elevation: var(--md-filled-tonal-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-tonal-button-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-color: var(--md-filled-tonal-button-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-opacity: var(--md-filled-tonal-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-tonal-button-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_label-text-font: var(--md-filled-tonal-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-tonal-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-tonal-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-tonal-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-tonal-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-tonal-button-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-color: var(--md-filled-tonal-button-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filled-tonal-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-tonal-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-tonal-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-tonal-button-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-icon-color: var(--md-filled-tonal-button-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-color: var(--md-filled-tonal-button-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-size: var(--md-filled-tonal-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-tonal-button-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_leading-space: var(--md-filled-tonal-button-leading-space, 24px);--_trailing-space: var(--md-filled-tonal-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-tonal-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-tonal-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-tonal-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-tonal-button-with-trailing-icon-trailing-space, 16px);--_container-shape-start-start: var( --md-filled-tonal-button-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-filled-tonal-button-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-filled-tonal-button-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-filled-tonal-button-container-shape-end-start, var(--_container-shape) )}/*# sourceMappingURL=filled-tonal-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledTonalButton} from './internal/filled-tonal-button.js';\nimport {styles as tonalStyles} from './internal/filled-tonal-styles.css.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.css.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-tonal-button': MdFilledTonalButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Filled tonal buttons have a lighter background color and\n * darker label color, making them less visually prominent than a regular,\n * filled button. They’re still used for final or unblocking actions in a flow,\n * but do so with less emphasis.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-tonal-button')\nexport class MdFilledTonalButton extends FilledTonalButton {\n  static override styles = [sharedStyles, sharedElevationStyles, tonalStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * An outlined button component.\n */\nexport class OutlinedButton extends Button {\n  protected override renderOutline() {\n    return html`<span class=\"button__outline\"></span>`;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_container-height: var(--md-outlined-button-container-height, 40px);--_container-shape: var(--md-outlined-button-container-shape, 9999px);--_disabled-label-text-color: var(--md-outlined-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-button-disabled-label-text-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-button-disabled-outline-opacity, 0.12);--_focus-label-text-color: var(--md-outlined-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-outlined-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-outlined-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-outlined-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-outlined-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-outlined-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-outlined-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-outlined-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_outline-color: var(--md-outlined-button-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-button-outline-width, 1px);--_pressed-label-text-color: var(--md-outlined-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-outline-color: var(--md-outlined-button-pressed-outline-color, var(--md-sys-color-outline, #79747e));--_pressed-state-layer-color: var(--md-outlined-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-outlined-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-outlined-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-outlined-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-outlined-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-outlined-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-outlined-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-outlined-button-icon-size, 18px);--_pressed-icon-color: var(--md-outlined-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-space: var(--md-outlined-button-leading-space, 24px);--_trailing-space: var(--md-outlined-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-outlined-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-outlined-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-outlined-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-outlined-button-with-trailing-icon-trailing-space, 16px);--_container-color: none;--_disabled-container-color: none;--_disabled-container-opacity: 0;--_container-shape-start-start: var( --md-outlined-button-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-outlined-button-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-outlined-button-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-outlined-button-container-shape-end-start, var(--_container-shape) )}.button__outline{inset:0;border-style:solid;position:absolute;box-sizing:border-box;border-color:var(--_outline-color);border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.button:active .button__outline{border-color:var(--_pressed-outline-color)}.button:disabled .button__outline{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}@media(forced-colors: active){.button:disabled .button__outline{opacity:1}}.button__outline,.button__ripple{border-width:var(--_outline-width)}.button__ripple{inline-size:calc(100% - 2*var(--_outline-width));block-size:calc(100% - 2*var(--_outline-width));border-style:solid;border-color:rgba(0,0,0,0)}/*# sourceMappingURL=outlined-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedButton} from './internal/outlined-button.js';\nimport {styles as outlinedStyles} from './internal/outlined-styles.css.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-button': MdOutlinedButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Use an outlined button for actions that need attention but\n * aren’t the primary action, such as “See all” or “Add to cart.” This is also\n * the button to use for giving someone the opportunity to change their mind or\n * escape a flow.\n *\n * __Example usages:__\n * - Reply\n * - View all\n * - Add to cart\n * - Take out of trash\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-button')\nexport class MdOutlinedButton extends OutlinedButton {\n  static override styles = [sharedStyles, outlinedStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, PropertyValues, render, TemplateResult} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {EASING} from '../../internal/motion/animation.js';\n\n/**\n * A field component.\n */\nexport class Field extends LitElement {\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean}) error = false;\n  @property({type: Boolean}) focused = false;\n  @property() label = '';\n  @property({type: Boolean}) populated = false;\n  @property({type: Boolean}) required = false;\n  @property({type: Boolean}) resizable = false;\n  @property({attribute: 'supporting-text'}) supportingText = '';\n  @property({attribute: 'error-text'}) errorText = '';\n  @property({type: Number}) count = -1;\n  @property({type: Number}) max = -1;\n\n  /**\n   * Whether or not the field has leading content.\n   */\n  @property({type: Boolean, attribute: 'has-start'}) hasStart = false;\n\n  /**\n   * Whether or not the field has trailing content.\n   */\n  @property({type: Boolean, attribute: 'has-end'}) hasEnd = false;\n\n  @queryAssignedElements({slot: 'aria-describedby'})\n  private readonly slottedAriaDescribedBy!: HTMLElement[];\n\n  private get counterText() {\n    if (this.count < 0 || this.max < 0) {\n      return '';\n    }\n\n    return `${this.count} / ${this.max}`;\n  }\n\n  private get supportingOrErrorText() {\n    return this.error && this.errorText ? this.errorText : this.supportingText;\n  }\n\n  @state() private isAnimating = false;\n  private labelAnimation?: Animation;\n  /**\n   * When set to true, the error text's `role=\"alert\"` will be removed, then\n   * re-added after an animation frame. This will re-announce an error message\n   * to screen readers.\n   */\n  @state() private refreshErrorAlert = false;\n  @state() private disableTransitions = false;\n  @query('.label.floating') private readonly floatingLabelEl!: HTMLElement|null;\n  @query('.label.resting') private readonly restingLabelEl!: HTMLElement|null;\n  @query('.container') private readonly containerEl!: HTMLElement|null;\n\n  /**\n   * Re-announces the field's error supporting text to screen readers.\n   *\n   * Error text announces to screen readers anytime it is visible and changes.\n   * Use the method to re-announce the message when the text has not changed,\n   * but announcement is still needed (such as for `reportValidity()`).\n   */\n  reannounceError() {\n    this.refreshErrorAlert = true;\n  }\n\n  protected override update(props: PropertyValues<Field>) {\n    // Client-side property updates\n    const isDisabledChanging =\n        props.has('disabled') && props.get('disabled') !== undefined;\n    if (isDisabledChanging) {\n      this.disableTransitions = true;\n    }\n\n    // When disabling, remove focus styles if focused.\n    if (this.disabled && this.focused) {\n      props.set('focused', true);\n      this.focused = false;\n    }\n\n    // Animate if focused or populated change.\n    this.animateLabelIfNeeded({\n      wasFocused: props.get('focused'),\n      wasPopulated: props.get('populated')\n    });\n\n    super.update(props);\n  }\n\n  protected override render() {\n    const floatingLabel = this.renderLabel(/*isFloating*/ true);\n    const restingLabel = this.renderLabel(/*isFloating*/ false);\n    const outline = this.renderOutline?.(floatingLabel);\n    const classes = {\n      'disabled': this.disabled,\n      'disable-transitions': this.disableTransitions,\n      'error': this.error && !this.disabled,\n      'focused': this.focused,\n      'with-start': this.hasStart,\n      'with-end': this.hasEnd,\n      'populated': this.populated,\n      'resizable': this.resizable,\n      'required': this.required,\n      'no-label': !this.label,\n    };\n\n    return html`\n      <div class=\"field ${classMap(classes)}\">\n        <div class=\"container-overflow\">\n          ${this.renderBackground?.()}\n          ${this.renderIndicator?.()}\n          ${outline}\n          <div class=\"container\">\n            <div class=\"start\">\n              <slot name=\"start\"></slot>\n            </div>\n            <div class=\"middle\">\n              <div class=\"label-wrapper\">\n                ${restingLabel}\n                ${outline ? nothing : floatingLabel}\n              </div>\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"end\">\n              <slot name=\"end\"></slot>\n            </div>\n          </div>\n        </div>\n        ${this.renderSupportingText()}\n      </div>\n    `;\n  }\n\n  protected override updated(changed: PropertyValues<Field>) {\n    if (changed.has('supportingText') || changed.has('errorText') ||\n        changed.has('count') || changed.has('max')) {\n      this.updateSlottedAriaDescribedBy();\n    }\n\n    if (this.refreshErrorAlert) {\n      // The past render cycle removed the role=\"alert\" from the error message.\n      // Re-add it after an animation frame to re-announce the error.\n      requestAnimationFrame(() => {\n        this.refreshErrorAlert = false;\n      });\n    }\n\n    if (this.disableTransitions) {\n      requestAnimationFrame(() => {\n        this.disableTransitions = false;\n      });\n    }\n  }\n\n  protected renderBackground?(): TemplateResult;\n  protected renderIndicator?(): TemplateResult;\n  protected renderOutline?(floatingLabel: unknown): TemplateResult;\n\n  private renderSupportingText() {\n    const {supportingOrErrorText, counterText} = this;\n    if (!supportingOrErrorText && !counterText) {\n      return nothing;\n    }\n\n    // Always render the supporting text span so that our `space-around`\n    // container puts the counter at the end.\n    const start = html`<span>${supportingOrErrorText}</span>`;\n    // Conditionally render counter so we don't render the extra `gap`.\n    // TODO(b/244473435): add aria-label and announcements\n    const end = counterText ?\n        html`<span class=\"counter\">${counterText}</span>` :\n        nothing;\n\n    // Announce if there is an error and error text visible.\n    // If refreshErrorAlert is true, do not announce. This will remove the\n    // role=\"alert\" attribute. Another render cycle will happen after an\n    // animation frame to re-add the role.\n    const shouldErrorAnnounce =\n        this.error && this.errorText && !this.refreshErrorAlert;\n    const role = shouldErrorAnnounce ? 'alert' : nothing;\n    return html`\n      <div class=\"supporting-text\" role=${role}>${start}${end}</div>\n      <slot name=\"aria-describedby\" @slotchange=${\n        this.updateSlottedAriaDescribedBy}></slot>\n    `;\n  }\n\n  private updateSlottedAriaDescribedBy() {\n    for (const element of this.slottedAriaDescribedBy) {\n      render(html`${this.supportingOrErrorText} ${this.counterText}`, element);\n      element.setAttribute('hidden', '');\n    }\n  }\n\n  private renderLabel(isFloating: boolean) {\n    if (!this.label) {\n      return nothing;\n    }\n\n    let visible: boolean;\n    if (isFloating) {\n      // Floating label is visible when focused/populated or when animating.\n      visible = this.focused || this.populated || this.isAnimating;\n    } else {\n      // Resting label is visible when unfocused. It is never visible while\n      // animating.\n      visible = !this.focused && !this.populated && !this.isAnimating;\n    }\n\n    const classes = {\n      'hidden': !visible,\n      'floating': isFloating,\n      'resting': !isFloating,\n    };\n\n    // Add '*' if a label is present and the field is required\n    const labelText = `${this.label}${this.required ? '*' : ''}`;\n\n    return html`\n      <span class=\"label ${classMap(classes)}\"\n        aria-hidden=${!visible}\n      >${labelText}</span>\n    `;\n  }\n\n  private animateLabelIfNeeded({wasFocused, wasPopulated}: {\n    wasFocused?: boolean,\n    wasPopulated?: boolean\n  }) {\n    if (!this.label) {\n      return;\n    }\n\n    wasFocused ??= this.focused;\n    wasPopulated ??= this.populated;\n    const wasFloating = wasFocused || wasPopulated;\n    const shouldBeFloating = this.focused || this.populated;\n    if (wasFloating === shouldBeFloating) {\n      return;\n    }\n\n    this.isAnimating = true;\n    this.labelAnimation?.cancel();\n\n    // Only one label is visible at a time for clearer text rendering.\n    // The floating label is visible and used during animation. At the end of\n    // the animation, it will either remain visible (if floating) or hide and\n    // the resting label will be shown.\n    //\n    // We don't use forward filling because if the dimensions of the text field\n    // change (leading icon removed, density changes, etc), then the animation\n    // will be inaccurate.\n    //\n    // Re-calculating the animation each time will prevent any visual glitches\n    // from appearing.\n    // TODO(b/241113345): use animation tokens\n    this.labelAnimation = this.floatingLabelEl?.animate(\n        this.getLabelKeyframes(), {duration: 150, easing: EASING.STANDARD});\n\n    this.labelAnimation?.addEventListener('finish', () => {\n      // At the end of the animation, update the visible label.\n      this.isAnimating = false;\n    });\n  }\n\n  private getLabelKeyframes() {\n    const {floatingLabelEl, restingLabelEl} = this;\n    if (!floatingLabelEl || !restingLabelEl) {\n      return [];\n    }\n\n    const {x: floatingX, y: floatingY, height: floatingHeight} =\n        floatingLabelEl.getBoundingClientRect();\n    const {x: restingX, y: restingY, height: restingHeight} =\n        restingLabelEl.getBoundingClientRect();\n    const floatingScrollWidth = floatingLabelEl.scrollWidth;\n    const restingScrollWidth = restingLabelEl.scrollWidth;\n    // Scale by width ratio instead of font size since letter-spacing will scale\n    // incorrectly. Using the width we can better approximate the adjusted\n    // scale and compensate for tracking and overflow.\n    // (use scrollWidth instead of width to account for clipped labels)\n    const scale = restingScrollWidth / floatingScrollWidth;\n    const xDelta = restingX - floatingX;\n    // The line-height of the resting and floating label are different. When\n    // we move the floating label down to the resting label's position, it won't\n    // exactly match because of this. We need to adjust by half of what the\n    // final scaled floating label's height will be.\n    const yDelta = restingY - floatingY +\n        Math.round((restingHeight - floatingHeight * scale) / 2);\n\n    // Create the two transforms: floating to resting (using the calculations\n    // above), and resting to floating (re-setting the transform to initial\n    // values).\n    const restTransform =\n        `translateX(${xDelta}px) translateY(${yDelta}px) scale(${scale})`;\n    const floatTransform = `translateX(0) translateY(0) scale(1)`;\n\n    // Constrain the floating labels width to a scaled percentage of the\n    // resting label's width. This will prevent long clipped labels from\n    // overflowing the container.\n    const restingClientWidth = restingLabelEl.clientWidth;\n    const isRestingClipped = restingScrollWidth > restingClientWidth;\n    const width = isRestingClipped ? `${restingClientWidth / scale}px` : '';\n    if (this.focused || this.populated) {\n      return [\n        {transform: restTransform, width}, {transform: floatTransform, width}\n      ];\n    }\n\n    return [\n      {transform: floatTransform, width}, {transform: restTransform, width}\n    ];\n  }\n\n  getSurfacePositionClientRect() {\n    return this.containerEl!.getBoundingClientRect();\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Field} from './field.js';\n\n/**\n * A filled field component.\n */\nexport class FilledField extends Field {\n  protected override renderBackground() {\n    return html`\n      <div class=\"background\"></div>\n      <div class=\"state-layer\"></div>\n    `;\n  }\n\n  protected override renderIndicator() {\n    return html`<div class=\"active-indicator\"></div>`;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_active-indicator-color: var(--md-filled-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-field-active-indicator-height, 1px);--_bottom-space: var(--md-filled-field-bottom-space, 16px);--_container-color: var(--md-filled-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_container-shape-start-start: var( --md-filled-field-container-shape-start-start, var(--md-filled-field-container-shape, 4px) );--_container-shape-start-end: var( --md-filled-field-container-shape-start-end, var(--md-filled-field-container-shape, 4px) );--_container-shape-end-end: var( --md-filled-field-container-shape-end-end, var(--md-filled-field-container-shape, 0px) );--_container-shape-end-start: var( --md-filled-field-container-shape-end-start, var(--md-filled-field-container-shape, 0px) );--_content-color: var(--md-filled-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-filled-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-filled-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-filled-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-weight: var(--md-filled-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-active-indicator-color: var(--md-filled-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-field-disabled-container-opacity, 0.04);--_disabled-content-color: var(--md-filled-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-filled-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-filled-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-filled-field-disabled-leading-content-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-filled-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-filled-field-disabled-trailing-content-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-content-color: var(--md-filled-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-active-indicator-color: var(--md-filled-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-content-color: var(--md-filled-field-error-focus-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-label-text-color: var(--md-filled-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-filled-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-filled-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-content-color: var(--md-filled-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-filled-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-filled-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-filled-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-filled-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-filled-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-field-focus-active-indicator-height, 3px);--_focus-content-color: var(--md-filled-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-filled-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-filled-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-field-hover-active-indicator-height, 1px);--_hover-content-color: var(--md-filled-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-content-color: var(--md-filled-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-filled-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-filled-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-filled-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-filled-field-leading-space, 16px);--_supporting-text-color: var(--md-filled-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-filled-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-filled-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-filled-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-filled-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-filled-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-filled-field-top-space, 16px);--_trailing-content-color: var(--md-filled-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-filled-field-trailing-space, 16px);--_with-label-bottom-space: var(--md-filled-field-with-label-bottom-space, 8px);--_with-label-top-space: var(--md-filled-field-with-label-top-space, 8px)}.background,.state-layer{border-radius:inherit;inset:0;pointer-events:none;position:absolute}.background{background:var(--_container-color)}.state-layer{visibility:hidden}.field:not(.disabled):hover .state-layer{visibility:visible}.label.floating{position:absolute;top:var(--_with-label-top-space)}.field:not(.with-start) .label-wrapper{margin-inline-start:var(--_leading-space)}.field:not(.with-end) .label-wrapper{margin-inline-end:var(--_trailing-space)}.active-indicator{inset:auto 0 0 0;pointer-events:none;position:absolute;width:100%}.active-indicator::before,.active-indicator::after{border-bottom:var(--_active-indicator-height) solid var(--_active-indicator-color);inset:auto 0 0 0;content:\"\";position:absolute;width:100%}.active-indicator::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .active-indicator::after{opacity:1}.field:not(.with-start) .content ::slotted(*){padding-inline-start:var(--_leading-space)}.field:not(.with-end) .content ::slotted(*){padding-inline-end:var(--_trailing-space)}.field:not(.no-label) .content ::slotted(:not(textarea)){padding-bottom:var(--_with-label-bottom-space);padding-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}.field:not(.no-label) .content ::slotted(textarea){margin-bottom:var(--_with-label-bottom-space);margin-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}:hover .active-indicator::before{border-bottom-color:var(--_hover-active-indicator-color);border-bottom-width:var(--_hover-active-indicator-height)}.active-indicator::after{border-bottom-color:var(--_focus-active-indicator-color);border-bottom-width:var(--_focus-active-indicator-height)}:hover .state-layer{background:var(--_hover-state-layer-color);opacity:var(--_hover-state-layer-opacity)}.disabled .active-indicator::before{border-bottom-color:var(--_disabled-active-indicator-color);border-bottom-width:var(--_disabled-active-indicator-height);opacity:var(--_disabled-active-indicator-opacity)}.disabled .background{background:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.error .active-indicator::before{border-bottom-color:var(--_error-active-indicator-color)}.error:hover .active-indicator::before{border-bottom-color:var(--_error-hover-active-indicator-color)}.error:hover .state-layer{background:var(--_error-hover-state-layer-color);opacity:var(--_error-hover-state-layer-opacity)}.error .active-indicator::after{border-bottom-color:var(--_error-focus-active-indicator-color)}.resizable .container{bottom:var(--_focus-active-indicator-height);clip-path:inset(var(--_focus-active-indicator-height) 0 0 0)}.resizable .container>*{top:var(--_focus-active-indicator-height)}/*# sourceMappingURL=filled-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;resize:both}.field{display:flex;flex:1;flex-direction:column;writing-mode:horizontal-tb;max-width:100%}.container-overflow{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:flex;height:100%;position:relative}.container{align-items:center;border-radius:inherit;display:flex;flex:1;max-height:100%;min-height:100%;min-width:min-content;position:relative}.field,.container-overflow{resize:inherit}.resizable:not(.disabled) .container{resize:inherit;overflow:hidden}.disabled{pointer-events:none}.start,.middle,.end{display:flex;box-sizing:border-box;height:100%;position:relative}.start{color:var(--_leading-content-color)}.end{color:var(--_trailing-content-color)}.start,.end{align-items:center;justify-content:center}.with-start .start,.with-end .end{min-width:48px}.with-start .start{margin-inline-end:4px}.with-end .end{margin-inline-start:4px}.middle{align-items:stretch;align-self:baseline;flex:1}.content{color:var(--_content-color);display:flex;flex:1;opacity:0;transition:opacity 83ms cubic-bezier(0.2, 0, 0, 1)}.no-label .content,.focused .content,.populated .content{opacity:1;transition-delay:67ms}:is(.disabled,.disable-transitions) .content{transition:none}.content ::slotted(*){all:unset;color:currentColor;font-family:var(--_content-font);font-size:var(--_content-size);line-height:var(--_content-line-height);font-weight:var(--_content-weight);width:100%;white-space:pre-wrap}.content ::slotted(:not(textarea)){padding-top:var(--_top-space);padding-bottom:var(--_bottom-space)}.content ::slotted(textarea){margin-top:var(--_top-space);margin-bottom:var(--_bottom-space)}:hover .content{color:var(--_hover-content-color)}:hover .start{color:var(--_hover-leading-content-color)}:hover .end{color:var(--_hover-trailing-content-color)}.focused .content{color:var(--_focus-content-color)}.focused .start{color:var(--_focus-leading-content-color)}.focused .end{color:var(--_focus-trailing-content-color)}.disabled .content{color:var(--_disabled-content-color)}.disabled.no-label .content,.disabled.focused .content,.disabled.populated .content{opacity:var(--_disabled-content-opacity)}.disabled .start{color:var(--_disabled-leading-content-color);opacity:var(--_disabled-leading-content-opacity)}.disabled .end{color:var(--_disabled-trailing-content-color);opacity:var(--_disabled-trailing-content-opacity)}.error .content{color:var(--_error-content-color)}.error .start{color:var(--_error-leading-content-color)}.error .end{color:var(--_error-trailing-content-color)}.error:hover .content{color:var(--_error-hover-content-color)}.error:hover .start{color:var(--_error-hover-leading-content-color)}.error:hover .end{color:var(--_error-hover-trailing-content-color)}.error.focused .content{color:var(--_error-focus-content-color)}.error.focused .start{color:var(--_error-focus-leading-content-color)}.error.focused .end{color:var(--_error-focus-trailing-content-color)}.label{box-sizing:border-box;color:var(--_label-text-color);overflow:hidden;max-width:100%;text-overflow:ellipsis;white-space:nowrap;z-index:1;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);width:min-content}.label-wrapper{inset:0;pointer-events:none;position:absolute}.label.resting{position:absolute;top:var(--_top-space)}.label.floating{font-size:var(--_label-text-populated-size);line-height:var(--_label-text-populated-line-height);transform-origin:top left}.label.hidden{opacity:0}.no-label .label{display:none}.label-wrapper{inset:0;position:absolute;text-align:initial}:hover .label{color:var(--_hover-label-text-color)}.focused .label{color:var(--_focus-label-text-color)}.disabled .label{color:var(--_disabled-label-text-color)}.disabled .label:not(.hidden){opacity:var(--_disabled-label-text-opacity)}.error .label{color:var(--_error-label-text-color)}.error:hover .label{color:var(--_error-hover-label-text-color)}.error.focused .label{color:var(--_error-focus-label-text-color)}.supporting-text{color:var(--_supporting-text-color);display:flex;font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);gap:16px;justify-content:space-between;padding-inline-start:var(--_supporting-text-leading-space);padding-inline-end:var(--_supporting-text-trailing-space);padding-top:var(--_supporting-text-top-space)}.supporting-text :nth-child(2){flex-shrink:0}:hover .supporting-text{color:var(--_hover-supporting-text-color)}.focus .supporting-text{color:var(--_focus-supporting-text-color)}.disabled .supporting-text{color:var(--_disabled-supporting-text-color);opacity:var(--_disabled-supporting-text-opacity)}.error .supporting-text{color:var(--_error-supporting-text-color)}.error:hover .supporting-text{color:var(--_error-hover-supporting-text-color)}.error.focus .supporting-text{color:var(--_error-focus-supporting-text-color)}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledField} from './internal/filled-field.js';\nimport {styles as filledStyles} from './internal/filled-styles.css.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-field': MdFilledField;\n  }\n}\n\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-field')\nexport class MdFilledField extends FilledField {\n  static override styles = [sharedStyles, filledStyles];\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`@media(forced-colors: active){:host{--md-filled-text-field-disabled-active-indicator-color: GrayText;--md-filled-text-field-disabled-active-indicator-opacity: 1;--md-filled-text-field-disabled-input-text-color: GrayText;--md-filled-text-field-disabled-input-text-opacity: 1;--md-filled-text-field-disabled-label-text-color: GrayText;--md-filled-text-field-disabled-label-text-opacity: 1;--md-filled-text-field-disabled-leading-icon-color: GrayText;--md-filled-text-field-disabled-leading-icon-opacity: 1;--md-filled-text-field-disabled-supporting-text-color: GrayText;--md-filled-text-field-disabled-supporting-text-opacity: 1;--md-filled-text-field-disabled-trailing-icon-color: GrayText;--md-filled-text-field-disabled-trailing-icon-opacity: 1}}/*# sourceMappingURL=filled-forced-colors-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_leading-space: var(--md-filled-text-field-leading-space, 16px);--_trailing-space: var(--md-filled-text-field-trailing-space, 16px);--_top-space: var(--md-filled-text-field-top-space, 16px);--_bottom-space: var(--md-filled-text-field-bottom-space, 16px);--_input-text-prefix-trailing-space: var(--md-filled-text-field-input-text-prefix-trailing-space, 2px);--_input-text-suffix-leading-space: var(--md-filled-text-field-input-text-suffix-leading-space, 2px);--_with-label-top-space: var(--md-filled-text-field-with-label-top-space, 8px);--_with-label-bottom-space: var(--md-filled-text-field-with-label-bottom-space, 8px);--_focus-caret-color: var(--md-filled-text-field-focus-caret-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-color: var(--md-filled-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-text-field-active-indicator-height, 1px);--_caret-color: var(--md-filled-text-field-caret-color, var(--md-sys-color-primary, #6750a4));--_container-color: var(--md-filled-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_container-shape-start-start: var( --md-filled-text-field-container-shape-start-start, var(--md-filled-text-field-container-shape, 4px) );--_container-shape-start-end: var( --md-filled-text-field-container-shape-start-end, var(--md-filled-text-field-container-shape, 4px) );--_container-shape-end-end: var( --md-filled-text-field-container-shape-end-end, var(--md-filled-text-field-container-shape, 0px) );--_container-shape-end-start: var( --md-filled-text-field-container-shape-end-start, var(--md-filled-text-field-container-shape, 0px) );--_disabled-active-indicator-color: var(--md-filled-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-text-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-text-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-text-field-disabled-container-opacity, 0.04);--_disabled-input-text-color: var(--md-filled-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-input-text-opacity: var(--md-filled-text-field-disabled-input-text-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-text-field-disabled-label-text-opacity, 0.38);--_disabled-leading-icon-color: var(--md-filled-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-filled-text-field-disabled-leading-icon-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-text-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-filled-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-filled-text-field-disabled-trailing-icon-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-active-indicator-color: var(--md-filled-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-caret-color: var(--md-filled-text-field-error-focus-caret-color, var(--md-sys-color-error, #b3261e));--_error-focus-input-text-color: var(--md-filled-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-filled-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-icon-color: var(--md-filled-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-icon-color: var(--md-filled-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-input-text-color: var(--md-filled-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-icon-color: var(--md-filled-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-text-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-icon-color: var(--md-filled-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_error-input-text-color: var(--md-filled-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-label-text-color: var(--md-filled-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-icon-color: var(--md-filled-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-icon-color: var(--md-filled-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-text-field-focus-active-indicator-height, 3px);--_focus-input-text-color: var(--md-filled-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-filled-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-color: var(--md-filled-text-field-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-text-field-hover-active-indicator-height, 1px);--_hover-input-text-color: var(--md-filled-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-text-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-icon-color: var(--md-filled-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-text-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-filled-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-color: var(--md-filled-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_input-text-font: var(--md-filled-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_input-text-line-height: var(--md-filled-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_input-text-placeholder-color: var(--md-filled-text-field-input-text-placeholder-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-prefix-color: var(--md-filled-text-field-input-text-prefix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-size: var(--md-filled-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_input-text-suffix-color: var(--md-filled-text-field-input-text-suffix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-weight: var(--md-filled-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_label-text-color: var(--md-filled-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-icon-color: var(--md-filled-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-filled-text-field-leading-icon-size, 24px);--_supporting-text-color: var(--md-filled-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-filled-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-weight: var(--md-filled-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_trailing-icon-color: var(--md-filled-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-filled-text-field-trailing-icon-size, 24px);--md-filled-field-active-indicator-color: var(--_active-indicator-color);--md-filled-field-active-indicator-height: var(--_active-indicator-height);--md-filled-field-bottom-space: var(--_bottom-space);--md-filled-field-container-color: var(--_container-color);--md-filled-field-container-shape-end-end: var(--_container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_container-shape-start-start);--md-filled-field-content-color: var(--_input-text-color);--md-filled-field-content-font: var(--_input-text-font);--md-filled-field-content-line-height: var(--_input-text-line-height);--md-filled-field-content-size: var(--_input-text-size);--md-filled-field-content-weight: var(--_input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_error-active-indicator-color);--md-filled-field-error-content-color: var(--_error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_error-label-text-color);--md-filled-field-error-leading-content-color: var(--_error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_label-text-color);--md-filled-field-label-text-font: var(--_label-text-font);--md-filled-field-label-text-line-height: var(--_label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_label-text-populated-size);--md-filled-field-label-text-size: var(--_label-text-size);--md-filled-field-label-text-weight: var(--_label-text-weight);--md-filled-field-leading-content-color: var(--_leading-icon-color);--md-filled-field-leading-space: var(--_leading-space);--md-filled-field-supporting-text-color: var(--_supporting-text-color);--md-filled-field-supporting-text-font: var(--_supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_supporting-text-size);--md-filled-field-supporting-text-weight: var(--_supporting-text-weight);--md-filled-field-top-space: var(--_top-space);--md-filled-field-trailing-content-color: var(--_trailing-icon-color);--md-filled-field-trailing-space: var(--_trailing-space);--md-filled-field-with-label-bottom-space: var(--_with-label-bottom-space);--md-filled-field-with-label-top-space: var(--_with-label-top-space)}/*# sourceMappingURL=filled-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  TemplateResult,\n  CompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is TemplateResult | CompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is TemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties!.forEach((name) => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = '';\n        }\n      }\n    });\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const stringConverter = {\n  fromAttribute(value: string|null): string {\n    return value ?? '';\n  },\n  toAttribute(value: string): string|null {\n    return value || null;\n  }\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {live} from 'lit/directives/live.js';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {Field} from '../../field/internal/field.js';\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {redispatchEvent} from '../../internal/controller/events.js';\nimport {stringConverter} from '../../internal/controller/string-converter.js';\n\n/**\n * Input types that are compatible with the text field.\n */\nexport type TextFieldType =\n    'email'|'number'|'password'|'search'|'tel'|'text'|'url'|'textarea';\n\n/**\n * Input types that are not fully supported for the text field.\n */\nexport type UnsupportedTextFieldType =\n    'color'|'date'|'datetime-local'|'file'|'month'|'time'|'week';\n\n/**\n * Input types that are incompatible with the text field.\n */\nexport type InvalidTextFieldType =\n    'button'|'checkbox'|'hidden'|'image'|'radio'|'range'|'reset'|'submit';\n\n/**\n * A text field component.\n */\nexport abstract class TextField extends LitElement {\n  static {\n    requestUpdateOnAriaChange(TextField);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions:\n      ShadowRootInit = {...LitElement.shadowRootOptions, delegatesFocus: true};\n\n  /** @nocollapse  */\n  static readonly formAssociated = true;\n\n  @property({type: Boolean, reflect: true}) disabled = false;\n  /**\n   * Gets or sets whether or not the text field is in a visually invalid state.\n   *\n   * This error state overrides the error state controlled by\n   * `reportValidity()`.\n   */\n  @property({type: Boolean, reflect: true}) error = false;\n  /**\n   * The error message that replaces supporting text when `error` is true. If\n   * `errorText` is an empty string, then the supporting text will continue to\n   * show.\n   *\n   * This error message overrides the error message displayed by\n   * `reportValidity()`.\n   */\n  @property({attribute: 'error-text'}) errorText = '';\n  @property() label = '';\n  @property({type: Boolean, reflect: true}) required = false;\n  /**\n   * The current value of the text field. It is always a string.\n   */\n  @property() value = '';\n  /**\n   * An optional prefix to display before the input value.\n   */\n  @property({attribute: 'prefix-text'}) prefixText = '';\n  /**\n   * An optional suffix to display after the input value.\n   */\n  @property({attribute: 'suffix-text'}) suffixText = '';\n  /**\n   * Whether or not the text field has a leading icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-leading-icon'})\n  hasLeadingIcon = false;\n  /**\n   * Whether or not the text field has a trailing icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-trailing-icon'})\n  hasTrailingIcon = false;\n  /**\n   * Conveys additional information below the text field, such as how it should\n   * be used.\n   */\n  @property({attribute: 'supporting-text'}) supportingText = '';\n  /**\n   * Override the input text CSS `direction`. Useful for RTL languages that use\n   * LTR notation for fractions.\n   */\n  @property({attribute: 'text-direction'}) textDirection = '';\n\n  /**\n   * The number of rows to display for a `type=\"textarea\"` text field.\n   * Defaults to 2.\n   */\n  @property({type: Number}) rows = 2;\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this.internals.form;\n  }\n\n  /**\n   * The labels this element is associated with.\n   */\n  get labels() {\n    return this.internals.labels;\n  }\n\n  /**\n   * The HTML name to use in form submission.\n   */\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  // <input> properties\n  @property({reflect: true}) override inputMode = '';\n  /**\n   * Defines the greatest value in the range of permitted values.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max\n   */\n  @property() max = '';\n  /**\n   * The maximum number of characters a user can enter into the text field. Set\n   * to -1 for none.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength\n   */\n  @property({type: Number}) maxLength = -1;\n  /**\n   * Defines the most negative value in the range of permitted values.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min\n   */\n  @property() min = '';\n  /**\n   * The minimum number of characters a user can enter into the text field. Set\n   * to -1 for none.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength\n   */\n  @property({type: Number}) minLength = -1;\n  /**\n   * A regular expression that the text field's value must match to pass\n   * constraint validation.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern\n   */\n  @property() pattern = '';\n  @property({reflect: true, converter: stringConverter}) placeholder = '';\n\n  /**\n   * Indicates whether or not a user should be able to edit the text field's\n   * value.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly\n   */\n  @property({type: Boolean, reflect: true}) readOnly = false;\n\n  /**\n   * Gets or sets the direction in which selection occurred.\n   */\n  get selectionDirection() {\n    return this.getInputOrTextarea().selectionDirection;\n  }\n  set selectionDirection(value: 'forward'|'backward'|'none'|null) {\n    this.getInputOrTextarea().selectionDirection = value;\n  }\n\n  /**\n   * Gets or sets the end position or offset of a text selection.\n   */\n  get selectionEnd() {\n    return this.getInputOrTextarea().selectionEnd;\n  }\n  set selectionEnd(value: number|null) {\n    this.getInputOrTextarea().selectionEnd = value;\n  }\n\n  /**\n   * Gets or sets the starting position or offset of a text selection.\n   */\n  get selectionStart() {\n    return this.getInputOrTextarea().selectionStart;\n  }\n  set selectionStart(value: number|null) {\n    this.getInputOrTextarea().selectionStart = value;\n  }\n\n  /**\n   * Returns or sets the element's step attribute, which works with min and max\n   * to limit the increments at which a numeric or date-time value can be set.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#step\n   */\n  @property() step = '';\n\n  /**\n   * The `<input>` type to use, defaults to \"text\". The type greatly changes how\n   * the text field behaves.\n   *\n   * Text fields support a limited number of `<input>` types:\n   *\n   * - text\n   * - textarea\n   * - email\n   * - number\n   * - password\n   * - search\n   * - tel\n   * - url\n   *\n   * See\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types\n   * for more details on each input type.\n   */\n  @property({reflect: true})\n  type: TextFieldType|UnsupportedTextFieldType = 'text';\n\n  /**\n   * Describes what, if any, type of autocomplete functionality the input\n   * should provide.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\n   */\n  @property({reflect: true}) autocomplete = '';\n\n  /**\n   * Returns the text field's validation error message.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n   */\n  get validationMessage() {\n    this.syncValidity();\n    return this.internals.validationMessage;\n  }\n\n  /**\n   * Returns a `ValidityState` object that represents the validity states of the\n   * text field.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n   */\n  get validity() {\n    this.syncValidity();\n    return this.internals.validity;\n  }\n\n  /**\n   * The text field's value as a number.\n   */\n  get valueAsNumber() {\n    const input = this.getInput();\n    if (!input) {\n      return NaN;\n    }\n\n    return input.valueAsNumber;\n  }\n  set valueAsNumber(value: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.valueAsNumber = value;\n    this.value = input.value;\n  }\n\n  /**\n   * The text field's value as a Date.\n   */\n  get valueAsDate() {\n    const input = this.getInput();\n    if (!input) {\n      return null;\n    }\n\n    return input.valueAsDate;\n  }\n  set valueAsDate(value: Date|null) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.valueAsDate = value;\n    this.value = input.value;\n  }\n\n  /**\n   * Returns whether an element will successfully validate based on forms\n   * validation rules and constraints.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/willValidate\n   */\n  get willValidate() {\n    this.syncValidity();\n    return this.internals.willValidate;\n  }\n\n  protected abstract readonly fieldTag: StaticValue;\n\n  /**\n   * Returns true when the text field has been interacted with. Native\n   * validation errors only display in response to user interactions.\n   */\n  @state() private dirty = false;\n  @state() private focused = false;\n  /**\n   * Whether or not a native error has been reported via `reportValidity()`.\n   */\n  @state() private nativeError = false;\n  /**\n   * The validation message displayed from a native error via\n   * `reportValidity()`.\n   */\n  @state() private nativeErrorText = '';\n\n  private get hasError() {\n    return this.error || this.nativeError;\n  }\n\n  @query('.input')\n  private readonly inputOrTextarea?: HTMLInputElement|HTMLTextAreaElement|null;\n  @query('.field') private readonly field?: Field|null;\n  @queryAssignedElements({slot: 'leading-icon'})\n  private readonly leadingIcons!: Element[];\n  @queryAssignedElements({slot: 'trailing-icon'})\n  private readonly trailingIcons!: Element[];\n  // Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n  // Replace with this.internals.validity.customError when resolved.\n  private hasCustomValidityError = false;\n  private readonly internals =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  /**\n   * Checks the text field's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity\n   *\n   * @return true if the text field is valid, or false if not.\n   */\n  checkValidity() {\n    this.syncValidity();\n    return this.internals.checkValidity();\n  }\n\n  /**\n   * Checks the text field's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * This method will display or clear an error text message equal to the text\n   * field's `validationMessage`, unless the invalid event is canceled.\n   *\n   * Use `setCustomValidity()` to customize the `validationMessage`.\n   *\n   * This method can also be used to re-announce error messages to screen\n   * readers.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/reportValidity\n   *\n   * @return true if the text field is valid, or false if not.\n   */\n  reportValidity() {\n    let invalidEvent: Event|undefined;\n    this.addEventListener('invalid', event => {\n      invalidEvent = event;\n    }, {once: true});\n\n    const valid = this.checkValidity();\n    if (invalidEvent?.defaultPrevented) {\n      return valid;\n    }\n\n    const prevMessage = this.getErrorText();\n    this.nativeError = !valid;\n    this.nativeErrorText = this.validationMessage;\n\n    if (prevMessage === this.getErrorText()) {\n      this.field?.reannounceError();\n    }\n\n    return valid;\n  }\n\n  /**\n   * Selects all the text in the text field.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select\n   */\n  select() {\n    this.getInputOrTextarea().select();\n  }\n\n  /**\n   * Sets a custom validation error message for the text field. Use this for\n   * custom error message.\n   *\n   * When the error is not an empty string, the text field is considered invalid\n   * and `validity.customError` will be true.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity\n   *\n   * @param error The error message to display.\n   */\n  setCustomValidity(error: string) {\n    this.hasCustomValidityError = !!error;\n    this.internals.setValidity(\n        {customError: !!error}, error, this.getInputOrTextarea());\n  }\n\n  /**\n   * Replaces a range of text with a new string.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText\n   */\n  setRangeText(replacement: string): void;\n  setRangeText(\n      replacement: string, start: number, end: number,\n      selectionMode?: SelectionMode): void;\n  setRangeText(...args: unknown[]) {\n    // Calling setRangeText with 1 vs 3-4 arguments has different behavior.\n    // Use spread syntax and type casting to ensure correct usage.\n    this.getInputOrTextarea().setRangeText(\n        ...args as Parameters<HTMLInputElement['setRangeText']>);\n    this.value = this.getInputOrTextarea().value;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in the text field.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n   *\n   * @param start The offset into the text field for the start of the selection.\n   * @param end The offset into the text field for the end of the selection.\n   * @param direction The direction in which the selection is performed.\n   */\n  setSelectionRange(\n      start: number|null, end: number|null,\n      direction?: 'forward'|'backward'|'none') {\n    this.getInputOrTextarea().setSelectionRange(start, end, direction);\n  }\n\n  /**\n   * Decrements the value of a numeric type text field by `step` or `n` `step`\n   * number of times.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown\n   *\n   * @param stepDecrement The number of steps to decrement, defaults to 1.\n   */\n  stepDown(stepDecrement?: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.stepDown(stepDecrement);\n    this.value = input.value;\n  }\n\n  /**\n   * Increments the value of a numeric type text field by `step` or `n` `step`\n   * number of times.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp\n   *\n   * @param stepIncrement The number of steps to increment, defaults to 1.\n   */\n  stepUp(stepIncrement?: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.stepUp(stepIncrement);\n    this.value = input.value;\n  }\n\n  /**\n   * Reset the text field to its default value.\n   */\n  reset() {\n    this.dirty = false;\n    this.value = this.getAttribute('value') ?? '';\n    this.nativeError = false;\n    this.nativeErrorText = '';\n  }\n\n  override attributeChangedCallback(\n      attribute: string, newValue: string|null, oldValue: string|null) {\n    if (attribute === 'value' && this.dirty) {\n      // After user input, changing the value attribute no longer updates the\n      // text field's value (until reset). This matches native <input> behavior.\n      return;\n    }\n\n    super.attributeChangedCallback(attribute, newValue, oldValue);\n  }\n\n  protected override render() {\n    const classes = {\n      'disabled': this.disabled,\n      'error': !this.disabled && this.hasError,\n      'textarea': this.type === 'textarea',\n    };\n\n    return html`\n       <span class=\"text-field ${classMap(classes)}\">\n         ${this.renderField()}\n       </span>\n     `;\n  }\n\n  protected override updated(changedProperties: PropertyValues) {\n    // Keep changedProperties arg so that subclasses may call it\n\n    // If a property such as `type` changes and causes the internal <input>\n    // value to change without dispatching an event, re-sync it.\n    const value = this.getInputOrTextarea().value;\n    if (this.value !== value) {\n      // Note this is typically inefficient in updated() since it schedules\n      // another update. However, it is needed for the <input> to fully render\n      // before checking its value.\n      this.value = value;\n    }\n\n    this.internals.setFormValue(value);\n    // Sync validity when properties change, since validation properties may\n    // have changed.\n    this.syncValidity();\n  }\n\n  private renderField() {\n    return staticHtml`<${this.fieldTag}\n      class=\"field\"\n      count=${this.value.length}\n      ?disabled=${this.disabled}\n      ?error=${this.hasError}\n      error-text=${this.getErrorText()}\n      ?focused=${this.focused}\n      ?has-end=${this.hasTrailingIcon}\n      ?has-start=${this.hasLeadingIcon}\n      label=${this.label}\n      max=${this.maxLength}\n      ?populated=${!!this.value}\n      ?required=${this.required}\n      ?resizable=${this.type === 'textarea'}\n      supporting-text=${this.supportingText}\n    >\n      ${this.renderLeadingIcon()}\n      ${this.renderInputOrTextarea()}\n      ${this.renderTrailingIcon()}\n      <div id=\"description\" slot=\"aria-describedby\"></div>\n    </${this.fieldTag}>`;\n  }\n\n  private renderLeadingIcon() {\n    return html`\n       <span class=\"icon leading\" slot=\"start\">\n         <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n       </span>\n     `;\n  }\n\n  private renderTrailingIcon() {\n    return html`\n       <span class=\"icon trailing\" slot=\"end\">\n         <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}></slot>\n       </span>\n     `;\n  }\n\n  private renderInputOrTextarea() {\n    const style = {direction: this.textDirection};\n    const ariaLabel =\n        (this as ARIAMixinStrict).ariaLabel || this.label || nothing;\n    // lit-anaylzer `autocomplete` types are too strict\n    // tslint:disable-next-line:no-any\n    const autocomplete = this.autocomplete as any;\n\n    if (this.type === 'textarea') {\n      return html`\n        <textarea\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          ?disabled=${this.disabled}\n          maxlength=${this.maxLength > -1 ? this.maxLength : nothing}\n          minlength=${this.minLength > -1 ? this.minLength : nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          rows=${this.rows}\n          .value=${live(this.value)}\n          @change=${this.handleChange}\n          @focusin=${this.handleFocusin}\n          @focusout=${this.handleFocusout}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent}\n        ></textarea>\n      `;\n    }\n\n    const prefix = this.renderPrefix();\n    const suffix = this.renderSuffix();\n\n    // TODO(b/243805848): remove `as unknown as number` and `as any` once lit\n    // analyzer is fixed\n    // tslint:disable-next-line:no-any\n    const inputMode = this.inputMode as any;\n    return html`\n      <div class=\"input-wrapper\">\n        ${prefix}\n        <input\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          ?disabled=${this.disabled}\n          inputmode=${inputMode || nothing}\n          max=${(this.max || nothing) as unknown as number}\n          maxlength=${this.maxLength > -1 ? this.maxLength : nothing}\n          min=${(this.min || nothing) as unknown as number}\n          minlength=${this.minLength > -1 ? this.minLength : nothing}\n          pattern=${this.pattern || nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          step=${(this.step || nothing) as unknown as number}\n          type=${this.type}\n          .value=${live(this.value)}\n          @change=${this.redispatchEvent}\n          @focusin=${this.handleFocusin}\n          @focusout=${this.handleFocusout}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent}\n        >\n        ${suffix}\n      </div>\n    `;\n  }\n\n  private renderPrefix() {\n    return this.renderAffix(this.prefixText, /* isSuffix */ false);\n  }\n\n  private renderSuffix() {\n    return this.renderAffix(this.suffixText, /* isSuffix */ true);\n  }\n\n  private renderAffix(text: string, isSuffix: boolean) {\n    if (!text) {\n      return nothing;\n    }\n\n    const classes = {\n      'suffix': isSuffix,\n      'prefix': !isSuffix,\n    };\n\n    return html`<span class=\"${classMap(classes)}\">${text}</span>`;\n  }\n\n  private getErrorText() {\n    return this.error ? this.errorText : this.nativeErrorText;\n  }\n\n  private handleFocusin() {\n    this.focused = true;\n  }\n\n  private handleFocusout() {\n    this.focused = false;\n  }\n\n  private handleInput(event: InputEvent) {\n    this.dirty = true;\n    this.value = (event.target as HTMLInputElement).value;\n    // Sync validity so that clients can check validity on input.\n    this.syncValidity();\n  }\n\n  private handleChange(event: Event) {\n    // Sync validity so that clients can check validity on change.\n    this.syncValidity();\n    this.redispatchEvent(event);\n  }\n\n  private redispatchEvent(event: Event) {\n    redispatchEvent(this, event);\n  }\n\n  private getInputOrTextarea() {\n    if (!this.inputOrTextarea) {\n      // If the input is not yet defined, synchronously render.\n      // e.g.\n      // const textField = document.createElement('md-outlined-text-field');\n      // document.body.appendChild(textField);\n      // textField.focus(); // synchronously render\n      this.connectedCallback();\n      this.scheduleUpdate();\n    }\n\n    if (this.isUpdatePending) {\n      // If there are pending updates, synchronously perform them. This ensures\n      // that constraint validation properties (like `required`) are synced\n      // before interacting with input APIs that depend on them.\n      this.scheduleUpdate();\n    }\n\n    return this.inputOrTextarea!;\n  }\n\n  private getInput() {\n    if (this.type === 'textarea') {\n      return null;\n    }\n\n    return this.getInputOrTextarea() as HTMLInputElement;\n  }\n\n  private syncValidity() {\n    // Sync the internal <input>'s validity and the host's ElementInternals\n    // validity. We do this to re-use native `<input>` validation messages.\n    const input = this.getInputOrTextarea();\n    if (this.hasCustomValidityError) {\n      input.setCustomValidity(this.internals.validationMessage);\n    } else {\n      input.setCustomValidity('');\n    }\n\n    this.internals.setValidity(\n        input.validity, input.validationMessage, this.getInputOrTextarea());\n  }\n\n  private handleIconChange() {\n    this.hasLeadingIcon = this.leadingIcons.length > 0;\n    this.hasTrailingIcon = this.trailingIcons.length > 0;\n  }\n\n  /** @private */\n  formResetCallback() {\n    this.reset();\n  }\n\n  /** @private */\n  formStateRestoreCallback(state: string) {\n    this.value = state;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/filled-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {TextField} from './text-field.js';\n\n/**\n * A filled text field component.\n */\nexport class FilledTextField extends TextField {\n  protected readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;outline:none;resize:both;-webkit-tap-highlight-color:rgba(0,0,0,0)}.text-field,.field{width:100%}.text-field{display:inline-flex}.field{cursor:text}.disabled .field{cursor:default}.text-field,.textarea .field{resize:inherit}.icon{color:currentColor;display:flex;fill:currentColor}.icon ::slotted(*){display:flex}[hasstart] .icon.leading{font-size:var(--_leading-icon-size);height:var(--_leading-icon-size);width:var(--_leading-icon-size)}[hasend] .icon.trailing{font-size:var(--_trailing-icon-size);height:var(--_trailing-icon-size);width:var(--_trailing-icon-size)}.input-wrapper{display:flex}.input-wrapper>*{all:inherit;padding:0}.input{caret-color:var(--_caret-color);overflow-x:hidden;text-align:inherit}.input::placeholder{color:currentColor;opacity:1}.input::-webkit-calendar-picker-indicator{display:none}.input::-webkit-search-decoration,.input::-webkit-search-cancel-button{display:none}@media(forced-colors: active){.input{background-color:Field}}:focus-within .input{caret-color:var(--_focus-caret-color)}.error:focus-within .input{caret-color:var(--_error-focus-caret-color)}.text-field:not(.disabled) .prefix{color:var(--_input-text-prefix-color)}.text-field:not(.disabled) .suffix{color:var(--_input-text-suffix-color)}.text-field:not(.disabled) .input::placeholder{color:var(--_input-text-placeholder-color)}.prefix,.suffix{text-wrap:nowrap;width:min-content}.prefix{padding-inline-end:var(--_input-text-prefix-trailing-space)}.suffix{padding-inline-start:var(--_input-text-suffix-leading-space)}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../field/filled-field.js';\n\nimport {customElement} from 'lit/decorators.js';\nimport {literal} from 'lit/static-html.js';\n\nimport {styles as filledForcedColorsStyles} from './internal/filled-forced-colors-styles.css.js';\nimport {styles as filledStyles} from './internal/filled-styles.css.js';\nimport {FilledTextField} from './internal/filled-text-field.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\nexport {TextFieldType} from './internal/text-field.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-text-field': MdFilledTextField;\n  }\n}\n\n/**\n * TODO(b/228525797): Add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-text-field')\nexport class MdFilledTextField extends FilledTextField {\n  static override styles =\n      [sharedStyles, filledStyles, filledForcedColorsStyles];\n\n  protected override readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {dispatchActivationClick, isActivationClick, redispatchEvent} from '../../internal/controller/events.js';\n\n/**\n * A checkbox component.\n */\nexport class Checkbox extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Checkbox);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true\n  };\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /**\n   * Whether or not the checkbox is selected.\n   */\n  @property({type: Boolean}) checked = false;\n\n  /**\n   * Whether or not the checkbox is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Whether or not the checkbox is indeterminate.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * When true, require the checkbox to be selected when participating in\n   * form submission.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The value of the checkbox that is submitted with a form when selected.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n   */\n  @property() value = 'on';\n\n  /**\n   * The HTML name to use in form submission.\n   */\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this.internals.form;\n  }\n\n  /**\n   * The labels this element is associated with.\n   */\n  get labels() {\n    return this.internals.labels;\n  }\n\n  /**\n   * Returns a ValidityState object that represents the validity states of the\n   * checkbox.\n   *\n   * Note that checkboxes will only set `valueMissing` if `required` and not\n   * checked.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n   */\n  get validity() {\n    this.syncValidity();\n    return this.internals.validity;\n  }\n\n  /**\n   * Returns the native validation error message.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n   */\n  get validationMessage() {\n    this.syncValidity();\n    return this.internals.validationMessage;\n  }\n\n  /**\n   * Returns whether an element will successfully validate based on forms\n   * validation rules and constraints.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n   */\n  get willValidate() {\n    this.syncValidity();\n    return this.internals.willValidate;\n  }\n\n  @state() private prevChecked = false;\n  @state() private prevDisabled = false;\n  @state() private prevIndeterminate = false;\n  @query('input') private readonly input!: HTMLInputElement|null;\n  // Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n  // Replace with this.internals.validity.customError when resolved.\n  private hasCustomValidityError = false;\n  private readonly internals =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event)) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.input!);\n      });\n    }\n  }\n\n  /**\n   * Checks the checkbox's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity\n   *\n   * @return true if the checkbox is valid, or false if not.\n   */\n  checkValidity() {\n    this.syncValidity();\n    return this.internals.checkValidity();\n  }\n\n  /**\n   * Checks the checkbox's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * The `validationMessage` is reported to the user by the browser. Use\n   * `setCustomValidity()` to customize the `validationMessage`.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/reportValidity\n   *\n   * @return true if the checkbox is valid, or false if not.\n   */\n  reportValidity() {\n    this.syncValidity();\n    return this.internals.reportValidity();\n  }\n\n  /**\n   * Sets the checkbox's native validation error message. This is used to\n   * customize `validationMessage`.\n   *\n   * When the error is not an empty string, the checkbox is considered invalid\n   * and `validity.customError` will be true.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity\n   *\n   * @param error The error message to display.\n   */\n  setCustomValidity(error: string) {\n    this.hasCustomValidityError = !!error;\n    this.internals.setValidity({customError: !!error}, error, this.getInput());\n  }\n\n  protected override update(changed: PropertyValues<Checkbox>) {\n    if (changed.has('checked') || changed.has('disabled') ||\n        changed.has('indeterminate')) {\n      this.prevChecked = changed.get('checked') ?? this.checked;\n      this.prevDisabled = changed.get('disabled') ?? this.disabled;\n      this.prevIndeterminate =\n          changed.get('indeterminate') ?? this.indeterminate;\n    }\n\n    const shouldAddFormValue = this.checked && !this.indeterminate;\n    const state = String(this.checked);\n    this.internals.setFormValue(shouldAddFormValue ? this.value : null, state);\n    super.update(changed);\n  }\n\n  protected override render() {\n    const prevNone = !this.prevChecked && !this.prevIndeterminate;\n    const prevChecked = this.prevChecked && !this.prevIndeterminate;\n    const prevIndeterminate = this.prevIndeterminate;\n    const isChecked = this.checked && !this.indeterminate;\n    const isIndeterminate = this.indeterminate;\n\n    const containerClasses = classMap({\n      'disabled': this.disabled,\n      'selected': isChecked || isIndeterminate,\n      'unselected': !isChecked && !isIndeterminate,\n      'checked': isChecked,\n      'indeterminate': isIndeterminate,\n      'prev-unselected': prevNone,\n      'prev-checked': prevChecked,\n      'prev-indeterminate': prevIndeterminate,\n      'prev-disabled': this.prevDisabled,\n    });\n\n    // Needed for closure conformance\n    const {ariaLabel, ariaInvalid} = this as ARIAMixinStrict;\n    // Note: <input> needs to be rendered before the <svg> for\n    // form.reportValidity() to work in Chrome.\n    return html`\n      <div class=\"container ${containerClasses}\">\n        <input type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @change=${this.handleChange}\n        >\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n  }\n\n  protected override updated() {\n    // Sync validity when properties change, since validation properties may\n    // have changed.\n    this.syncValidity();\n  }\n\n  private handleChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.indeterminate = target.indeterminate;\n\n    redispatchEvent(this, event);\n  }\n\n  private syncValidity() {\n    // Sync the internal <input>'s validity and the host's ElementInternals\n    // validity. We do this to re-use native `<input>` validation messages.\n    const input = this.getInput();\n    if (this.hasCustomValidityError) {\n      input.setCustomValidity(this.internals.validationMessage);\n    } else {\n      input.setCustomValidity('');\n    }\n\n    this.internals.setValidity(\n        input.validity, input.validationMessage, this.getInput());\n  }\n\n  private getInput() {\n    if (!this.input) {\n      // If the input is not yet defined, synchronously render.\n      this.connectedCallback();\n      this.performUpdate();\n    }\n\n    if (this.isUpdatePending) {\n      // If there are pending updates, synchronously perform them. This ensures\n      // that constraint validation properties (like `required`) are synced\n      // before interacting with input APIs that depend on them.\n      this.scheduleUpdate();\n    }\n\n    return this.input!;\n  }\n\n  /** @private */\n  formResetCallback() {\n    // The checked property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.checked = this.hasAttribute('checked');\n  }\n\n  /** @private */\n  formStateRestoreCallback(state: string) {\n    this.checked = state === 'true';\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_container-shape: var(--md-checkbox-container-shape, 2px);--_container-size: var(--md-checkbox-container-size, 18px);--_icon-size: var(--md-checkbox-icon-size, 18px);--_selected-container-color: var(--md-checkbox-selected-container-color, var(--md-sys-color-primary, #6750a4));--_selected-disabled-container-color: var(--md-checkbox-selected-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_selected-disabled-container-opacity: var(--md-checkbox-selected-disabled-container-opacity, 0.38);--_selected-disabled-icon-color: var(--md-checkbox-selected-disabled-icon-color, var(--md-sys-color-surface, #fef7ff));--_selected-focus-container-color: var(--md-checkbox-selected-focus-container-color, var(--md-sys-color-primary, #6750a4));--_selected-focus-icon-color: var(--md-checkbox-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-hover-container-color: var(--md-checkbox-selected-hover-container-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-icon-color: var(--md-checkbox-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-hover-state-layer-color: var(--md-checkbox-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-opacity: var(--md-checkbox-selected-hover-state-layer-opacity, 0.08);--_selected-icon-color: var(--md-checkbox-selected-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-pressed-container-color: var(--md-checkbox-selected-pressed-container-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-icon-color: var(--md-checkbox-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-pressed-state-layer-color: var(--md-checkbox-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_selected-pressed-state-layer-opacity: var(--md-checkbox-selected-pressed-state-layer-opacity, 0.12);--_state-layer-shape: var(--md-checkbox-state-layer-shape, 9999px);--_state-layer-size: var(--md-checkbox-state-layer-size, 40px);--_disabled-container-opacity: var(--md-checkbox-disabled-container-opacity, 0.38);--_disabled-outline-color: var(--md-checkbox-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-width: var(--md-checkbox-disabled-outline-width, 2px);--_focus-outline-color: var(--md-checkbox-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-outline-width: var(--md-checkbox-focus-outline-width, 2px);--_hover-outline-color: var(--md-checkbox-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-checkbox-hover-outline-width, 2px);--_hover-state-layer-color: var(--md-checkbox-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-checkbox-hover-state-layer-opacity, 0.08);--_outline-color: var(--md-checkbox-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-width: var(--md-checkbox-outline-width, 2px);--_pressed-outline-color: var(--md-checkbox-pressed-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-outline-width: var(--md-checkbox-pressed-outline-width, 2px);--_pressed-state-layer-color: var(--md-checkbox-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-checkbox-pressed-state-layer-opacity, 0.12);--_container-shape-start-start: var( --md-checkbox-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-checkbox-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-checkbox-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-checkbox-container-shape-end-start, var(--_container-shape) );border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:inline-flex;height:var(--_container-size);position:relative;vertical-align:top;width:var(--_container-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-size))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.outline,.background,.icon{inset:0;position:absolute}.outline,.background{border-radius:inherit}.outline{border-color:var(--_outline-color);border-style:solid;border-width:var(--_outline-width);box-sizing:border-box}.background{background-color:var(--_selected-container-color)}.background,.icon{opacity:0;transition-duration:150ms,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15),linear;transform:scale(0.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:350ms,50ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1),linear;transform:scale(1)}md-ripple{border-radius:var(--_state-layer-shape);height:var(--_state-layer-size);inset:unset;width:var(--_state-layer-size);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.selected md-ripple{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}.icon{fill:var(--_selected-icon-color);height:var(--_icon-size);width:var(--_icon-size)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:150ms;animation-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15);transition-duration:150ms;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15)}.selected .mark{animation-duration:350ms;animation-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1);transition-duration:350ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px, -14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px, -10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{from{width:0}}:where(:hover) .outline{border-color:var(--_hover-outline-color);border-width:var(--_hover-outline-width)}:where(:hover) .background{background:var(--_selected-hover-container-color)}:where(:hover) .icon{fill:var(--_selected-hover-icon-color)}:where(:focus-within) .outline{border-color:var(--_focus-outline-color);border-width:var(--_focus-outline-width)}:where(:focus-within) .background{background:var(--_selected-focus-container-color)}:where(:focus-within) .icon{fill:var(--_selected-focus-icon-color)}:where(:active) .outline{border-color:var(--_pressed-outline-color);border-width:var(--_pressed-outline-width)}:where(:active) .background{background:var(--_selected-pressed-container-color)}:where(:active) .icon{fill:var(--_selected-pressed-icon-color)}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--_disabled-outline-color);border-width:var(--_disabled-outline-width);opacity:var(--_disabled-container-opacity)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--_selected-disabled-container-color);opacity:var(--_selected-disabled-container-opacity)}:where(.disabled) .icon{fill:var(--_selected-disabled-icon-color)}@media(forced-colors: active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}/*# sourceMappingURL=checkbox-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Checkbox} from './internal/checkbox.js';\nimport {styles} from './internal/checkbox-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-checkbox': MdCheckbox;\n  }\n}\n\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-checkbox')\nexport class MdCheckbox extends Checkbox {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * TODO(b/265336902): add docs\n */\nexport class Icon extends LitElement {\n  protected override render() {\n    return html`<slot></slot>`;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    const ariaHidden = this.getAttribute('aria-hidden');\n    if (ariaHidden === 'false') {\n      // Allow the user to set `aria-hidden=\"false\"` to create an icon that is\n      // announced by screenreaders.\n      this.removeAttribute('aria-hidden');\n      return;\n    }\n\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{font-size:24px;width:24px;height:24px;color:inherit;font-variation-settings:inherit;font-weight:400;font-family:var(--md-icon-font, Material Symbols Outlined);display:inline-flex;font-style:normal;line-height:1;overflow:hidden;letter-spacing:normal;text-transform:none;user-select:none;white-space:nowrap;word-wrap:normal;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale}::slotted(svg){fill:currentColor}::slotted(*){height:100%;width:100%}/*# sourceMappingURL=icon-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Icon} from './internal/icon.js';\nimport {styles} from './internal/icon-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-icon': MdIcon;\n  }\n}\n\n/**\n * @final\n * @suppress {visibility}\n */\n@customElement('md-icon')\nexport class MdIcon extends Icon {\n  /** @nocollapse */\n  static override styles = [styles];\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`@media(forced-colors: active){:host{--md-filled-select-text-field-disabled-active-indicator-color: GrayText;--md-filled-select-text-field-disabled-active-indicator-opacity: 1;--md-filled-select-text-field-disabled-input-text-color: GrayText;--md-filled-select-text-field-disabled-input-text-opacity: 1;--md-filled-select-text-field-disabled-label-text-color: GrayText;--md-filled-select-text-field-disabled-label-text-opacity: 1;--md-filled-select-text-field-disabled-leading-icon-color: GrayText;--md-filled-select-text-field-disabled-leading-icon-opacity: 1;--md-filled-select-text-field-disabled-supporting-text-color: GrayText;--md-filled-select-text-field-disabled-supporting-text-opacity: 1;--md-filled-select-text-field-disabled-trailing-icon-color: GrayText;--md-filled-select-text-field-disabled-trailing-icon-opacity: 1}}/*# sourceMappingURL=filled-forced-colors-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`@media(forced-colors: active){.menu{border-style:solid;border-color:CanvasText;border-width:1px}}/*# sourceMappingURL=forced-colors-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ListItem extends HTMLElement {\n  disabled: boolean;\n}\n\n/**\n * A record that describes a list item in a list with metadata such a reference\n * to the item and its index in the list.\n */\nexport interface ItemRecord<Item extends ListItem> {\n  item: Item;\n  index: number;\n}\n\n/**\n * Activates the first non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     first item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n */\nexport function activateFirstItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  // NOTE: These selector functions are static and not on the instance such\n  // that multiple operations can be chained and we do not have to re-query\n  // the DOM\n  const firstItem = getFirstActivatableItem(items, isActivatable);\n  if (firstItem) {\n    firstItem.tabIndex = 0;\n    firstItem.focus();\n  }\n  return firstItem;\n}\n\n/**\n * Activates the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     last item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @nocollapse\n */\nexport function activateLastItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  const lastItem = getLastActivatableItem(items, isActivatable);\n  if (lastItem) {\n    lastItem.tabIndex = 0;\n    lastItem.focus();\n  }\n  return lastItem;\n}\n\n/**\n * Deactivates the currently active item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to deactivate the\n *     active item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the deleselcted activated item including the item and\n *     the index of the item or `null` if none are deactivated.\n * @nocollapse\n */\nexport function deactivateActiveItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  const activeItem = getActiveItem(items, isActivatable);\n  if (activeItem) {\n    activeItem.item.tabIndex = -1;\n  }\n  return activeItem;\n}\n\n/**\n * Retrieves the first activated item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the first activated item including the item and the\n *     index of the item or `null` if none are activated.\n * @nocollapse\n */\nexport function getActiveItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.tabIndex === 0 && isActivatable(item)) {\n      return {\n        item,\n        index: i,\n      } as ItemRecord<Item>;\n    }\n  }\n  return null;\n}\n\n/**\n * Retrieves the first non-disabled item of a given array of items. This\n * the first item that is not disabled.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The first activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getFirstActivatableItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  for (const item of items) {\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Retrieves the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The last activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getLastActivatableItem<Item extends ListItem>(\n    items: Item[], isActivatable = isItemNotDisabled<Item>) {\n  for (let i = items.length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Retrieves the next non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The next activatable item or `null` if none are activatable.\n */\nexport function getNextItem<Item extends ListItem>(\n    items: Item[], index: number, isActivatable = isItemNotDisabled<Item>) {\n  for (let i = 1; i < items.length; i++) {\n    const nextIndex = (i + index) % items.length;\n    const item = items[nextIndex];\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return items[index] ? items[index] : null;\n}\n\n/**\n * Retrieves the previous non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The previous activatable item or `null` if none are activatable.\n */\nexport function getPrevItem<Item extends ListItem>(\n    items: Item[], index: number, isActivatable = isItemNotDisabled<Item>) {\n  for (let i = 1; i < items.length; i++) {\n    const prevIndex = (index - i + items.length) % items.length;\n    const item = items[prevIndex];\n\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return items[index] ? items[index] : null;\n}\n\n/**\n * Activates the next item and focuses it. If nothing is currently activated,\n * activates the first item.\n */\nexport function activateNextItem<Item extends ListItem>(\n    items: Item[], activeItemRecord: null|ItemRecord<Item>,\n    isActivatable = isItemNotDisabled<Item>): Item|null {\n  if (activeItemRecord) {\n    const next = getNextItem(items, activeItemRecord.index, isActivatable);\n\n    if (next) {\n      next.tabIndex = 0;\n      next.focus();\n    }\n\n    return next;\n  } else {\n    return activateFirstItem(items, isActivatable);\n  }\n}\n\n/**\n * Activates the previous item and focuses it. If nothing is currently\n * activated, activates the last item.\n */\nexport function activatePreviousItem<Item extends ListItem>(\n    items: Item[], activeItemRecord: null|ItemRecord<Item>,\n    isActivatable = isItemNotDisabled<Item>): Item|null {\n  if (activeItemRecord) {\n    const prev = getPrevItem(items, activeItemRecord.index, isActivatable);\n    if (prev) {\n      prev.tabIndex = 0;\n      prev.focus();\n    }\n    return prev;\n  } else {\n    return activateLastItem(items, isActivatable);\n  }\n}\n\n/**\n * Creates an event that requests the parent md-list to deactivate all other\n * items.\n */\nexport function createDeactivateItemsEvent() {\n  return new Event('deactivate-items', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the parent md-list to deactivate all\n * other items.\n */\nexport type DeactivateItemsEvent =\n    ReturnType<typeof createDeactivateItemsEvent>;\n\n/**\n * Creates an event that requests the menu to set `tabindex=0` on the item and\n * focus it. We use this pattern because List keeps track of what element is\n * active in the List by maintaining tabindex. We do not want list items\n * to set tabindex on themselves or focus themselves so that we can organize all\n * that logic in the parent List and Menus, and list item stays as dumb as\n * possible.\n */\nexport function createRequestActivationEvent() {\n  return new Event('request-activation', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the list activates and focuses the item.\n */\nexport type RequestActivationEvent =\n    ReturnType<typeof createRequestActivationEvent>;\n\n/**\n * The default `isActivatable` function, which checks if an item is not\n * disabled.\n *\n * @param item The item to check.\n * @return true if `item.disabled` is `false.\n */\nfunction isItemNotDisabled<Item extends ListItem>(item: Item) {\n  return !item.disabled;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {activateFirstItem, activateLastItem, activateNextItem, activatePreviousItem, getActiveItem, getFirstActivatableItem, ListItem} from './list-navigation-helpers.js';\n\n// TODO: move this file to List and make List use this\n\n/**\n * Default keys that trigger navigation.\n */\n// tslint:disable:enforce-name-casing Following Enum style\nexport const NavigableKeys = {\n  ArrowDown: 'ArrowDown',\n  ArrowLeft: 'ArrowLeft',\n  ArrowUp: 'ArrowUp',\n  ArrowRight: 'ArrowRight',\n  Home: 'Home',\n  End: 'End',\n} as const;\n// tslint:enable:enforce-name-casing\n\n/**\n * Default set of navigable keys.\n */\nexport type NavigableKeys = typeof NavigableKeys[keyof typeof NavigableKeys];\n\n/**\n * The configuration object to customize the behavior of the List Controller\n */\nexport interface ListControllerConfig<Item extends ListItem> {\n  /**\n   * A function that determines whether or not the given element is an Item\n   */\n  isItem: (item: HTMLElement) => item is Item;\n  /**\n   * A function that returns an array of elements to consider as items. For\n   * example, all the slotted elements.\n   */\n  getPossibleItems: () => HTMLElement[];\n  /**\n   * A function that returns whether or not the list is in an RTL context.\n   */\n  isRtl: () => boolean;\n  /**\n   * Deactivates an item such as setting the tabindex to -1 and or sets selected\n   * to false.\n   */\n  deactivateItem: (item: Item) => void;\n  /**\n   * Activates an item such as setting the tabindex to 1 and or sets selected to\n   * true (but does not focus).\n   */\n  activateItem: (item: Item) => void;\n  /**\n   * Whether or not the key should be handled by the list for navigation.\n   */\n  isNavigableKey: (key: string) => boolean;\n  /**\n   * Whether or not the item can be activated. Defaults to items that are not\n   * disabled.\n   */\n  isActivatable?: (item: Item) => boolean;\n}\n\n/**\n * A controller that handles list keyboard navigation and item management.\n */\nexport class ListController<Item extends ListItem> {\n  isItem: (item: HTMLElement) => item is Item;\n  private readonly getPossibleItems: () => HTMLElement[];\n  private readonly isRtl: () => boolean;\n  private readonly deactivateItem: (item: Item) => void;\n  private readonly activateItem: (item: Item) => void;\n  private readonly isNavigableKey: (key: string) => boolean;\n  private readonly isActivatable?: (item: Item) => boolean;\n\n  constructor(config: ListControllerConfig<Item>) {\n    const {\n      isItem,\n      getPossibleItems,\n      isRtl,\n      deactivateItem,\n      activateItem,\n      isNavigableKey,\n      isActivatable,\n    } = config;\n    this.isItem = isItem;\n    this.getPossibleItems = getPossibleItems;\n    this.isRtl = isRtl;\n    this.deactivateItem = deactivateItem;\n    this.activateItem = activateItem;\n    this.isNavigableKey = isNavigableKey;\n    this.isActivatable = isActivatable;\n  }\n\n  /**\n   * The items being managed by the list. Additionally, attempts to see if the\n   * object has a sub-item in the `.item` property.\n   */\n  get items(): Item[] {\n    const maybeItems = this.getPossibleItems();\n    const items: Item[] = [];\n\n    for (const itemOrParent of maybeItems) {\n      const isItem = this.isItem(itemOrParent);\n      // if the item is a list item, add it to the list of items\n      if (isItem) {\n        items.push(itemOrParent);\n        continue;\n      }\n\n      // If the item exposes an `item` property check if it is a list item.\n      const subItem = (itemOrParent as HTMLElement & {item?: Item}).item;\n      if (subItem && this.isItem(subItem)) {\n        items.push(subItem);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Handles keyboard navigation. Should be bound to the node that will act as\n   * the List.\n   */\n  handleKeydown = (event: KeyboardEvent) => {\n    const key = event.key;\n    if (event.defaultPrevented || !this.isNavigableKey(key)) {\n      return;\n    }\n    // do not use this.items directly in upcoming calculations so we don't\n    // re-query the DOM unnecessarily\n    const items = this.items;\n\n    if (!items.length) {\n      return;\n    }\n\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n\n    if (activeItemRecord) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n\n    event.preventDefault();\n\n    const isRtl = this.isRtl();\n    const inlinePrevious =\n        isRtl ? NavigableKeys.ArrowRight : NavigableKeys.ArrowLeft;\n    const inlineNext =\n        isRtl ? NavigableKeys.ArrowLeft : NavigableKeys.ArrowRight;\n\n    switch (key) {\n      // Activate the next item\n      case NavigableKeys.ArrowDown:\n      case inlineNext:\n        activateNextItem(items, activeItemRecord, this.isActivatable);\n        break;\n\n      // Activate the previous item\n      case NavigableKeys.ArrowUp:\n      case inlinePrevious:\n        activatePreviousItem(items, activeItemRecord, this.isActivatable);\n        break;\n\n      // Activate the first item\n      case NavigableKeys.Home:\n        activateFirstItem(items, this.isActivatable);\n        break;\n\n      // Activate the last item\n      case NavigableKeys.End:\n        activateLastItem(items, this.isActivatable);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Activates the next item in the list. If at the end of the list, the first\n   * item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activateNextItem(): Item|null {\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n    if (activeItemRecord) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n    return activateNextItem(items, activeItemRecord, this.isActivatable);\n  }\n\n  /**\n   * Activates the previous item in the list. If at the start of the list, the\n   * last item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activatePreviousItem(): Item|null {\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n    if (activeItemRecord) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n    return activatePreviousItem(items, activeItemRecord, this.isActivatable);\n  }\n\n  /**\n   * Listener to be bound to the `deactivate-items` item event.\n   */\n  onDeactivateItems = () => {\n    const items = this.items;\n\n    for (const item of items) {\n      this.deactivateItem(item);\n    }\n  };\n\n  /**\n   * Listener to be bound to the `request-activation` item event..\n   */\n  onRequestActivation = (event: Event) => {\n    this.onDeactivateItems();\n    const target = event.target as Item;\n    this.activateItem(target);\n    target.focus();\n  };\n\n  /**\n   * Listener to be bound to the `slotchange` event for the slot that renders\n   * the items.\n   */\n  onSlotchange = () => {\n    const items = this.items;\n    // Whether we have encountered an item that has been activated\n    let encounteredActivated = false;\n\n    for (const item of items) {\n      const isActivated = !item.disabled && item.tabIndex > -1;\n\n      if (isActivated && !encounteredActivated) {\n        encounteredActivated = true;\n        item.tabIndex = 0;\n        continue;\n      }\n\n      // Deactivate the rest including disabled\n      item.tabIndex = -1;\n    }\n\n    if (encounteredActivated) {\n      return;\n    }\n\n    const firstActivatableItem =\n        getFirstActivatableItem(items, this.isActivatable);\n\n    if (!firstActivatableItem) {\n      return;\n    }\n\n    firstActivatableItem.tabIndex = 0;\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\n\nimport {MenuItem} from './menuItemController.js';\nimport type {Corner, SurfacePositionTarget} from './surfacePositionController.js';\n\n/**\n * The interface needed for a Menu to work with other md-menu elements.\n */\nexport interface MenuSelf {\n  /**\n   * Whether or not the menu is currently opened.\n   */\n  open: boolean;\n  /**\n   * Skips the opening and closing animations.\n   */\n  quick: boolean;\n  /**\n   * Displays overflow content like a submenu.\n   *\n   * __NOTE__: This may cause adverse effects if you set\n   * `md-menu {max-height:...}`\n   * and have items overflowing items in the \"y\" direction.\n   */\n  hasOverflow: boolean;\n  /**\n   * Communicates to the menu that it is a submenu and should not handle the\n   * ArrowLeft button in LTR and ArrowRight button in RTL.\n   */\n  isSubmenu: boolean;\n  /**\n   * After closing, does not restore focus to the last focused element before\n   * the menu was opened.\n   */\n  skipRestoreFocus: boolean;\n  /**\n   * The corner of the anchor in which the menu should anchor to.\n   */\n  anchorCorner: Corner;\n  /**\n   * The corner of the menu in which the menu should anchor from.\n   */\n  menuCorner: Corner;\n  /**\n   * The element the menu should anchor to.\n   */\n  anchorElement: (HTMLElement&Partial<SurfacePositionTarget>)|null;\n  /**\n   * What the menu should focus by default when opened.\n   */\n  defaultFocus: FocusState;\n  /**\n   * An array of items managed by the list.\n   */\n  items: MenuItem[];\n  /**\n   * Opens the menu.\n   */\n  show: () => void;\n  /**\n   * Closes the menu.\n   */\n  close: () => void;\n}\n\n/**\n * The interface needed for a Menu to work with other md-menu elements. Useful\n * for keeping your types safe when wrapping `md-menu`.\n */\nexport type Menu = MenuSelf&LitElement;\n\n/**\n * The reason the `close-menu` event was dispatched.\n */\nexport interface Reason {\n  kind: string;\n}\n\n/**\n * The click selection reason for the `close-menu` event. The menu was closed\n * because an item was selected via user click.\n */\nexport interface ClickReason extends Reason {\n  kind: typeof CloseReason.CLICK_SELECTION;\n}\n\n/**\n * The keydown reason for the `close-menu` event. The menu was closed\n * because a specific key was pressed. The default closing keys for\n * `md-menu-item` are, Space, Enter or Escape.\n */\nexport interface KeydownReason extends Reason {\n  kind: typeof CloseReason.KEYDOWN;\n  key: string;\n}\n\n/**\n * The default menu closing reasons for the material md-menu package.\n */\nexport type DefaultReasons = ClickReason|KeydownReason;\n\n/**\n * Creates an event that closes any parent menus.\n */\nexport function createCloseMenuEvent<T extends Reason = DefaultReasons>(\n    initiator: MenuItem, reason: T) {\n  return new CustomEvent<\n      {initiator: MenuItem, itemPath: MenuItem[], reason: T}>('close-menu', {\n    bubbles: true,\n    composed: true,\n    detail: {initiator, reason, itemPath: [initiator]}\n  });\n}\n\n/**\n * Creates an event that signals to the menu that it should stay open on the\n * focusout event.\n */\nexport function createStayOpenOnFocusoutEvent() {\n  return new Event('stay-open-on-focusout', {bubbles: true, composed: true});\n}\n\n/**\n * Creates an event that signals to the menu that it should close open on the\n * focusout event.\n */\nexport function createCloseOnFocusoutEvent() {\n  return new Event('close-on-focusout', {bubbles: true, composed: true});\n}\n\n/**\n * Creates a default close menu event used by md-menu.\n */\nexport const createDefaultCloseMenuEvent = createCloseMenuEvent<DefaultReasons>;\n\n/**\n * The type of the default close menu event used by md-menu.\n */\n// tslint:disable-next-line\nexport type CloseMenuEvent<T extends Reason = DefaultReasons> =\n    ReturnType<typeof createCloseMenuEvent<T>>;\n\n/**\n * Creates an event that requests the given item be selected.\n */\nexport function createDeactivateTypeaheadEvent() {\n  return new Event('deactivate-typeahead', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the typeahead functionality of containing\n * menu be deactivated.\n */\nexport type DeactivateTypeaheadEvent =\n    ReturnType<typeof createDeactivateTypeaheadEvent>;\n\n/**\n * Creates an event that requests the typeahead functionality of containing menu\n * be activated.\n */\nexport function createActivateTypeaheadEvent() {\n  return new Event('activate-typeahead', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the typeahead functionality of containing\n * menu be activated.\n */\nexport type ActivateTypeaheadEvent =\n    ReturnType<typeof createActivateTypeaheadEvent>;\n\n/**\n * Keys that are used to navigate menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const NavigableKey = {\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  RIGHT: 'ArrowRight',\n  LEFT: 'ArrowLeft',\n} as const;\n\n/**\n * Keys that are used for selection in menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const SelectionKey = {\n  SPACE: 'Space',\n  ENTER: 'Enter',\n} as const;\n\n/**\n * Default close `Reason` kind values.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const CloseReason = {\n  CLICK_SELECTION: 'click-selection',\n  KEYDOWN: 'keydown',\n} as const;\n\n/**\n * Keys that can close menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const KeydownCloseKey = {\n  ESCAPE: 'Escape',\n  SPACE: SelectionKey.SPACE,\n  ENTER: SelectionKey.ENTER,\n} as const;\n\ntype Values<T> = T[keyof T];\n\n/**\n * Determines whether the given key code is a key code that should close the\n * menu.\n *\n * @param code The KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to close the\n * menu.\n */\nexport function isClosableKey(code: string):\n    code is Values<typeof KeydownCloseKey> {\n  return Object.values(KeydownCloseKey).some(value => (value === code));\n}\n\n/**\n * Determines whether the given key code is a key code that should select a menu\n * item.\n *\n * @param code They KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to select a\n * menu item.\n */\nexport function isSelectableKey(code: string):\n    code is Values<typeof SelectionKey> {\n  return Object.values(SelectionKey).some(value => (value === code));\n}\n\n/**\n * Determines whether a target element is contained inside another element's\n * composed tree.\n *\n * @param target The potential contained element.\n * @param container The potential containing element of the target.\n * @returns Whether the target element is contained inside the container's\n * composed subtree\n */\nexport function isElementInSubtree(\n    target: EventTarget, container: EventTarget) {\n  // Dispatch a composed, bubbling event to check its path to see if the\n  // newly-focused element is contained in container's subtree\n  const focusEv = new Event('md-contains', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  container.addEventListener('md-contains', listener);\n  target.dispatchEvent(focusEv);\n  container.removeEventListener('md-contains', listener);\n\n  const isContained = composedPath.length > 0;\n  return isContained;\n}\n\n/**\n * Element to focus on when menu is first opened.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const FocusState = {\n  NONE: 'none',\n  LIST_ROOT: 'list-root',\n  FIRST_ITEM: 'first-item',\n  LAST_ITEM: 'last-item'\n} as const;\n\n/**\n * Element to focus on when menu is first opened.\n */\nexport type FocusState = typeof FocusState[keyof typeof FocusState];", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\nimport {StyleInfo} from 'lit/directives/style-map.js';\n\n/**\n * An enum of supported Menu corners\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const Corner = {\n  END_START: 'end-start',\n  END_END: 'end-end',\n  START_START: 'start-start',\n  START_END: 'start-end',\n} as const;\n\n/**\n * A corner of a box in the standard logical property style of <block>_<inline>\n */\nexport type Corner = typeof Corner[keyof typeof Corner];\n\n/**\n * An interface that provides a method to customize the rect from which to\n * calculate the anchor positioning. Useful for when you want a surface to\n * anchor to an element in your shadow DOM rather than the host element.\n */\nexport interface SurfacePositionTarget extends HTMLElement {\n  getSurfacePositionClientRect?: () => DOMRect;\n}\n\n/**\n * The configurable options for the surface position controller.\n */\nexport interface SurfacePositionControllerProperties {\n  /**\n   * The corner of the anchor to align the surface's position.\n   */\n  anchorCorner: Corner;\n  /**\n   * The corner of the surface to align to the given anchor corner.\n   */\n  surfaceCorner: Corner;\n  /**\n   * The HTMLElement reference of the surface to be positioned.\n   */\n  surfaceEl: SurfacePositionTarget|null;\n  /**\n   * The HTMLElement reference of the anchor to align to.\n   */\n  anchorEl: SurfacePositionTarget|null;\n  /**\n   * Whether the positioning algorithim should calculate relative to the parent\n   * of the anchor element (absolute) or relative to the window (fixed).\n   *\n   * Examples for `position = 'fixed'`:\n   *\n   * - If there is no `position:relative` in the given parent tree and the\n   *   surface is `position:absolute`\n   * - If the surface is `position:fixed`\n   * - If the surface is in the \"top layer\"\n   * - The anchor and the surface do not share a common `position:relative`\n   *   ancestor\n   */\n  positioning: 'absolute'|'fixed';\n  /**\n   * Whether or not the surface should be \"open\" and visible\n   */\n  isOpen: boolean;\n  /**\n   * The number of pixels in which to offset from the inline axis relative to\n   * logical property.\n   *\n   * Positive is right in LTR and left in RTL.\n   */\n  xOffset: number;\n  /**\n   * The number of pixes in which to offset the block axis.\n   *\n   * Positive is down and negative is up.\n   */\n  yOffset: number;\n  /**\n   * The strategy to follow when repositioning the menu to stay inside the\n   * viewport. \"move\" will simply move the surface to stay in the viewport.\n   * \"resize\" will attempt to resize the surface.\n   *\n   * Both strategies will still attempt to flip the anchor and surface corners.\n   */\n  repositionStrategy: 'move'|'resize';\n  /**\n   * A function to call after the surface has been positioned.\n   */\n  onOpen: () => void;\n  /**\n   * A function to call before the surface should be closed. (A good time to\n   * perform animations while the surface is still visible)\n   */\n  beforeClose: () => Promise<void>;\n  /**\n   * A function to call after the surface has been closed.\n   */\n  onClose: () => void;\n}\n\n/**\n * Given a surface, an anchor, corners, and some options, this surface will\n * calculate the position of a surface to align the two given corners and keep\n * the surface inside the window viewport. It also provides a StyleInfo map that\n * can be applied to the surface to handle visiblility and position.\n */\nexport class SurfacePositionController implements ReactiveController {\n  // The current styles to apply to the surface.\n  private surfaceStylesInternal: StyleInfo = {\n    'display': 'none',\n  };\n  // Previous values stored for change detection. Open change detection is\n  // calculated separately so initialize it here.\n  private lastValues: SurfacePositionControllerProperties = {isOpen: false} as\n      SurfacePositionControllerProperties;\n\n  /**\n   * @param host The host to connect the controller to.\n   * @param getProperties A function that returns the properties for the\n   * controller.\n   */\n  constructor(\n      private readonly host: ReactiveControllerHost,\n      private readonly getProperties: () => SurfacePositionControllerProperties,\n  ) {\n    this.host.addController(this);\n  }\n\n  /**\n   * The StyleInfo map to apply to the surface via Lit's stylemap\n   */\n  get surfaceStyles() {\n    return this.surfaceStylesInternal;\n  }\n\n  /**\n   * Calculates the surface's new position required so that the surface's\n   * `surfaceCorner` aligns to the anchor's `anchorCorner` while keeping the\n   * surface inside the window viewport. This positioning also respects RTL by\n   * checking `getComputedStyle()` on the surface element.\n   */\n  async position() {\n    const {\n      surfaceEl,\n      anchorEl,\n      anchorCorner: anchorCornerRaw,\n      surfaceCorner: surfaceCornerRaw,\n      positioning,\n      xOffset,\n      yOffset,\n      repositionStrategy,\n    } = this.getProperties();\n    const anchorCorner = anchorCornerRaw.toLowerCase().trim();\n    const surfaceCorner = surfaceCornerRaw.toLowerCase().trim();\n\n    if (!surfaceEl || !anchorEl) {\n      return;\n    }\n\n    // Paint the surface transparently so that we can get the position and the\n    // rect info of the surface.\n    this.surfaceStylesInternal = {\n      'display': 'block',\n      'opacity': '0',\n    };\n\n    // Wait for it to be visible.\n    this.host.requestUpdate();\n    await this.host.updateComplete;\n\n    const surfaceRect = surfaceEl.getSurfacePositionClientRect ?\n        surfaceEl.getSurfacePositionClientRect() :\n        surfaceEl.getBoundingClientRect();\n    const anchorRect = anchorEl.getSurfacePositionClientRect ?\n        anchorEl.getSurfacePositionClientRect() :\n        anchorEl.getBoundingClientRect();\n    const [surfaceBlock, surfaceInline] =\n        surfaceCorner.split('-') as Array<'start'|'end'>;\n    const [anchorBlock, anchorInline] =\n        anchorCorner.split('-') as Array<'start'|'end'>;\n\n    // LTR depends on the direction of the SURFACE not the anchor.\n    const isLTR =\n        getComputedStyle(surfaceEl as HTMLElement).direction === 'ltr';\n\n    /*\n     * A diagram that helps describe some of the variables used in the following\n     * calculations.\n     *\n     * ┌───── inline/blockTopLayerOffset\n     * │       │\n     * │     ┌─▼───┐                  Window\n     * │    ┌┼─────┴────────────────────────┐\n     * │    ││                              │\n     * └──► ││  ┌──inline/blockAnchorOffset │\n     *      ││  │     │                     │\n     *      └┤  │  ┌──▼───┐                 │\n     *       │  │ ┌┼──────┤                 │\n     *       │  └─►│Anchor│                 │\n     *       │    └┴──────┘                 │\n     *       │                              │\n     *       │     ┌────────────────────────┼────┐\n     *       │     │ Surface                │    │\n     *       │     │                        │    │\n     *       │     │                        │    │\n     *       │     │                        │    │\n     *       │     │                        │    │\n     *       │     │                        │    │\n     *       └─────┼────────────────────────┘    ├┐\n     *             │ inline/blockOOBCorrection   ││\n     *             │                         │   ││\n     *             │                         ├──►││\n     *             │                         │   ││\n     *             └────────────────────────┐▼───┼┘\n     *                                      └────┘\n     */\n\n    // Calculate the block positioning properties\n    let {blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty} =\n        this.calculateBlock({\n          surfaceRect,\n          anchorRect,\n          anchorBlock,\n          surfaceBlock,\n          yOffset,\n          positioning\n        });\n\n    // If the surface should be out of bounds in the block direction, flip the\n    // surface and anchor corner block values and recalculate\n    if (blockOutOfBoundsCorrection) {\n      const flippedSurfaceBlock = surfaceBlock === 'start' ? 'end' : 'start';\n      const flippedAnchorBlock = anchorBlock === 'start' ? 'end' : 'start';\n\n      const flippedBlock = this.calculateBlock({\n        surfaceRect,\n        anchorRect,\n        anchorBlock: flippedAnchorBlock,\n        surfaceBlock: flippedSurfaceBlock,\n        yOffset,\n        positioning\n      });\n\n      // In the case that the flipped verion would require less out of bounds\n      // correcting, use the flipped corner block values\n      if (blockOutOfBoundsCorrection >\n          flippedBlock.blockOutOfBoundsCorrection) {\n        blockInset = flippedBlock.blockInset;\n        blockOutOfBoundsCorrection = flippedBlock.blockOutOfBoundsCorrection;\n        surfaceBlockProperty = flippedBlock.surfaceBlockProperty;\n      }\n    }\n\n    // Calculate the inline positioning properties\n    let {inlineInset, inlineOutOfBoundsCorrection, surfaceInlineProperty} =\n        this.calculateInline({\n          surfaceRect,\n          anchorRect,\n          anchorInline,\n          surfaceInline,\n          xOffset,\n          positioning,\n          isLTR,\n        });\n\n    // If the surface should be out of bounds in the inline direction, flip the\n    // surface and anchor corner inline values and recalculate\n    if (inlineOutOfBoundsCorrection) {\n      const flippedSurfaceInline = surfaceInline === 'start' ? 'end' : 'start';\n      const flippedAnchorInline = anchorInline === 'start' ? 'end' : 'start';\n\n      const flippedInline = this.calculateInline({\n        surfaceRect,\n        anchorRect,\n        anchorInline: flippedAnchorInline,\n        surfaceInline: flippedSurfaceInline,\n        xOffset,\n        positioning,\n        isLTR,\n      });\n\n      // In the case that the flipped verion would require less out of bounds\n      // correcting, use the flipped corner inline values\n      if (Math.abs(inlineOutOfBoundsCorrection) >\n          Math.abs(flippedInline.inlineOutOfBoundsCorrection)) {\n        inlineInset = flippedInline.inlineInset;\n        inlineOutOfBoundsCorrection = flippedInline.inlineOutOfBoundsCorrection;\n        surfaceInlineProperty = flippedInline.surfaceInlineProperty;\n      }\n    }\n\n    // If we are simply repositioning the surface back inside the viewport,\n    // subtract the out of bounds correction values from the positioning.\n    if (repositionStrategy === 'move') {\n      blockInset = blockInset - blockOutOfBoundsCorrection;\n      inlineInset = inlineInset - inlineOutOfBoundsCorrection;\n    }\n\n    this.surfaceStylesInternal = {\n      'display': 'block',\n      'opacity': '1',\n      [surfaceBlockProperty]: `${blockInset}px`,\n      [surfaceInlineProperty]: `${inlineInset}px`,\n    };\n\n    // In the case that we are resizing the surface to stay inside the viewport\n    // we need to set height and width on the surface.\n    if (repositionStrategy === 'resize') {\n      // Add a height property to the styles if there is block height correction\n      if (blockOutOfBoundsCorrection) {\n        this.surfaceStylesInternal['height'] =\n            `${surfaceRect.height - blockOutOfBoundsCorrection}px`;\n      }\n\n      // Add a width property to the styles if there is block height correction\n      if (inlineOutOfBoundsCorrection) {\n        this.surfaceStylesInternal['width'] =\n            `${surfaceRect.width - inlineOutOfBoundsCorrection}px`;\n      }\n    }\n\n    this.host.requestUpdate();\n  }\n\n  /**\n   * Calculates the css property, the inset, and the out of bounds correction\n   * for the surface in the block direction.\n   */\n  private calculateBlock(config: {\n    surfaceRect: DOMRect,\n    anchorRect: DOMRect,\n    anchorBlock: 'start'|'end',\n    surfaceBlock: 'start'|'end',\n    yOffset: number,\n    positioning: 'absolute'|'fixed',\n  }) {\n    const {\n      surfaceRect,\n      anchorRect,\n      anchorBlock,\n      surfaceBlock,\n      yOffset,\n      positioning,\n    } = config;\n    // We use number booleans to multiply values rather than `if` / ternary\n    // statements because it _heavily_ cuts down on nesting and readability\n    const relativeToWindow = positioning === 'fixed' ? 1 : 0;\n    const isSurfaceBlockStart = surfaceBlock === 'start' ? 1 : 0;\n    const isSurfaceBlockEnd = surfaceBlock === 'end' ? 1 : 0;\n    const isOneBlockEnd = anchorBlock !== surfaceBlock ? 1 : 0;\n\n    // Whether or not to apply the height of the anchor\n    const blockAnchorOffset = isOneBlockEnd * anchorRect.height + yOffset;\n    // The absolute block position of the anchor relative to window\n    const blockTopLayerOffset = isSurfaceBlockStart * anchorRect.top +\n        isSurfaceBlockEnd * (window.innerHeight - anchorRect.bottom);\n    // If the surface's block would be out of bounds of the window, move it back\n    // in\n    const blockOutOfBoundsCorrection = Math.abs(Math.min(\n        0,\n        window.innerHeight - blockTopLayerOffset - blockAnchorOffset -\n            surfaceRect.height));\n\n\n    // The block logical value of the surface\n    const blockInset =\n        relativeToWindow * blockTopLayerOffset + blockAnchorOffset;\n\n    const surfaceBlockProperty =\n        surfaceBlock === 'start' ? 'inset-block-start' : 'inset-block-end';\n\n    return {blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty};\n  }\n\n  /**\n   * Calculates the css property, the inset, and the out of bounds correction\n   * for the surface in the inline direction.\n   */\n  private calculateInline(config: {\n    isLTR: boolean,\n    surfaceInline: 'start'|'end',\n    anchorInline: 'start'|'end',\n    anchorRect: DOMRect,\n    surfaceRect: DOMRect,\n    xOffset: number,\n    positioning: 'absolute'|'fixed',\n  }) {\n    const {\n      isLTR: isLTRBool,\n      surfaceInline,\n      anchorInline,\n      anchorRect,\n      surfaceRect,\n      xOffset,\n      positioning,\n    } = config;\n    // We use number booleans to multiply values rather than `if` / ternary\n    // statements because it _heavily_ cuts down on nesting and readability\n    const relativeToWindow = positioning === 'fixed' ? 1 : 0;\n    const isLTR = isLTRBool ? 1 : 0;\n    const isRTL = isLTRBool ? 0 : 1;\n    const isSurfaceInlineStart = surfaceInline === 'start' ? 1 : 0;\n    const isSurfaceInlineEnd = surfaceInline === 'end' ? 1 : 0;\n    const isOneInlineEnd = anchorInline !== surfaceInline ? 1 : 0;\n\n    // Whether or not to apply the width of the anchor\n    const inlineAnchorOffset = isOneInlineEnd * anchorRect.width + xOffset;\n    // The inline position of the anchor relative to window in LTR\n    const inlineTopLayerOffsetLTR = isSurfaceInlineStart * anchorRect.left +\n        isSurfaceInlineEnd * (window.innerWidth - anchorRect.right);\n    // The inline position of the anchor relative to window in RTL\n    const inlineTopLayerOffsetRTL =\n        isSurfaceInlineStart * (window.innerWidth - anchorRect.right) +\n        isSurfaceInlineEnd * anchorRect.left;\n    // The inline position of the anchor relative to window\n    const inlineTopLayerOffset =\n        isLTR * inlineTopLayerOffsetLTR + isRTL * inlineTopLayerOffsetRTL;\n\n    // If the surface's inline would be out of bounds of the window, move it\n    // back in\n    const inlineOutOfBoundsCorrection = Math.abs(Math.min(\n        0,\n        window.innerWidth - inlineTopLayerOffset - inlineAnchorOffset -\n            surfaceRect.width));\n\n\n    // The inline logical value of the surface\n    const inlineInset =\n        relativeToWindow * inlineTopLayerOffset + inlineAnchorOffset;\n\n    const surfaceInlineProperty =\n        surfaceInline === 'start' ? 'inset-inline-start' : 'inset-inline-end';\n\n    return {\n      inlineInset,\n      inlineOutOfBoundsCorrection,\n      surfaceInlineProperty,\n    };\n  }\n\n  hostUpdate() {\n    this.onUpdate();\n  }\n\n  hostUpdated() {\n    this.onUpdate();\n  }\n\n  /**\n   * Checks whether the properties passed into the controller have changed since\n   * the last positioning. If so, it will reposition if the surface is open or\n   * close it if the surface should close.\n   */\n  private async onUpdate() {\n    const props = this.getProperties();\n    let hasChanged = false;\n    for (const [key, value] of Object.entries(props)) {\n      // tslint:disable-next-line\n      hasChanged = hasChanged || (value !== (this.lastValues as any)[key]);\n      if (hasChanged) break;\n    }\n\n    const openChanged = this.lastValues.isOpen !== props.isOpen;\n    const hasAnchor = !!props.anchorEl;\n    const hasSurface = !!props.surfaceEl;\n\n    if (hasChanged && hasAnchor && hasSurface) {\n      // Only update isOpen, because if it's closed, we do not want to waste\n      // time on a useless reposition calculation. So save the other \"dirty\"\n      // values until next time it opens.\n      this.lastValues.isOpen = props.isOpen;\n\n      if (props.isOpen) {\n        // We are going to do a reposition, so save the prop values for future\n        // dirty checking.\n        this.lastValues = props;\n\n        await this.position();\n        props.onOpen();\n      } else if (openChanged) {\n        await props.beforeClose();\n        this.close();\n        props.onClose();\n      }\n    }\n  }\n\n  /**\n   * Hides the surface.\n   */\n  private close() {\n    this.surfaceStylesInternal = {\n      'display': 'none',\n    };\n    this.host.requestUpdate();\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MenuItem} from './menuItemController.js';\n\n/**\n * The options that are passed to the typeahead controller.\n */\nexport interface TypeaheadControllerProperties {\n  /**\n   * A function that returns an array of menu items to be searched.\n   * @return An array of menu items to be searched by typing.\n   */\n  getItems: () => MenuItem[];\n  /**\n   * The maximum time between each keystroke to keep the current type buffer\n   * alive.\n   */\n  typeaheadBufferTime: number;\n  /**\n   * Whether or not the typeahead should listen for keystrokes or not.\n   */\n  active: boolean;\n}\n\n/**\n * Data structure tuple that helps with indexing.\n *\n * [index, item, normalized header text]\n */\ntype TypeaheadRecord = [number, MenuItem, string];\n/**\n * Indicies to access the TypeaheadRecord tuple type.\n */\nexport const TYPEAHEAD_RECORD = {\n  INDEX: 0,\n  ITEM: 1,\n  TEXT: 2,\n} as const;\n\n/**\n * This controller listens to `keydown` events and searches the header text of\n * an array of `MenuItem`s with the corresponding entered keys within the buffer\n * time and activates the item.\n *\n * @example\n * ```ts\n * const typeaheadController = new TypeaheadController(() => ({\n *   typeaheadBufferTime: 50,\n *   getItems: () => Array.from(document.querySelectorAll('md-menu-item'))\n * }));\n * html`\n *   <div\n *       @keydown=${typeaheadController.onKeydown}\n *       tabindex=\"0\"\n *       class=\"activeItemText\">\n *     <!-- focusable element that will receive keydown events -->\n *     Apple\n *   </div>\n *   <div>\n *     <md-menu-item active header=\"Apple\"></md-menu-item>\n *     <md-menu-item header=\"Apricot\"></md-menu-item>\n *     <md-menu-item header=\"Banana\"></md-menu-item>\n *     <md-menu-item header=\"Olive\"></md-menu-item>\n *     <md-menu-item header=\"Orange\"></md-menu-item>\n *   </div>\n * `;\n * ```\n */\nexport class TypeaheadController {\n  /**\n   * Array of tuples that helps with indexing.\n   */\n  private typeaheadRecords: TypeaheadRecord[] = [];\n  /**\n   * Currently-typed text since last buffer timeout\n   */\n  private typaheadBuffer = '';\n  /**\n   * The timeout id from the current buffer's setTimeout\n   */\n  private cancelTypeaheadTimeout = 0;\n  /**\n   * If we are currently \"typing\"\n   */\n  isTypingAhead = false;\n  /**\n   * The record of the last active item.\n   */\n  lastActiveRecord: TypeaheadRecord|null = null;\n\n  /**\n   * @param getProperties A function that returns the options of the typeahead\n   * controller:\n   *\n   * {\n   *   getItems: A function that returns an array of menu items to be searched.\n   *   typeaheadBufferTime: The maximum time between each keystroke to keep the\n   *       current type buffer alive.\n   * }\n   */\n  constructor(\n      private readonly getProperties: () => TypeaheadControllerProperties,\n  ) {}\n\n  private get items() {\n    return this.getProperties().getItems();\n  }\n\n  private get active() {\n    return this.getProperties().active;\n  }\n\n  /**\n   * Apply this listener to the element that will receive `keydown` events that\n   * should trigger this controller.\n   *\n   * @param event The native browser `KeyboardEvent` from the `keydown` event.\n   */\n  readonly onKeydown = (event: KeyboardEvent) => {\n    if (this.isTypingAhead) {\n      this.typeahead(event);\n    } else {\n      this.beginTypeahead(event);\n    }\n  };\n\n  /**\n   * Sets up typingahead\n   */\n  private beginTypeahead(event: KeyboardEvent) {\n    if (!this.active) {\n      return;\n    }\n\n    // We don't want to typeahead if the _beginning_ of the typeahead is a menu\n    // navigation, or a selection. We will handle \"Space\" only if it's in the\n    // middle of a typeahead\n    if (event.code === 'Space' || event.code === 'Enter' ||\n        event.code.startsWith('Arrow') || event.code === 'Escape') {\n      return;\n    }\n\n    this.isTypingAhead = true;\n    // Generates the record array data structure which is the index, the element\n    // and a normalized header.\n    this.typeaheadRecords = this.items.map(\n        (el, index) => [index, el, el.typeaheadText.trim().toLowerCase()]);\n    this.lastActiveRecord =\n        this.typeaheadRecords.find(\n            record => (record[TYPEAHEAD_RECORD.ITEM].tabIndex === 0)) ??\n        null;\n    if (this.lastActiveRecord) {\n      this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n    }\n    this.typeahead(event);\n  }\n\n  /**\n   * Performs the typeahead. Based on the normalized items and the current text\n   * buffer, finds the _next_ item with matching text and activates it.\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive, Orange, Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Olive\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive (active), Orange, Cucumber\n   * buffer: 'o'\n   * user types: l\n   *\n   * activates Olive\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive (active), Orange, Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Orange\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive, Orange (active), Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Olive\n   */\n  private typeahead(event: KeyboardEvent) {\n    if (event.defaultPrevented) return;\n    clearTimeout(this.cancelTypeaheadTimeout);\n    // Stop typingahead if one of the navigation or selection keys (except for\n    // Space) are pressed\n    if (event.code === 'Enter' || event.code.startsWith('Arrow') ||\n        event.code === 'Escape') {\n      this.endTypeahead();\n      if (this.lastActiveRecord) {\n        this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n      }\n      return;\n    }\n\n    // If Space is pressed, prevent it from selecting and closing the menu\n    if (event.code === 'Space') {\n      event.preventDefault();\n    }\n\n    // Start up a new keystroke buffer timeout\n    this.cancelTypeaheadTimeout =\n        setTimeout(this.endTypeahead, this.getProperties().typeaheadBufferTime);\n\n    this.typaheadBuffer += event.key.toLowerCase();\n\n    const lastActiveIndex = this.lastActiveRecord ?\n        this.lastActiveRecord[TYPEAHEAD_RECORD.INDEX] :\n        -1;\n    const numRecords = this.typeaheadRecords.length;\n\n    /**\n     * Sorting function that will resort the items starting with the given index\n     *\n     * @example\n     *\n     * this.typeaheadRecords =\n     * 0: [0, <reference>, 'apple']\n     * 1: [1, <reference>, 'apricot']\n     * 2: [2, <reference>, 'banana']\n     * 3: [3, <reference>, 'olive'] <-- lastActiveIndex\n     * 4: [4, <reference>, 'orange']\n     * 5: [5, <reference>, 'strawberry']\n     *\n     * this.typeaheadRecords.sort((a,b) => rebaseIndexOnActive(a)\n     *                                       - rebaseIndexOnActive(b)) ===\n     * 0: [3, <reference>, 'olive'] <-- lastActiveIndex\n     * 1: [4, <reference>, 'orange']\n     * 2: [5, <reference>, 'strawberry']\n     * 3: [0, <reference>, 'apple']\n     * 4: [1, <reference>, 'apricot']\n     * 5: [2, <reference>, 'banana']\n     */\n    const rebaseIndexOnActive = (record: TypeaheadRecord) => {\n      return (record[TYPEAHEAD_RECORD.INDEX] + numRecords - lastActiveIndex) %\n          numRecords;\n    };\n\n    // records filtered and sorted / rebased around the last active index\n    const matchingRecords =\n        this.typeaheadRecords\n            .filter(\n                record => !record[TYPEAHEAD_RECORD.ITEM].disabled &&\n                    record[TYPEAHEAD_RECORD.TEXT].startsWith(\n                        this.typaheadBuffer))\n            .sort((a, b) => rebaseIndexOnActive(a) - rebaseIndexOnActive(b));\n\n    // Just leave if there's nothing that matches. Native select will just\n    // choose the first thing that starts with the next letter in the alphabet\n    // but that's out of scope and hard to localize\n    if (matchingRecords.length === 0) {\n      clearTimeout(this.cancelTypeaheadTimeout);\n      if (this.lastActiveRecord) {\n        this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n      }\n      this.endTypeahead();\n      return;\n    }\n\n    const isNewQuery = this.typaheadBuffer.length === 1;\n    let nextRecord: TypeaheadRecord;\n\n    // This is likely the case that someone is trying to \"tab\" through different\n    // entries that start with the same letter\n    if (this.lastActiveRecord === matchingRecords[0] && isNewQuery) {\n      nextRecord = matchingRecords[1] ?? matchingRecords[0];\n    } else {\n      nextRecord = matchingRecords[0];\n    }\n\n    if (this.lastActiveRecord) {\n      this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n    }\n\n    this.lastActiveRecord = nextRecord;\n    nextRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = 0;\n    nextRecord[TYPEAHEAD_RECORD.ITEM].focus();\n    return;\n  }\n\n  /**\n   * Ends the current typeahead and clears the buffer.\n   */\n  private readonly endTypeahead = () => {\n    this.isTypingAhead = false;\n    this.typaheadBuffer = '';\n    this.typeaheadRecords = [];\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../elevation/elevation.js';\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport {polyfillElementInternalsAria, setupHostAria} from '../../internal/aria/aria.js';\nimport {createAnimationSignal, EASING} from '../../internal/motion/animation.js';\nimport {ListController, NavigableKeys} from '../../list/internal/list-controller.js';\nimport {getActiveItem, getFirstActivatableItem, getLastActivatableItem} from '../../list/internal/list-navigation-helpers.js';\n\nimport {MenuItem} from './controllers/menuItemController.js';\nimport {ActivateTypeaheadEvent, DeactivateTypeaheadEvent, FocusState, isClosableKey, isElementInSubtree} from './controllers/shared.js';\nimport {Corner, SurfacePositionController, SurfacePositionTarget} from './controllers/surfacePositionController.js';\nimport {TypeaheadController} from './controllers/typeaheadController.js';\n\nexport {Corner} from './controllers/surfacePositionController.js';\n\n/**\n * The default value for the typeahead buffer time in Milliseconds.\n */\nexport const DEFAULT_TYPEAHEAD_BUFFER_TIME = 200;\n\nconst submenuNavKeys = new Set<string>([\n  NavigableKeys.ArrowDown,\n  NavigableKeys.ArrowUp,\n  NavigableKeys.Home,\n  NavigableKeys.End,\n]);\n\nconst menuNavKeys = new Set<string>([\n  NavigableKeys.ArrowLeft,\n  NavigableKeys.ArrowRight,\n  ...submenuNavKeys,\n]);\n\n/**\n * Gets the currently focused element on the page.\n *\n * @param activeDoc The document or shadowroot from which to start the search.\n *    Defaults to `window.document`\n * @return Returns the currently deeply focused element or `null` if none.\n */\nfunction getFocusedElement(activeDoc: Document|ShadowRoot = document):\n    HTMLElement|null {\n  let activeEl = activeDoc.activeElement as HTMLElement | null;\n\n  // Check for activeElement in the case that an element with a shadow root host\n  // is currently focused.\n  while (activeEl && activeEl?.shadowRoot?.activeElement) {\n    activeEl = activeEl.shadowRoot.activeElement as HTMLElement | null;\n  }\n\n  return activeEl;\n}\n\n/**\n * @fires opening Fired before the opening animation begins\n * @fires opened Fired once the menu is open, after any animations\n * @fires closing Fired before the closing animation begins\n * @fires closed Fired once the menu is closed, after any animations\n */\nexport abstract class Menu extends LitElement {\n  static {\n    // We want to manage tabindex ourselves.\n    setupHostAria(Menu, {focusable: false});\n  }\n\n  @query('.menu') private readonly surfaceEl!: HTMLElement|null;\n  @query('slot') private readonly slotEl!: HTMLSlotElement|null;\n\n  /**\n   * The ID of the element in the same root node in which the menu should align\n   * to. Overrides setting `anchorElement = elementReference`.\n   *\n   * __NOTE__: anchor or anchorElement must either be an HTMLElement or resolve\n   * to an HTMLElement in order for menu to open.\n   */\n  @property() anchor = '';\n  /**\n   * Whether the positioning algorithim should calculate relative to the parent\n   * of the anchor element (absolute) or relative to the window (fixed).\n   *\n   * Examples for `position = 'fixed'`:\n   *\n   * - If there is no `position:relative` in the given parent tree and the\n   *   surface is `position:absolute`\n   * - If the surface is `position:fixed`\n   * - If the surface is in the \"top layer\"\n   * - The anchor and the surface do not share a common `position:relative`\n   *   ancestor\n   *\n   * When using positioning = fixed, in most cases, the menu should position\n   * itself above most other `position:absolute` or `position:fixed` elements\n   * when placed inside of them. e.g. using a menu inside of an `md-dialog`.\n   *\n   * __NOTE__: Fixed menus will not scroll with the page and will be fixed to\n   * the window instead.\n   */\n  @property() positioning: 'absolute'|'fixed' = 'absolute';\n  /**\n   * Skips the opening and closing animations.\n   */\n  @property({type: Boolean}) quick = false;\n  /**\n   * Displays overflow content like a submenu.\n   *\n   * __NOTE__: This may cause adverse effects if you set\n   * `md-menu {max-height:...}`\n   * and have items overflowing items in the \"y\" direction.\n   */\n  @property({type: Boolean, attribute: 'has-overflow'}) hasOverflow = false;\n  /**\n   * Opens the menu and makes it visible. Alternative to the `.show()` and\n   * `.close()` methods\n   */\n  @property({type: Boolean, reflect: true}) open = false;\n  /**\n   * Offsets the menu's inline alignment from the anchor by the given number in\n   * pixels. This value is direction aware and will follow the LTR / RTL\n   * direction.\n   *\n   * e.g. LTR: positive -> right, negative -> left\n   *      RTL: positive -> left, negative -> right\n   */\n  @property({type: Number, attribute: 'x-offset'}) xOffset = 0;\n  /**\n   * Offsets the menu's block alignment from the anchor by the given number in\n   * pixels.\n   *\n   * e.g. positive -> down, negative -> up\n   */\n  @property({type: Number, attribute: 'y-offset'}) yOffset = 0;\n  /**\n   * The max time between the keystrokes of the typeahead menu behavior before\n   * it clears the typeahead buffer.\n   */\n  @property({type: Number, attribute: 'typeahead-delay'})\n  typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n  /**\n   * The corner of the anchor which to align the menu in the standard logical\n   * property style of <block>-<inline> e.g. `'end-start'`.\n   *\n   * NOTE: This value may not be respected by the menu positioning algorithm\n   * if the menu would render outisde the viewport.\n   */\n  @property({attribute: 'anchor-corner'})\n  anchorCorner: Corner = Corner.END_START;\n  /**\n   * The corner of the menu which to align the anchor in the standard logical\n   * property style of <block>-<inline> e.g. `'start-start'`.\n   *\n   * NOTE: This value may not be respected by the menu positioning algorithm\n   * if the menu would render outisde the viewport.\n   */\n  @property({attribute: 'menu-corner'}) menuCorner: Corner = Corner.START_START;\n  /**\n   * Keeps the user clicks outside the menu.\n   *\n   * NOTE: clicking outside may still cause focusout to close the menu so see\n   * `stayOpenOnFocusout`.\n   */\n  @property({type: Boolean, attribute: 'stay-open-on-outside-click'})\n  stayOpenOnOutsideClick = false;\n  /**\n   * Keeps the menu open when focus leaves the menu's composed subtree.\n   *\n   * NOTE: Focusout behavior will stop propagation of the focusout event. Set\n   * this property to true to opt-out of menu's focuout handling altogether.\n   */\n  @property({type: Boolean, attribute: 'stay-open-on-focusout'})\n  stayOpenOnFocusout = false;\n  /**\n   * After closing, does not restore focus to the last focused element before\n   * the menu was opened.\n   */\n  @property({type: Boolean, attribute: 'skip-restore-focus'})\n  skipRestoreFocus = false;\n  /**\n   * The element that should be focused by default once opened.\n   *\n   * NOTE: When setting default focus to 'LIST_ROOT', remember to change\n   * `tabindex` to `0` and change md-menu's display to something other than\n   * `display: contents` when necessary.\n   */\n  @property({attribute: 'default-focus'})\n  defaultFocus: FocusState = FocusState.FIRST_ITEM;\n\n  @queryAssignedElements({flatten: true}) protected slotItems!: HTMLElement[];\n  @state() private typeaheadActive = true;\n\n  /**\n   * Whether or not the current menu is a submenu and should not handle specific\n   * navigation keys.\n   *\n   * @exports\n   */\n  isSubmenu = false;\n\n  /**\n   * The event path of the last window pointerdown event.\n   */\n  private pointerPath: EventTarget[] = [];\n  private isPointerDown = false;\n  private readonly openCloseAnimationSignal = createAnimationSignal();\n\n  private readonly listController = new ListController<MenuItem>({\n    isItem: (maybeItem: HTMLElement): maybeItem is MenuItem => {\n      return maybeItem.hasAttribute('md-menu-item');\n    },\n    getPossibleItems: () => this.slotItems,\n    isRtl: () => (getComputedStyle(this).direction === 'rtl'),\n    deactivateItem:\n        (item: MenuItem) => {\n          item.selected = false;\n          item.tabIndex = -1;\n        },\n    activateItem:\n        (item: MenuItem) => {\n          item.selected = true;\n          item.tabIndex = 0;\n        },\n    isNavigableKey:\n        (key: string) => {\n          if (!this.isSubmenu) {\n            return menuNavKeys.has(key);\n          }\n\n          const isRtl = getComputedStyle(this).direction === 'rtl';\n          // we want md-submenu to handle the submenu's left/right arrow exit\n          // key so it can close the menu instead of navigate the list.\n          // Therefore we need to include all keys but left/right arrow close\n          // key\n          const arrowOpen =\n              isRtl ? NavigableKeys.ArrowLeft : NavigableKeys.ArrowRight;\n\n          if (key === arrowOpen) {\n            return true;\n          }\n\n          return submenuNavKeys.has(key);\n        },\n  });\n\n  /**\n   * Whether the menu is animating upwards or downwards when opening. This is\n   * helpful for calculating some animation calculations.\n   */\n  private get openDirection(): 'UP'|'DOWN' {\n    const menuCornerBlock = this.menuCorner.split('_')[0];\n    return menuCornerBlock === 'START' ? 'DOWN' : 'UP';\n  }\n\n  /**\n   * The element that was focused before the menu opened.\n   */\n  private lastFocusedElement: HTMLElement|null = null;\n\n  /**\n   * Handles typeahead navigation through the menu.\n   */\n  typeaheadController = new TypeaheadController(() => {\n    return {\n      getItems: () => this.items,\n      typeaheadBufferTime: this.typeaheadDelay,\n      active: this.typeaheadActive\n    };\n  });\n\n  private currentAnchorElement: HTMLElement|null = null;\n\n  /**\n   * The element which the menu should align to. If `anchor` is set to a\n   * non-empty idref string, then `anchorEl` will resolve to the element with\n   * the given id in the same root node. Otherwise, `null`.\n   */\n  get anchorElement(): HTMLElement&Partial<SurfacePositionTarget>|null {\n    if (this.anchor) {\n      return (this.getRootNode() as Document | ShadowRoot)\n          .querySelector(`#${this.anchor}`);\n    }\n\n    return this.currentAnchorElement;\n  }\n\n  set anchorElement(element: HTMLElement&Partial<SurfacePositionTarget>|null) {\n    this.currentAnchorElement = element;\n    this.requestUpdate('anchorElement');\n  }\n\n  private readonly internals = polyfillElementInternalsAria(\n      this, (this as HTMLElement /* needed for closure */).attachInternals());\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'menu';\n      this.addEventListener('keydown', this.listController.handleKeydown);\n      // Capture so that we can grab the event before it reaches the menu item\n      // istelf. Specifically useful for the case where typeahead encounters a\n      // space and we don't want the menu item to close the menu.\n      this.addEventListener('keydown', this.captureKeydown, {capture: true});\n      this.addEventListener('focusout', this.handleFocusout);\n    }\n  }\n\n  /**\n   * Handles positioning the surface and aligning it to the anchor as well as\n   * keeping it in the viewport.\n   */\n  private readonly menuPositionController =\n      new SurfacePositionController(this, () => {\n        return {\n          anchorCorner: this.anchorCorner,\n          surfaceCorner: this.menuCorner,\n          surfaceEl: this.surfaceEl,\n          anchorEl: this.anchorElement,\n          positioning: this.positioning,\n          isOpen: this.open,\n          xOffset: this.xOffset,\n          yOffset: this.yOffset,\n          onOpen: this.onOpened,\n          beforeClose: this.beforeClose,\n          onClose: this.onClosed,\n          // We can't resize components that have overflow like menus with\n          // submenus because the overflow-y will show menu items / content\n          // outside the bounds of the menu. (to be fixed w/ popover API)\n          repositionStrategy: this.hasOverflow ? 'move' : 'resize',\n        };\n      });\n\n  /**\n   * The menu items associated with this menu. The items must be `MenuItem`s and\n   * have both the `md-menu-item` and `md-list-item` attributes.\n   */\n  get items(): MenuItem[] {\n    return this.listController.items;\n  }\n\n  protected override willUpdate(changed: PropertyValues<Menu>) {\n    if (!changed.has('open')) {\n      return;\n    }\n\n    if (this.open) {\n      this.removeAttribute('aria-hidden');\n      return;\n    }\n\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    return this.renderSurface();\n  }\n\n  /**\n   * Renders the positionable surface element and its contents.\n   */\n  private renderSurface() {\n    return html`\n       <div\n          class=\"menu ${classMap(this.getSurfaceClasses())}\"\n          style=${styleMap(this.menuPositionController.surfaceStyles)}>\n        ${this.renderElevation()}\n        <div class=\"items\">\n          <div class=\"item-padding\">\n            ${this.renderMenuItems()}\n          </div>\n        </div>\n       </div>\n     `;\n  }\n\n  /**\n   * Renders the menu items' slot\n   */\n  private renderMenuItems() {\n    return html`<slot\n        @close-menu=${this.onCloseMenu}\n        @deactivate-items=${this.onDeactivateItems}\n        @request-activation=${this.onRequestActivation}\n        @deactivate-typeahead=${this.handleDeactivateTypeahead}\n        @activate-typeahead=${this.handleActivateTypeahead}\n        @stay-open-on-focusout=${this.handleStayOpenOnFocusout}\n        @close-on-focusout=${this.handleCloseOnFocusout}\n        @slotchange=${this.listController.onSlotchange}></slot>`;\n  }\n\n  /**\n   * Renders the elevation component.\n   */\n  private renderElevation() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n\n  private getSurfaceClasses() {\n    return {\n      open: this.open,\n      fixed: this.positioning === 'fixed',\n      'has-overflow': this.hasOverflow,\n    };\n  }\n\n  private readonly handleFocusout = async (event: FocusEvent) => {\n    if (this.stayOpenOnFocusout || !this.open) {\n      return;\n    }\n\n    if (event.relatedTarget) {\n      // Don't close the menu if we are switching focus between menu,\n      // md-menu-item, and md-list\n      if (isElementInSubtree(event.relatedTarget, this)) {\n        return;\n      }\n\n      const anchorEl = this.anchorElement!;\n      const wasAnchorClickFocused =\n          isElementInSubtree(event.relatedTarget, anchorEl) &&\n          this.isPointerDown;\n      if (wasAnchorClickFocused) {\n        return;\n      }\n    } else if (this.isPointerDown && this.pointerPath.includes(this)) {\n      // If menu tabindex == -1 and the user clicks on the menu or a divider, we\n      // want to keep the menu open.\n      return;\n    }\n\n    const oldRestoreFocus = this.skipRestoreFocus;\n    // allow focus to continue to the next focused object rather than returning\n    this.skipRestoreFocus = true;\n    this.close();\n    // await for close\n    await this.updateComplete;\n    // return to previous behavior\n    this.skipRestoreFocus = oldRestoreFocus;\n  };\n\n  private captureKeydown(event: KeyboardEvent) {\n    if (event.target === this && !event.defaultPrevented &&\n        isClosableKey(event.code)) {\n      event.preventDefault();\n      this.close();\n    }\n\n    this.typeaheadController.onKeydown(event);\n  }\n\n  /**\n   * Saves the last focused element focuses the new element based on\n   * `defaultFocus`, and animates open.\n   */\n  private readonly onOpened = async () => {\n    this.lastFocusedElement = getFocusedElement();\n\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items);\n\n    if (activeItemRecord && this.defaultFocus !== FocusState.NONE) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n\n    let animationAborted = !this.quick;\n\n    if (this.quick) {\n      this.dispatchEvent(new Event('opening'));\n    } else {\n      animationAborted = !!await this.animateOpen();\n    }\n\n    // This must come after the opening animation or else it may focus one of\n    // the items before the animation has begun and causes the list to slide\n    // (block-padding-of-the-menu)px at the end of the animation\n    switch (this.defaultFocus) {\n      case FocusState.FIRST_ITEM:\n        const first = getFirstActivatableItem(items);\n        if (first) {\n          first.tabIndex = 0;\n          first.focus();\n          await (first as LitElement & MenuItem).updateComplete;\n        }\n        break;\n      case FocusState.LAST_ITEM:\n        const last = getLastActivatableItem(items);\n        if (last) {\n          last.tabIndex = 0;\n          last.focus();\n          await (last as LitElement & MenuItem).updateComplete;\n        }\n        break;\n      case FocusState.LIST_ROOT:\n        this.focus();\n        break;\n      default:\n      case FocusState.NONE:\n        // Do nothing.\n        break;\n    }\n\n    if (!animationAborted) {\n      this.dispatchEvent(new Event('opened'));\n    }\n  };\n\n  /**\n   * Animates closed.\n   */\n  private readonly beforeClose = async () => {\n    this.open = false;\n\n    if (!this.skipRestoreFocus) {\n      this.lastFocusedElement?.focus?.();\n    }\n\n    if (!this.quick) {\n      await this.animateClose();\n    }\n  };\n\n  /**\n   * Focuses the last focused element.\n   */\n  private readonly onClosed = () => {\n    if (this.quick) {\n      this.dispatchEvent(new Event('closing'));\n      this.dispatchEvent(new Event('closed'));\n    }\n  };\n\n  /**\n   * Performs the opening animation:\n   *\n   * https://direct.googleplex.com/#/spec/295000003+271060003\n   *\n   * @return A promise that resolve to `true` if the animation was aborted,\n   *     `false` if it was not aborted.\n   */\n  private async animateOpen() {\n    const surfaceEl = this.surfaceEl;\n    const slotEl = this.slotEl;\n\n    if (!surfaceEl || !slotEl) return true;\n\n    const openDirection = this.openDirection;\n    this.dispatchEvent(new Event('opening'));\n    // needs to be imperative because we don't want to mix animation and Lit\n    // render timing\n    surfaceEl.classList.toggle('animating', true);\n\n    const signal = this.openCloseAnimationSignal.start();\n    const height = surfaceEl.offsetHeight;\n    const openingUpwards = openDirection === 'UP';\n    const children = this.items;\n    const FULL_DURATION = 500;\n    const SURFACE_OPACITY_DURATION = 50;\n    const ITEM_OPACITY_DURATION = 250;\n    // We want to fit every child fade-in animation within the full duration of\n    // the animation.\n    const DELAY_BETWEEN_ITEMS =\n        (FULL_DURATION - ITEM_OPACITY_DURATION) / children.length;\n\n    const surfaceHeightAnimation =\n        surfaceEl.animate([{height: '0px'}, {height: `${height}px`}], {\n          duration: FULL_DURATION,\n          easing: EASING.EMPHASIZED,\n        });\n    // When we are opening upwards, we want to make sure the last item is always\n    // in view, so we need to translate it upwards the opposite direction of the\n    // height animation\n    const upPositionCorrectionAnimation = slotEl.animate(\n        [\n          {transform: openingUpwards ? `translateY(-${height}px)` : ''},\n          {transform: ''}\n        ],\n        {duration: FULL_DURATION, easing: EASING.EMPHASIZED});\n\n    const surfaceOpacityAnimation = surfaceEl.animate(\n        [{opacity: 0}, {opacity: 1}], SURFACE_OPACITY_DURATION);\n\n    const childrenAnimations: Array<[HTMLElement, Animation]> = [];\n\n    for (let i = 0; i < children.length; i++) {\n      // If we are animating upwards, then reverse the children list.\n      const directionalIndex = openingUpwards ? children.length - 1 - i : i;\n      const child = children[directionalIndex];\n      const animation = child.animate([{opacity: 0}, {opacity: 1}], {\n        duration: ITEM_OPACITY_DURATION,\n        delay: DELAY_BETWEEN_ITEMS * i,\n      });\n\n      // Make them all initially hidden and then clean up at the end of each\n      // animation.\n      child.classList.toggle('md-menu-hidden', true);\n      animation.addEventListener('finish', () => {\n        child.classList.toggle('md-menu-hidden', false);\n      });\n\n      childrenAnimations.push([child, animation]);\n    }\n\n    let resolveAnimation = (value: boolean) => {};\n    const animationFinished = new Promise<boolean>((resolve) => {\n      resolveAnimation = resolve;\n    });\n\n    signal.addEventListener('abort', () => {\n      surfaceHeightAnimation.cancel();\n      upPositionCorrectionAnimation.cancel();\n      surfaceOpacityAnimation.cancel();\n      childrenAnimations.forEach(([child, animation]) => {\n        child.classList.toggle('md-menu-hidden', false);\n        animation.cancel();\n      });\n\n      resolveAnimation(true);\n    });\n\n    surfaceHeightAnimation.addEventListener('finish', () => {\n      surfaceEl.classList.toggle('animating', false);\n      this.openCloseAnimationSignal.finish();\n      resolveAnimation(false);\n    });\n\n    return await animationFinished;\n  }\n\n  /**\n   * Performs the closing animation:\n   *\n   * https://direct.googleplex.com/#/spec/295000003+271060003\n   */\n  private animateClose() {\n    let resolve!: (value: unknown) => void;\n    let reject!: () => void;\n\n    // This promise blocks the surface position controller from setting\n    // display: none on the surface which will interfere with this animation.\n    const animationEnded = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    const surfaceEl = this.surfaceEl;\n    const slotEl = this.slotEl;\n\n    if (!surfaceEl || !slotEl) {\n      reject();\n      return animationEnded;\n    }\n\n    const openDirection = this.openDirection;\n    const closingDownwards = openDirection === 'UP';\n    this.dispatchEvent(new Event('closing'));\n    // needs to be imperative because we don't want to mix animation and Lit\n    // render timing\n    surfaceEl.classList.toggle('animating', true);\n    const signal = this.openCloseAnimationSignal.start();\n    const height = surfaceEl.offsetHeight;\n    const children = this.items;\n    const FULL_DURATION = 150;\n    const SURFACE_OPACITY_DURATION = 50;\n    // The surface fades away at the very end\n    const SURFACE_OPACITY_DELAY = FULL_DURATION - SURFACE_OPACITY_DURATION;\n    const ITEM_OPACITY_DURATION = 50;\n    const ITEM_OPACITY_INITIAL_DELAY = 50;\n    const END_HEIGHT_PERCENTAGE = .35;\n\n    // We want to fit every child fade-out animation within the full duration of\n    // the animation.\n    const DELAY_BETWEEN_ITEMS =\n        (FULL_DURATION - ITEM_OPACITY_INITIAL_DELAY - ITEM_OPACITY_DURATION) /\n        children.length;\n\n    // The mock has the animation shrink to 35%\n    const surfaceHeightAnimation = surfaceEl.animate(\n        [\n          {height: `${height}px`},\n          {height: `${height * END_HEIGHT_PERCENTAGE}px`}\n        ],\n        {\n          duration: FULL_DURATION,\n          easing: EASING.EMPHASIZED_ACCELERATE,\n        });\n\n    // When we are closing downwards, we want to make sure the last item is\n    // always in view, so we need to translate it upwards the opposite direction\n    // of the height animation\n    const downPositionCorrectionAnimation = slotEl.animate(\n        [\n          {transform: ''}, {\n            transform: closingDownwards ?\n                `translateY(-${height * (1 - END_HEIGHT_PERCENTAGE)}px)` :\n                ''\n          }\n        ],\n        {duration: FULL_DURATION, easing: EASING.EMPHASIZED_ACCELERATE});\n\n    const surfaceOpacityAnimation = surfaceEl.animate(\n        [{opacity: 1}, {opacity: 0}],\n        {duration: SURFACE_OPACITY_DURATION, delay: SURFACE_OPACITY_DELAY});\n\n    const childrenAnimations: Array<[HTMLElement, Animation]> = [];\n\n    for (let i = 0; i < children.length; i++) {\n      // If the animation is closing upwards, then reverse the list of\n      // children so that we animate in the opposite direction.\n      const directionalIndex = closingDownwards ? i : children.length - 1 - i;\n      const child = children[directionalIndex];\n      const animation = child.animate([{opacity: 1}, {opacity: 0}], {\n        duration: ITEM_OPACITY_DURATION,\n        delay: ITEM_OPACITY_INITIAL_DELAY + DELAY_BETWEEN_ITEMS * i,\n      });\n\n      // Make sure the items stay hidden at the end of each child animation.\n      // We clean this up at the end of the overall animation.\n      animation.addEventListener('finish', () => {\n        child.classList.toggle('md-menu-hidden', true);\n      });\n      childrenAnimations.push([child, animation]);\n    }\n\n    signal.addEventListener('abort', () => {\n      surfaceHeightAnimation.cancel();\n      downPositionCorrectionAnimation.cancel();\n      surfaceOpacityAnimation.cancel();\n      childrenAnimations.forEach(([child, animation]) => {\n        animation.cancel();\n        child.classList.toggle('md-menu-hidden', false);\n      });\n      reject();\n    });\n\n    surfaceHeightAnimation.addEventListener('finish', () => {\n      surfaceEl.classList.toggle('animating', false);\n      childrenAnimations.forEach(([child]) => {\n        child.classList.toggle('md-menu-hidden', false);\n      });\n      this.openCloseAnimationSignal.finish();\n      this.dispatchEvent(new Event('closed'));\n      resolve(true);\n    });\n\n    return animationEnded;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    if (!isServer) {\n      window.addEventListener('click', this.onWindowClick, {capture: true});\n      window.addEventListener('pointerdown', this.onWindowPointerdown);\n      window.addEventListener('pointerup', this.onWindowPointerup);\n    }\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    if (!isServer) {\n      window.removeEventListener('click', this.onWindowClick, {capture: true});\n      window.removeEventListener('pointerdown', this.onWindowPointerdown);\n      window.removeEventListener('pointerup', this.onWindowPointerup);\n    }\n  }\n\n  private readonly onWindowPointerdown = (event: PointerEvent) => {\n    this.isPointerDown = true;\n    this.pointerPath = event.composedPath();\n  };\n\n  private readonly onWindowPointerup = () => {\n    this.isPointerDown = false;\n  };\n\n  private readonly onWindowClick = (event: MouseEvent) => {\n    if (!this.open) {\n      return;\n    }\n\n    const path = event.composedPath();\n\n    if (!this.stayOpenOnOutsideClick && !path.includes(this) &&\n        !path.includes(this.anchorElement!)) {\n      this.open = false;\n    }\n  };\n\n  private onCloseMenu() {\n    this.close();\n  }\n\n  private onDeactivateItems(event: Event) {\n    event.stopPropagation();\n    this.listController.onDeactivateItems();\n  }\n\n  private onRequestActivation(event: Event) {\n    event.stopPropagation();\n    this.listController.onRequestActivation(event);\n  }\n\n  private handleDeactivateTypeahead(event: DeactivateTypeaheadEvent) {\n    // stopPropagation so that this does not deactivate any typeaheads in menus\n    // nested above it e.g. md-sub-menu\n    event.stopPropagation();\n    this.typeaheadActive = false;\n  }\n\n  private handleActivateTypeahead(event: ActivateTypeaheadEvent) {\n    // stopPropagation so that this does not activate any typeaheads in menus\n    // nested above it e.g. md-sub-menu\n    event.stopPropagation();\n    this.typeaheadActive = true;\n  }\n\n  private handleStayOpenOnFocusout(event: Event) {\n    event.stopPropagation();\n    this.stayOpenOnFocusout = true;\n  }\n\n  private handleCloseOnFocusout(event: Event) {\n    event.stopPropagation();\n    this.stayOpenOnFocusout = false;\n  }\n\n  close() {\n    this.open = false;\n    const maybeSubmenu =\n        this.slotItems as Array<HTMLElement&{close?: () => void}>;\n    maybeSubmenu.forEach(item => {\n      item.close?.();\n    });\n  }\n\n  show() {\n    this.open = true;\n  }\n\n  /**\n   * Activates the next item in the menu. If at the end of the menu, the first\n   * item will be activated.\n   *\n   * @return The activated menu item or `null` if there are no items.\n   */\n  activateNextItem() {\n    return this.listController.activateNextItem() ?? null;\n  }\n\n  /**\n   * Activates the previous item in the menu. If at the start of the menu, the\n   * last item will be activated.\n   *\n   * @return The activated menu item or `null` if there are no items.\n   */\n  activatePreviousItem() {\n    return this.listController.activatePreviousItem() ?? null;\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--md-elevation-level: var(--md-menu-container-elevation, 2);--md-elevation-shadow-color: var(--md-menu-container-shadow-color, var(--md-sys-color-shadow, #000));min-width:112px;color:unset;display:contents}md-focus-ring{--md-focus-ring-shape: var(--md-menu-container-shape, 4px)}.menu{border-radius:var(--md-menu-container-shape, 4px);display:none;opacity:0;z-index:20;position:absolute;user-select:none;max-height:inherit;height:inherit;min-width:inherit;max-width:inherit}.fixed{position:fixed}.items{display:block;list-style-type:none;margin:0;outline:none;box-sizing:border-box;background-color:var(--md-menu-container-color, var(--md-sys-color-surface-container, #f3edf7));height:inherit;max-height:inherit;overflow:auto;min-width:inherit;max-width:inherit;border-radius:inherit}.item-padding{padding-block:8px}.has-overflow .items{overflow:visible}.animating .items{overflow:hidden}.has-overflow.animating .items{pointer-events:none}.animating ::slotted(.md-menu-hidden){opacity:0}slot{display:block;height:inherit;max-height:inherit}::slotted(:is(md-divider,[role=separator])){margin:8px 0}/*# sourceMappingURL=menu-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as forcedColors} from './internal/forced-colors-styles.css.js';\nimport {Menu} from './internal/menu.js';\nimport {styles} from './internal/menu-styles.css.js';\n\nexport {ListItem} from '../list/internal/list-navigation-helpers.js';\nexport {MenuItem} from './internal/controllers/menuItemController.js';\nexport {CloseMenuEvent, FocusState, Menu} from './internal/controllers/shared.js';\nexport {Corner} from './internal/menu.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-menu': MdMenu;\n  }\n}\n\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menus appear when users interact with a button, action, or other control.\n *\n * They can be opened from a variety of elements, most commonly icon buttons,\n * buttons, and text fields.\n *\n * md-menu listens for the `close-menu` and `deselect-items` events.\n *\n * - `close-menu` closes the menu when dispatched from a child element.\n * - `deselect-items` deselects all of its immediate menu-item children.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents.\n *\n *     Additionally, `anchor` ingests an idref which do not pass through shadow\n *     roots. You can also set `.anchorElement` to an element reference if\n *     necessary.\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-menu')\nexport class MdMenu extends Menu {\n  static override styles = [styles, forcedColors];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {SelectOption} from './selectoption/selectOptionController.js';\n\n/**\n * A type that describes a SelectOption and its index.\n */\nexport type SelectOptionRecord = [SelectOption, number];\n\n/**\n * Given a list of select options, this function will return an array of\n * SelectOptionRecords that are selected.\n *\n * @return An array of SelectOptionRecords describing the options that are\n * selected.\n */\nexport function getSelectedItems(items: SelectOption[]) {\n  const selectedItemRecords: SelectOptionRecord[] = [];\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.selected) {\n      selectedItemRecords.push([item, i]);\n    }\n  }\n\n  return selectedItemRecords;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../menu/menu.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {Field} from '../../field/internal/field.js';\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {redispatchEvent} from '../../internal/controller/events.js';\nimport {getActiveItem} from '../../list/internal/list-navigation-helpers.js';\nimport {CloseMenuEvent, isElementInSubtree, isSelectableKey} from '../../menu/internal/controllers/shared.js';\nimport {TYPEAHEAD_RECORD} from '../../menu/internal/controllers/typeaheadController.js';\nimport {DEFAULT_TYPEAHEAD_BUFFER_TIME, Menu} from '../../menu/internal/menu.js';\n\nimport {createRequestDeselectionEvent, createRequestSelectionEvent, SelectOption} from './selectoption/selectOptionController.js';\nimport {getSelectedItems, SelectOptionRecord} from './shared.js';\n\nconst VALUE = Symbol('value');\n\n/**\n * @fires input Fired when a selection is made by the user via mouse or keyboard\n * interaction.\n * @fires change Fired when a selection is made by the user via mouse or\n * keyboard interaction.\n * @fires opening Fired when the select's menu is about to open.\n * @fires opened Fired when the select's menu has finished animations and\n * opened.\n * @fires closing Fired when the select's menu is about to close.\n * @fires closed Fired when the select's menu has finished animations and\n * closed.\n */\nexport abstract class Select extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Select);\n  }\n\n  /** @nocollapse  */\n  static readonly formAssociated = true;\n\n  /**\n   * Opens the menu synchronously with no animation.\n   */\n  @property({type: Boolean}) quick = false;\n  /**\n   * Whether or not the select is required.\n   */\n  @property({type: Boolean}) required = false;\n  /**\n   * Disables the select.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n  /**\n   * The error message that replaces supporting text when `error` is true. If\n   * `errorText` is an empty string, then the supporting text will continue to\n   * show.\n   *\n   * This error message overrides the error message displayed by\n   * `reportValidity()`.\n   */\n  @property({type: String, attribute: 'error-text'}) errorText = '';\n  /**\n   * The floating label for the field.\n   */\n  @property() label = '';\n  /**\n   * Conveys additional information below the select, such as how it should\n   * be used.\n   */\n  @property({type: String, attribute: 'supporting-text'}) supportingText = '';\n  /**\n   * Gets or sets whether or not the select is in a visually invalid state.\n   *\n   * This error state overrides the error state controlled by\n   * `reportValidity()`.\n   */\n  @property({type: Boolean, reflect: true}) error = false;\n  /**\n   * Whether or not the underlying md-menu should be position: fixed to display\n   * in a top-level manner, or position: absolute.\n   *\n   * position:fixed is useful for cases where select is inside of another\n   * element with stacking context and hidden overflows such as `md-dialog`.\n   */\n  @property({attribute: 'menu-positioning'})\n  menuPositioning: 'absolute'|'fixed' = 'absolute';\n  /**\n   * The max time between the keystrokes of the typeahead select / menu behavior\n   * before it clears the typeahead buffer.\n   */\n  @property({type: Number, attribute: 'typeahead-delay'})\n  typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n  /**\n   * Whether or not the text field has a leading icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-leading-icon'})\n  hasLeadingIcon = false;\n  /**\n   * Text to display in the field. Only set for SSR.\n   */\n  @property({attribute: 'display-text'}) displayText = '';\n\n  /**\n   * The value of the currently selected option.\n   *\n   * Note: For SSR, set `[selected]` on the requested option and `displayText`\n   * rather than setting `value` setting `value` will incur a DOM query.\n   */\n  @property()\n  get value(): string {\n    return this[VALUE];\n  }\n\n  set value(value: string) {\n    if (isServer) return;\n    this.lastUserSetValue = value;\n    this.select(value);\n  }\n\n  [VALUE] = '';\n\n  get options() {\n    // NOTE: this does a DOM query.\n    return (this.menu?.items ?? []) as SelectOption[];\n  }\n\n  /**\n   * The index of the currently selected option.\n   *\n   * Note: For SSR, set `[selected]` on the requested option and `displayText`\n   * rather than setting `selectedIndex` setting `selectedIndex` will incur a\n   * DOM query.\n   */\n  @property({type: Number, attribute: 'selected-index'})\n  get selectedIndex(): number {\n    // tslint:disable-next-line:enforce-name-casing\n    const [_option, index] = (this.getSelectedOptions() ?? [])[0] ?? [];\n    return index ?? -1;\n  }\n\n  set selectedIndex(index: number) {\n    this.lastUserSetSelectedIndex = index;\n    this.selectIndex(index);\n  }\n\n  /**\n   * Returns an array of selected options.\n   *\n   * NOTE: md-select only suppoprts single selection.\n   */\n  get selectedOptions() {\n    return (this.getSelectedOptions() ?? []).map(([option]) => option);\n  }\n\n  /**\n   * The HTML name to use in form submission.\n   */\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this.internals.form;\n  }\n\n  /**\n   * The labels this element is associated with.\n   */\n  get labels() {\n    return this.internals.labels;\n  }\n\n  /**\n   * Returns a ValidityState object that represents the validity states of the\n   * checkbox.\n   *\n   * Note that selects will only set `valueMissing` if unselected and\n   * `required`.\n   */\n  get validity() {\n    this.syncValidity();\n    return this.internals.validity;\n  }\n\n  /**\n   * Returns the native validation error message.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n   */\n  get validationMessage() {\n    this.syncValidity();\n    return this.internals.validationMessage;\n  }\n\n  /**\n   * Returns whether an element will successfully validate based on forms\n   * validation rules and constraints.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n   */\n  get willValidate() {\n    this.syncValidity();\n    return this.internals.willValidate;\n  }\n\n  protected abstract readonly fieldTag: StaticValue;\n\n  /**\n   * Used for initializing select when the user sets the `value` directly.\n   */\n  private lastUserSetValue: string|null = null;\n\n  /**\n   * Used for initializing select when the user sets the `selectedIndex`\n   * directly.\n   */\n  private lastUserSetSelectedIndex: number|null = null;\n\n  /**\n   * Used for `input` and `change` event change detection.\n   */\n  private lastSelectedOption: SelectOption|null = null;\n\n  // tslint:disable-next-line:enforce-name-casing\n  private lastSelectedOptionRecords: SelectOptionRecord[] = [];\n\n  /**\n   * Whether or not a native error has been reported via `reportValidity()`.\n   */\n  @state() private nativeError = false;\n\n  /**\n   * The validation message displayed from a native error via\n   * `reportValidity()`.\n   */\n  @state() private nativeErrorText = '';\n  private get hasError() {\n    return this.error || this.nativeError;\n  }\n\n  @state() private focused = false;\n  @state() private open = false;\n  @query('.field') private readonly field!: Field|null;\n  @query('md-menu') private readonly menu!: Menu|null;\n  @query('#label') private readonly labelEl!: HTMLElement;\n  @queryAssignedElements({slot: 'leading-icon', flatten: true})\n  private readonly leadingIcons!: Element[];\n  private customValidationMessage = '';\n  private readonly internals =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  /**\n   * Selects an option given the value of the option, and updates MdSelect's\n   * value.\n   */\n  select(value: string) {\n    const optionToSelect = this.options.find(option => option.value === value);\n    if (optionToSelect) {\n      this.selectItem(optionToSelect);\n    }\n  }\n\n  /**\n   * Selects an option given the index of the option, and updates MdSelect's\n   * value.\n   */\n  selectIndex(index: number) {\n    const optionToSelect = this.options[index];\n    if (optionToSelect) {\n      this.selectItem(optionToSelect);\n    }\n  }\n\n  /**\n   * Reset the select to its default value.\n   */\n  reset() {\n    for (const option of this.options) {\n      option.selected = option.hasAttribute('selected');\n    }\n\n    this.updateValueAndDisplayText();\n    this.nativeError = false;\n    this.nativeErrorText = '';\n  }\n\n  /**\n   * Checks the select's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/checkValidity\n   *\n   * @return true if the select is valid, or false if not.\n   */\n  checkValidity() {\n    this.syncValidity();\n    return this.internals.checkValidity();\n  }\n\n  /**\n   * Checks the select's native validation and returns whether or not the\n   * element is valid.\n   *\n   * If invalid, this method will dispatch the `invalid` event.\n   *\n   * This method will display or clear an error text message equal to the\n   * select's `validationMessage`, unless the invalid event is canceled.\n   *\n   * Use `setCustomValidity()` to customize the `validationMessage`.\n   *\n   * This method can also be used to re-announce error messages to screen\n   * readers.\n   *\n   * @return true if the select is valid, or false if not.\n   */\n  reportValidity() {\n    let invalidEvent: Event|undefined;\n    this.addEventListener('invalid', event => {\n      invalidEvent = event;\n    }, {once: true});\n\n    const valid = this.checkValidity();\n    if (invalidEvent?.defaultPrevented) {\n      return valid;\n    }\n\n    const prevMessage = this.getErrorText();\n    this.nativeError = !valid;\n    this.nativeErrorText = this.validationMessage;\n\n    if (prevMessage === this.getErrorText()) {\n      this.field?.reannounceError();\n    }\n\n    return valid;\n  }\n\n  /**\n   * Sets the select's native validation error message. This is used to\n   * customize `validationMessage`.\n   *\n   * When the error is not an empty string, the select is considered invalid\n   * and `validity.customError` will be true.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/setCustomValidity\n   *\n   * @param error The error message to display.\n   */\n  setCustomValidity(error: string) {\n    this.customValidationMessage = error;\n    this.syncValidity();\n  }\n\n  protected override update(changed: PropertyValues<Select>) {\n    // In SSR the options will be ready to query, so try to figure out what\n    // the value and display text should be.\n    if (!this.hasUpdated) {\n      this.initUserSelection();\n    }\n\n    super.update(changed);\n  }\n\n  protected override render() {\n    return html`\n      <span\n          class=\"select ${classMap(this.getRenderClasses())}\"\n          @focusout=${this.handleFocusout}>\n        ${this.renderField()}\n        ${this.renderMenu()}\n      </span>\n    `;\n  }\n\n  protected override updated(changed: PropertyValues<Select>) {\n    if (changed.has('required')) {\n      this.syncValidity();\n    }\n  }\n\n  protected override async firstUpdated(changed: PropertyValues<Select>) {\n    await this.menu?.updateComplete;\n    // If this has been handled on update already due to SSR, try again.\n    if (!this.lastSelectedOptionRecords.length) {\n      this.initUserSelection();\n    }\n\n    // Case for when the DOM is streaming, there are no children, and a child\n    // has [selected] set on it, we need to wait for DOM to render something.\n    if (!this.lastSelectedOptionRecords.length && !isServer &&\n        !this.options.length) {\n      setTimeout(() => {\n        this.updateValueAndDisplayText();\n      });\n    }\n\n    super.firstUpdated(changed);\n  }\n\n  private getRenderClasses() {\n    return {\n      'disabled': this.disabled,\n      'error': this.error,\n      'open': this.open,\n    };\n  }\n\n  private renderField() {\n    // TODO(b/290078041): add aria-label/describedby\n    return staticHtml`\n      <${this.fieldTag}\n          aria-haspopup=\"listbox\"\n          role=\"combobox\"\n          part=\"field\"\n          id=\"field\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          aria-label=${(this as ARIAMixinStrict).ariaLabel || nothing}\n          aria-describedby=\"description\"\n          aria-expanded=${this.open ? 'true' : nothing}\n          aria-controls=\"listbox\"\n          class=\"field\"\n          label=${this.label}\n          .focused=${this.focused || this.open}\n          .populated=${!!this.displayText}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          .error=${this.hasError}\n          ?has-start=${this.hasLeadingIcon}\n          has-end\n          supporting-text=${this.supportingText}\n          error-text=${this.getErrorText()}\n          @keydown=${this.handleKeydown}\n          @click=${this.handleClick}\n          @focus=${this.handleFocus}\n          @blur=${this.handleBlur}>\n         ${this.renderFieldContent()}\n         <div id=\"description\" slot=\"aria-describedby\"></div>\n      </${this.fieldTag}>`;\n  }\n\n  private renderFieldContent() {\n    return [\n      this.renderLeadingIcon(),\n      this.renderLabel(),\n      this.renderTrailingIcon(),\n    ];\n  }\n\n  private renderLeadingIcon() {\n    return html`\n      <span class=\"icon leading\" slot=\"start\">\n         <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n     `;\n  }\n\n  private renderTrailingIcon() {\n    return html`\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}>\n          <svg height=\"5\" viewBox=\"7 10 10 5\" focusable=\"false\">\n            <polygon class=\"down\" stroke=\"none\" fill-rule=\"evenodd\" points=\"7 10 12 15 17 10\"></polygon>\n            <polygon class=\"up\" stroke=\"none\" fill-rule=\"evenodd\" points=\"7 15 12 10 17 15\"></polygon>\n          </svg>\n        </slot>\n      </span>\n     `;\n  }\n\n  private renderLabel() {\n    // need to render &nbsp; so that line-height can apply and give it a\n    // non-zero height\n    return html`<div id=\"label\">${this.displayText || html`&nbsp;`}</div>`;\n  }\n\n  private renderMenu() {\n    const ariaLabel = this.label || (this as ARIAMixinStrict).ariaLabel;\n    return html`\n      <md-menu\n          id=\"listbox\"\n          default-focus=\"none\"\n          role=\"listbox\"\n          tabindex=\"-1\"\n          aria-label=${ariaLabel || nothing}\n          stay-open-on-focusout\n          part=\"menu\"\n          exportparts=\"focus-ring: menu-focus-ring\"\n          anchor=\"field\"\n          .open=${this.open}\n          .quick=${this.quick}\n          .positioning=${this.menuPositioning}\n          .typeaheadDelay=${this.typeaheadDelay}\n          @opening=${this.handleOpening}\n          @opened=${this.redispatchEvent}\n          @closing=${this.redispatchEvent}\n          @closed=${this.handleClosed}\n          @close-menu=${this.handleCloseMenu}\n          @request-selection=${this.handleRequestSelection}\n          @request-deselection=${this.handleRequestDeselection}>\n        ${this.renderMenuContent()}\n      </md-menu>`;\n  }\n\n  private renderMenuContent() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * Handles opening the select on keydown and typahead selection when the menu\n   * is closed.\n   */\n  private handleKeydown(event: KeyboardEvent) {\n    if (this.open || this.disabled || !this.menu) {\n      return;\n    }\n\n    const typeaheadController = this.menu.typeaheadController;\n    const isOpenKey = event.code === 'Space' || event.code === 'ArrowDown' ||\n        event.code === 'Enter';\n\n    // Do not open if currently typing ahead because the user may be typing the\n    // spacebar to match a word with a space\n    if (!typeaheadController.isTypingAhead && isOpenKey) {\n      event.preventDefault();\n      this.open = true;\n      return;\n    }\n\n    const isPrintableKey = event.key.length === 1;\n\n    // Handles typing ahead when the menu is closed by delegating the event to\n    // the underlying menu's typeaheadController\n    if (isPrintableKey) {\n      typeaheadController.onKeydown(event);\n      event.preventDefault();\n\n      const {lastActiveRecord} = typeaheadController;\n\n      if (!lastActiveRecord) {\n        return;\n      }\n\n      this.labelEl?.setAttribute?.('aria-live', 'polite');\n      const hasChanged = this.selectItem(\n          lastActiveRecord[TYPEAHEAD_RECORD.ITEM] as SelectOption);\n\n      if (hasChanged) {\n        this.dispatchInteractionEvents();\n      }\n    }\n  }\n\n  private handleClick() {\n    this.open = true;\n  }\n\n  private handleFocus() {\n    this.focused = true;\n  }\n\n  private handleBlur() {\n    this.focused = false;\n  }\n\n  /**\n   * Handles closing the menu when the focus leaves the select's subtree.\n   */\n  private handleFocusout(event: FocusEvent) {\n    // Don't close the menu if we are switching focus between menu,\n    // select-option, and field\n    if (event.relatedTarget && isElementInSubtree(event.relatedTarget, this)) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  /**\n   * Gets a list of all selected select options as a list item record array.\n   *\n   * @return An array of selected list option records.\n   */\n  private getSelectedOptions() {\n    if (!this.menu) {\n      this.lastSelectedOptionRecords = [];\n      return null;\n    }\n\n    const items = this.menu.items as SelectOption[];\n    this.lastSelectedOptionRecords = getSelectedItems(items);\n    return this.lastSelectedOptionRecords;\n  }\n\n  override async getUpdateComplete() {\n    await this.menu?.updateComplete;\n    return super.getUpdateComplete();\n  }\n\n  /**\n   * Gets the selected options from the DOM, and updates the value and display\n   * text to the first selected option's value and headline respectively.\n   *\n   * @return Whether or not the selected option has changed since last update.\n   */\n  private updateValueAndDisplayText() {\n    const selectedOptions = this.getSelectedOptions() ?? [];\n    // Used to determine whether or not we need to fire an input / change event\n    // which fire whenever the option element changes (value or selectedIndex)\n    // on user interaction.\n    let hasSelectedOptionChanged = false;\n\n    if (selectedOptions.length) {\n      const [firstSelectedOption] = selectedOptions[0];\n      hasSelectedOptionChanged =\n          this.lastSelectedOption !== firstSelectedOption;\n      this.lastSelectedOption = firstSelectedOption;\n      this[VALUE] = firstSelectedOption.value;\n      this.displayText = firstSelectedOption.displayText;\n\n    } else {\n      hasSelectedOptionChanged = this.lastSelectedOption !== null;\n      this.lastSelectedOption = null;\n      this[VALUE] = '';\n      this.displayText = '';\n    }\n\n    this.internals.setFormValue(this.value);\n    this.syncValidity();\n    return hasSelectedOptionChanged;\n  }\n\n  /**\n   * Focuses and activates the last selected item upon opening, and resets other\n   * active items.\n   */\n  private async handleOpening(e: Event) {\n    this.labelEl?.removeAttribute?.('aria-live');\n    this.redispatchEvent(e);\n\n    const items = this.menu!.items as SelectOption[];\n    const activeItem = getActiveItem(items)?.item;\n    let [selectedItem] = this.lastSelectedOptionRecords[0] ?? [null];\n\n    // This is true if the user keys through the list but clicks out of the menu\n    // thus no close-menu event is fired by an item and we can't clean up in\n    // handleCloseMenu.\n    if (activeItem && activeItem !== selectedItem) {\n      activeItem.tabIndex = -1;\n    }\n\n    // in the case that nothing is selected, focus the first item\n    selectedItem = selectedItem ?? items[0];\n\n    if (selectedItem) {\n      selectedItem.tabIndex = 0;\n      selectedItem.focus();\n    }\n  }\n\n  private redispatchEvent(e: Event) {\n    redispatchEvent(this, e);\n  }\n\n  private handleClosed(e: Event) {\n    this.open = false;\n    this.redispatchEvent(e);\n  }\n\n  /**\n   * Determines the reason for closing, and updates the UI accordingly.\n   */\n  private handleCloseMenu(event: CloseMenuEvent) {\n    const reason = event.detail.reason;\n    const item = event.detail.itemPath[0] as SelectOption;\n    this.open = false;\n    let hasChanged = false;\n\n    if (reason.kind === 'click-selection') {\n      hasChanged = this.selectItem(item);\n    } else if (reason.kind === 'keydown' && isSelectableKey(reason.key)) {\n      hasChanged = this.selectItem(item);\n    } else {\n      // This can happen on ESC being pressed\n      item.tabIndex = -1;\n      item.blur();\n    }\n\n    // Dispatch interaction events since selection has been made via keyboard\n    // or mouse.\n    if (hasChanged) {\n      this.dispatchInteractionEvents();\n    }\n  }\n\n  /**\n   * Selects a given option, deselects other options, and updates the UI.\n   *\n   * @return Whether the last selected option has changed.\n   */\n  private selectItem(item: SelectOption) {\n    this.lastSelectedOptionRecords.forEach(([option]) => {\n      if (item !== option) {\n        option.selected = false;\n      }\n    });\n    item.selected = true;\n\n    return this.updateValueAndDisplayText();\n  }\n\n  /**\n   * Handles updating selection when an option element requests selection via\n   * property / attribute change.\n   */\n  private handleRequestSelection(\n      event: ReturnType<typeof createRequestSelectionEvent>) {\n    const requestingOptionEl = event.target as SelectOption & HTMLElement;\n\n    // No-op if this item is already selected.\n    if (this.lastSelectedOptionRecords.some(\n            ([option]) => option === requestingOptionEl)) {\n      return;\n    }\n\n    this.selectItem(requestingOptionEl);\n  }\n\n  /**\n   * Handles updating selection when an option element requests deselection via\n   * property / attribute change.\n   */\n  private handleRequestDeselection(\n      event: ReturnType<typeof createRequestDeselectionEvent>) {\n    const requestingOptionEl = event.target as SelectOption & HTMLElement;\n\n    // No-op if this item is not even in the list of tracked selected items.\n    if (!this.lastSelectedOptionRecords.some(\n            ([option]) => option === requestingOptionEl)) {\n      return;\n    }\n\n    this.updateValueAndDisplayText();\n  }\n\n  /**\n   * Attempts to initialize the selected option from user-settable values like\n   * SSR, setting `value`, or `selectedIndex` at startup.\n   */\n  private initUserSelection() {\n    // User has set `.value` directly, but internals have not yet booted up.\n    if (this.lastUserSetValue && !this.lastSelectedOptionRecords.length) {\n      this.select(this.lastUserSetValue);\n\n      // User has set `.selectedIndex` directly, but internals have not yet\n      // booted up.\n    } else if (\n        this.lastUserSetSelectedIndex !== null &&\n        !this.lastSelectedOptionRecords.length) {\n      this.selectIndex(this.lastUserSetSelectedIndex);\n\n      // Regular boot up!\n    } else {\n      this.updateValueAndDisplayText();\n    }\n  }\n\n  private handleIconChange() {\n    this.hasLeadingIcon = this.leadingIcons.length > 0;\n  }\n\n  /**\n   * Dispatches the `input` and `change` events.\n   */\n  private dispatchInteractionEvents() {\n    this.dispatchEvent(new Event('input', {bubbles: true, composed: true}));\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n  }\n\n  private getErrorText() {\n    return this.error ? this.errorText : this.nativeErrorText;\n  }\n\n  private syncValidity() {\n    const valueMissing = this.required && !this.value;\n    const customError = !!this.customValidationMessage;\n    const validationMessage = this.customValidationMessage ||\n        valueMissing && this.getRequiredValidationMessage() || '';\n\n    this.internals.setValidity({valueMissing, customError}, validationMessage);\n  }\n\n  // Returns the platform `<select>` validation message for i18n.\n  private getRequiredValidationMessage() {\n    const select = document.createElement('select');\n    select.required = true;\n    return select.validationMessage;\n  }\n\n  /** @private */\n  formResetCallback() {\n    this.reset();\n  }\n\n  /** @private */\n  formStateRestoreCallback(state: string) {\n    this.value = state;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/filled-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {Select} from './select.js';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport abstract class FilledSelect extends Select {\n  protected readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_text-field-active-indicator-color: var(--md-filled-select-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-active-indicator-height: var(--md-filled-select-text-field-active-indicator-height, 1px);--_text-field-container-color: var(--md-filled-select-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_text-field-container-shape-start-start: var( --md-filled-select-text-field-container-shape-start-start, var( --md-filled-select-text-field-container-shape, 4px ) );--_text-field-container-shape-start-end: var( --md-filled-select-text-field-container-shape-start-end, var( --md-filled-select-text-field-container-shape, 4px ) );--_text-field-container-shape-end-end: var( --md-filled-select-text-field-container-shape-end-end, var( --md-filled-select-text-field-container-shape, 0px ) );--_text-field-container-shape-end-start: var( --md-filled-select-text-field-container-shape-end-start, var( --md-filled-select-text-field-container-shape, 0px ) );--_text-field-disabled-active-indicator-color: var(--md-filled-select-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-active-indicator-height: var(--md-filled-select-text-field-disabled-active-indicator-height, 1px);--_text-field-disabled-active-indicator-opacity: var(--md-filled-select-text-field-disabled-active-indicator-opacity, 0.38);--_text-field-disabled-container-color: var(--md-filled-select-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-container-opacity: var(--md-filled-select-text-field-disabled-container-opacity, 0.04);--_text-field-disabled-input-text-color: var(--md-filled-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-filled-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-filled-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-filled-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-filled-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-filled-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-supporting-text-color: var(--md-filled-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-filled-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-filled-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-filled-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-active-indicator-color: var(--md-filled-select-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-active-indicator-color: var(--md-filled-select-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-input-text-color: var(--md-filled-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-filled-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-filled-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-supporting-text-color: var(--md-filled-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-filled-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-active-indicator-color: var(--md-filled-select-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-input-text-color: var(--md-filled-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-filled-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-filled-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-state-layer-color: var(--md-filled-select-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-state-layer-opacity: var(--md-filled-select-text-field-error-hover-state-layer-opacity, 0.08);--_text-field-error-hover-supporting-text-color: var(--md-filled-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-filled-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-filled-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-filled-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-filled-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-supporting-text-color: var(--md-filled-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-filled-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-active-indicator-color: var(--md-filled-select-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-active-indicator-height: var(--md-filled-select-text-field-focus-active-indicator-height, 3px);--_text-field-focus-input-text-color: var(--md-filled-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-filled-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-filled-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-supporting-text-color: var(--md-filled-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-filled-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-active-indicator-color: var(--md-filled-select-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-active-indicator-height: var(--md-filled-select-text-field-hover-active-indicator-height, 1px);--_text-field-hover-input-text-color: var(--md-filled-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-filled-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-filled-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-state-layer-color: var(--md-filled-select-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-state-layer-opacity: var(--md-filled-select-text-field-hover-state-layer-opacity, 0.08);--_text-field-hover-supporting-text-color: var(--md-filled-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-filled-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-filled-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-filled-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-filled-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-filled-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-filled-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-filled-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-filled-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-filled-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-filled-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-filled-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-filled-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-filled-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-filled-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-filled-select-text-field-leading-icon-size, 24px);--_text-field-supporting-text-color: var(--md-filled-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-filled-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-filled-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-filled-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-filled-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-filled-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-filled-select-text-field-trailing-icon-size, 24px);--md-filled-field-active-indicator-color: var(--_text-field-active-indicator-color);--md-filled-field-active-indicator-height: var(--_text-field-active-indicator-height);--md-filled-field-container-color: var(--_text-field-container-color);--md-filled-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-filled-field-content-color: var(--_text-field-input-text-color);--md-filled-field-content-font: var(--_text-field-input-text-font);--md-filled-field-content-line-height: var(--_text-field-input-text-line-height);--md-filled-field-content-size: var(--_text-field-input-text-size);--md-filled-field-content-weight: var(--_text-field-input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_text-field-disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_text-field-disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_text-field-disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_text-field-disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_text-field-disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_text-field-error-active-indicator-color);--md-filled-field-error-content-color: var(--_text-field-error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_text-field-error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_text-field-error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_text-field-error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_text-field-error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-filled-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_text-field-focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_text-field-focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_text-field-hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_text-field-hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_text-field-hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_text-field-hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_text-field-label-text-color);--md-filled-field-label-text-font: var(--_text-field-label-text-font);--md-filled-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-filled-field-label-text-size: var(--_text-field-label-text-size);--md-filled-field-label-text-weight: var(--_text-field-label-text-weight);--md-filled-field-leading-content-color: var(--_text-field-leading-icon-color);--md-filled-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-filled-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-filled-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-filled-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}/*# sourceMappingURL=filled-select-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{color:unset;min-width:210px;display:flex}.field{cursor:default;outline:none}.select{position:relative;flex-direction:column}.icon.trailing svg,.icon ::slotted(*){fill:currentColor}.icon ::slotted(*){width:inherit;height:inherit;font-size:inherit}.icon slot{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.icon.trailing :is(.up,.down){opacity:0;transition:opacity 75ms linear 75ms}.select:not(.open) .down,.select.open .up{opacity:1}.field,.select,md-menu{min-width:inherit;width:inherit;max-width:inherit;display:flex}.field,.select{width:100%}:host{display:inline-flex}:host([disabled]){pointer-events:none}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as filledForcedColorsStyles} from './internal/filled-forced-colors-styles.css.js';\nimport {FilledSelect} from './internal/filled-select.js';\nimport {styles} from './internal/filled-select-styles.css.js';\nimport {styles as sharedStyles} from './internal/shared-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-select': MdFilledSelect;\n  }\n}\n\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"filled\"\n * variant.\n *\n * @example\n * ```html\n * <md-filled-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-filled-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-select')\nexport class MdFilledSelect extends FilledSelect {\n  static override styles = [sharedStyles, styles, filledForcedColorsStyles];\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`@media(forced-colors: active){:host([disabled]),:host([disabled]) slot{color:GrayText;opacity:1}.list-item{position:relative}.list-item.selected::before{content:\"\";position:absolute;inset:0;box-sizing:border-box;border-radius:inherit;pointer-events:none;border:3px double CanvasText}}/*# sourceMappingURL=forced-colors-styles.css.map */\n`;\n ", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:flex;--md-ripple-hover-color: var(--md-menu-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-menu-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-menu-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-menu-item-pressed-state-layer-opacity, 0.12)}:host([disabled]){opacity:var(--md-menu-item-disabled-opacity, 0.3);pointer-events:none}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.list-item:not(.disabled){cursor:pointer}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;color:var(--md-menu-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-menu-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-menu-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-menu-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-menu-item-one-line-container-height, 56px);padding-top:var(--md-menu-item-top-space, 12px);padding-bottom:var(--md-menu-item-bottom-space, 12px);padding-inline-start:var(--md-menu-item-leading-space, 16px);padding-inline-end:var(--md-menu-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-menu-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-menu-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-menu-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-menu-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-menu-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-menu-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-menu-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-menu-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-menu-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}.list-item.selected{background-color:var(--md-menu-item-selected-container-color, var(--md-sys-color-secondary-container, #e8def8))}.selected:not(.disabled) ::slotted(*){color:var(--md-menu-item-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b))}/*# sourceMappingURL=menu-item-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\nimport {property, queryAll} from 'lit/decorators.js';\n\n/**\n * An item layout component.\n */\nexport class Item extends LitElement {\n  /**\n   * Only needed for SSR.\n   *\n   * Add this attribute when an item has two lines to avoid a Flash Of Unstyled\n   * Content. This attribute is not needed for single line items or items with\n   * three or more lines.\n   */\n  @property({type: Boolean, reflect: true}) multiline = false;\n\n  @queryAll('.text slot') private readonly textSlots!: HTMLSlotElement[];\n\n  override render() {\n    return html`\n      <slot name=\"container\"></slot>\n      <slot class=\"non-text\" name=\"start\"></slot>\n      <div class=\"text\">\n        <slot name=\"overline\"\n            @slotchange=${this.handleTextSlotChange}></slot>\n        <slot class=\"default-slot\"\n            @slotchange=${this.handleTextSlotChange}></slot>\n        <slot name=\"headline\"\n            @slotchange=${this.handleTextSlotChange}></slot>\n        <slot name=\"supporting-text\"\n            @slotchange=${this.handleTextSlotChange}></slot>\n      </div>\n      <slot class=\"non-text\" name=\"trailing-supporting-text\"></slot>\n      <slot class=\"non-text\" name=\"end\"></slot>\n    `;\n  }\n\n  private handleTextSlotChange() {\n    // Check if there's more than one text slot with content. If so, the item is\n    // multiline, which has a different min-height than single line items.\n    let isMultiline = false;\n    let slotsWithContent = 0;\n    for (const slot of this.textSlots) {\n      if (slotHasContent(slot)) {\n        slotsWithContent += 1;\n      }\n\n      if (slotsWithContent > 1) {\n        isMultiline = true;\n        break;\n      }\n    }\n\n    this.multiline = isMultiline;\n  }\n}\n\nfunction slotHasContent(slot: HTMLSlotElement) {\n  for (const node of slot.assignedNodes({flatten: true})) {\n    // Assume there's content if there's an element slotted in\n    const isElement = node.nodeType === Node.ELEMENT_NODE;\n    // If there's only text nodes for the default slot, check if there's\n    // non-whitespace.\n    const isTextWithContent =\n        node.nodeType === Node.TEXT_NODE && node.textContent?.match(/\\S/);\n    if (isElement || isTextWithContent) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{color:var(--md-sys-color-on-surface, #1d1b20);font-family:var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-large-size, 1rem);font-weight:var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-large-line-height, 1.5rem);align-items:center;box-sizing:border-box;display:flex;gap:16px;min-height:56px;overflow:hidden;padding:12px 16px;position:relative;text-overflow:ellipsis}:host([multiline]){min-height:72px}[name=overline]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-medium-size, 0.875rem);font-weight:var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-medium-line-height, 1.25rem)}[name=trailing-supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=container]::slotted(*){inset:0;position:absolute}.default-slot{display:inline}.default-slot,::slotted(*){overflow:hidden;text-overflow:ellipsis}.text{display:flex;flex:1;flex-direction:column;overflow:hidden}/*# sourceMappingURL=item-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Item} from './internal/item.js';\nimport {styles} from './internal/item-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-item': MdItem;\n  }\n}\n\n/**\n * An item layout component that can be used inside list items to give them\n * their customizable structure.\n *\n * `<md-item>` does not have any functionality, which must be added by the\n * component using it.\n *\n * All text will wrap unless `white-space: nowrap` is set on the item or any of\n * its children.\n *\n * Slots available:\n * - `<default>`: The headline, or custom content.\n * - `headline`: The first line.\n * - `supporting-text`: Supporting text lines underneath the headline.\n * - `trailing-supporting-text`: A small text snippet at the end of the item.\n * - `start`: Any leading content, such as icons, avatars, or checkboxes.\n * - `end`: Any trailing content, such as icons and buttons.\n * - `container`: Background container content, intended for adding additional\n *     styles, such as ripples or focus rings.\n *\n * @example\n * ```html\n * <md-item>Single line</md-item>\n *\n * <md-item>\n *   <div class=\"custom-content\">...</div>\n * </md-item>\n *\n * <!-- Classic 1 to 3+ line list items -->\n * <md-item>\n *   <md-icon slot=\"start\">image</md-icon>\n *   <div slot=\"overline\">Overline</div>\n *   <div slot=\"headline\">Headline</div>\n *   <div=\"supporting-text\">Supporting text</div>\n *   <div=\"trailing-supporting-text\">Trailing</div>\n *   <md-icon slot=\"end\">image</md-icon>\n * </md-item>\n * ```\n *\n * When wrapping `<md-item>`, forward the available slots to use the same slot\n * structure for the wrapping component (this is what `<md-list-item>` does).\n *\n * @example\n * ```html\n * <md-item>\n *   <slot></slot>\n *   <slot name=\"overline\" slot=\"overline\"></slot>\n *   <slot name=\"headline\" slot=\"headline\"></slot>\n *   <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n *   <slot name=\"trailing-supporting-text\"\n *       slot=\"trailing-supporting-text\"></slot>\n *   <slot name=\"start\" slot=\"start\"></slot>\n *   <slot name=\"end\" slot=\"end\"></slot>\n * </md-item>\n * ```\n */\n@customElement('md-item')\nexport class MdItem extends Item {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\n\nimport {CloseReason, createDefaultCloseMenuEvent, isClosableKey} from './shared.js';\n\n/**\n * Interface specific to menu item and not HTMLElement.\n *\n * NOTE: required properties are expected to be reactive.\n */\ninterface MenuItemAdditions {\n  /**\n   * Whether or not the item is in the disabled state.\n   */\n  disabled: boolean;\n  /**\n   * The text of the item that will be used for typeahead. If not set, defaults\n   * to the textContent of the element slotted into the headline.\n   */\n  typeaheadText: string;\n  /**\n   * Whether or not the item is in the selected visual state.\n   */\n  selected: boolean;\n  /**\n   * Sets the behavior and role of the menu item, defaults to \"menuitem\".\n   */\n  type: MenuItemType;\n  /**\n   * Whether it should keep the menu open after click.\n   */\n  keepOpen?: boolean;\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  href?: string;\n  /**\n   * Focuses the item.\n   */\n  focus: () => void;\n}\n\n/**\n * The interface of every menu item interactive with a menu. All menu items\n * should implement this interface to be compatible with md-menu. Additionally\n * it should have the `md-menu-item` attribute set.\n *\n * NOTE, the required properties are recommended to be reactive properties.\n */\nexport type MenuItem = MenuItemAdditions&HTMLElement;\n\n/**\n * Supported behaviors for a menu item.\n */\nexport type MenuItemType = 'menuitem'|'option'|'button'|'link';\n\n/**\n * The options used to inialize MenuItemController.\n */\nexport interface MenuItemControllerConfig {\n  /**\n   * A function that returns the headline element of the menu item.\n   */\n  getHeadlineElements: () => HTMLElement[];\n}\n\n/**\n * A controller that provides most functionality of an element that implements\n * the MenuItem interface.\n */\nexport class MenuItemController implements ReactiveController {\n  private internalTypeaheadText: string|null = null;\n  private readonly getHeadlineElements:\n      MenuItemControllerConfig['getHeadlineElements'];\n\n  /**\n   * @param host The MenuItem in which to attach this controller to.\n   * @param config The object that configures this controller's behavior.\n   */\n  constructor(\n      private readonly host: ReactiveControllerHost&MenuItem,\n      config: MenuItemControllerConfig) {\n    const {\n      getHeadlineElements,\n    } = config;\n    this.getHeadlineElements = getHeadlineElements;\n    this.host.addController(this);\n  }\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot.\n   */\n  get typeaheadText() {\n    if (this.internalTypeaheadText !== null) {\n      return this.internalTypeaheadText;\n    }\n\n    const headlineElements = this.getHeadlineElements();\n\n    const textParts: string[] = [];\n    headlineElements.forEach((headlineElement) => {\n      if (headlineElement.textContent && headlineElement.textContent.trim()) {\n        textParts.push(headlineElement.textContent.trim());\n      }\n    });\n\n    return textParts.join(' ');\n  }\n\n  /**\n   * The recommended tag name to render as the list item.\n   */\n  get tagName() {\n    const type = this.host.type;\n\n    switch (type) {\n      case 'link':\n        return 'a' as const;\n      case 'button':\n        return 'button' as const;\n      default:\n      case 'menuitem':\n      case 'option':\n        return 'li' as const;\n    }\n  }\n\n  /**\n   * The recommended role of the menu item.\n   */\n  get role() {\n    return this.host.type === 'option' ? 'option' : 'menuitem';\n  }\n\n  hostConnected() {\n    this.host.toggleAttribute('md-menu-item', true);\n  }\n\n  hostUpdate() {\n    if (this.host.href) {\n      this.host.type = 'link';\n    }\n  }\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onClick = () => {\n    if (this.host.keepOpen) return;\n\n    this.host.dispatchEvent(createDefaultCloseMenuEvent(\n        this.host, {kind: CloseReason.CLICK_SELECTION}));\n  };\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onKeydown = (event: KeyboardEvent) => {\n    if (this.host.keepOpen || event.defaultPrevented) return;\n    const keyCode = event.code;\n\n    if (!event.defaultPrevented && isClosableKey(keyCode)) {\n      event.preventDefault();\n      this.host.dispatchEvent(createDefaultCloseMenuEvent(\n          this.host, {kind: CloseReason.KEYDOWN, key: keyCode}));\n    }\n  };\n\n  /**\n   * Use to set the typeaheadText when it changes.\n   */\n  setTypeaheadText(text: string) {\n    this.internalTypeaheadText = text;\n  }\n}", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\n\nimport {MenuItem, MenuItemController, MenuItemControllerConfig} from '../../../menu/internal/controllers/menuItemController.js';\n\n/**\n * The interface specific to a Select Option\n */\ninterface SelectOptionSelf {\n  /**\n   * The form value associated with the Select Option. (Note: the visual portion\n   * of the SelectOption is the headline defined in ListItem)\n   */\n  value: string;\n  /**\n   * Whether or not the SelectOption is selected.\n   */\n  selected: boolean;\n  /**\n   * The text to display in the select when selected. Defaults to the\n   * textContent of the Element slotted into the headline.\n   */\n  displayText: string;\n}\n\n/**\n * The interface to implement for a select option. Additionally, the element\n * must have `md-list-item` and `md-menu-item` attributes on the host.\n */\nexport type SelectOption = SelectOptionSelf&MenuItem;\n\n/**\n * Creates an event fired by a SelectOption to request selection from md-select.\n * Typically fired after `selected` changes from `false` to `true`.\n */\nexport function createRequestSelectionEvent() {\n  return new Event('request-selection', {\n    bubbles: true,\n    composed: true,\n  });\n}\n\n/**\n * Creates an event fired by a SelectOption to request deselection from\n * md-select. Typically fired after `selected` changes from `true` to `false`.\n */\nexport function createRequestDeselectionEvent() {\n  return new Event('request-deselection', {\n    bubbles: true,\n    composed: true,\n  });\n}\n\n/**\n * The options used to inialize SelectOptionController.\n */\nexport type SelectOptionConfig = MenuItemControllerConfig;\n\n/**\n * A controller that provides most functionality and md-select compatibility for\n * an element that implements the SelectOption interface.\n */\nexport class SelectOptionController implements ReactiveController {\n  private readonly menuItemController: MenuItemController;\n  private readonly getHeadlineElements:\n      SelectOptionConfig['getHeadlineElements'];\n  private internalDisplayText: string|null = null;\n  private lastSelected = this.host.selected;\n  private firstUpdate = true;\n\n  /**\n   * The recommended role of the select option.\n   */\n  get role() {\n    return this.menuItemController.role;\n  }\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot.\n   */\n  get typeaheadText() {\n    return this.menuItemController.typeaheadText;\n  }\n\n  setTypeaheadText(text: string) {\n    this.menuItemController.setTypeaheadText(text);\n  }\n\n  /**\n   * The text that is displayed in the select field when selected. If not set,\n   * defaults to the textContent of the item slotted into the `\"headline\"` slot.\n   */\n  get displayText() {\n    if (this.internalDisplayText !== null) {\n      return this.internalDisplayText;\n    }\n\n    const headlineElements = this.getHeadlineElements();\n\n    const textParts: string[] = [];\n    headlineElements.forEach((headlineElement) => {\n      if (headlineElement.textContent && headlineElement.textContent.trim()) {\n        textParts.push(headlineElement.textContent.trim());\n      }\n    });\n\n    return textParts.join(' ');\n  }\n\n  setDisplayText(text: string) {\n    this.internalDisplayText = text;\n  }\n\n  /**\n   * @param host The SelectOption in which to attach this controller to.\n   * @param config The object that configures this controller's behavior.\n   */\n  constructor(\n      private readonly host: ReactiveControllerHost&SelectOption,\n      config: SelectOptionConfig) {\n    this.menuItemController = new MenuItemController(host, config);\n    this.getHeadlineElements = config.getHeadlineElements;\n    host.addController(this);\n  }\n\n  hostUpdate() {\n    if (this.lastSelected !== this.host.selected) {\n      this.host.ariaSelected = this.host.selected ? 'true' : 'false';\n    }\n  }\n\n  hostUpdated() {\n    // Do not dispatch event on first update / boot-up.\n    if (this.lastSelected !== this.host.selected && !this.firstUpdate) {\n      // This section is really useful for when the user sets selected on the\n      // option programmatically. Most other cases (click and keyboard) are\n      // handled by md-select because it needs to coordinate the\n      // single-selection behavior.\n      if (this.host.selected) {\n        this.host.dispatchEvent(createRequestSelectionEvent());\n      } else {\n        this.host.dispatchEvent(createRequestDeselectionEvent());\n      }\n    }\n\n    this.lastSelected = this.host.selected;\n    this.firstUpdate = false;\n  }\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onClick = () => {\n    this.menuItemController.onClick();\n  };\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onKeydown = (e: KeyboardEvent) => {\n    this.menuItemController.onKeydown(e);\n  };\n}", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../ripple/ripple.js';\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\n\nimport {html, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\n\nimport {SelectOption, SelectOptionController} from './selectOptionController.js';\n\n/**\n * @fires close-menu Closes the encapsulating menu on\n * @fires request-selection Requests the parent md-select to select this element\n * (and deselect others if single-selection) when `selected` changed to `true`.\n * @fires request-deselection Requests the parent md-select to deselect this\n * element when `selected` changed to `false`.\n */\nexport class SelectOptionEl extends LitElement implements SelectOption {\n  static {\n    requestUpdateOnAriaChange(SelectOptionEl);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true\n  };\n\n  /**\n   * Disables the item and makes it non-selectable and non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * READONLY: self-identifies as a menu item and sets its identifying attribute\n   */\n  @property({type: Boolean, attribute: 'md-menu-item', reflect: true})\n  isMenuItem = true;\n\n  /**\n   * Sets the item in the selected visual state when a submenu is opened.\n   */\n  @property({type: Boolean}) selected = false;\n  /**\n   * Form value of the option.\n   */\n  @property() value = '';\n\n  @query('.list-item') protected readonly listItemRoot!: HTMLElement|null;\n\n  @queryAssignedElements({slot: 'headline'})\n  protected readonly headlineElements!: HTMLElement[];\n\n  type = 'option' as const;\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot.\n   */\n  get typeaheadText() {\n    return this.selectOptionController.typeaheadText;\n  }\n\n  @property({attribute: 'typeahead-text'})\n  set typeaheadText(text: string) {\n    this.selectOptionController.setTypeaheadText(text);\n  }\n\n  /**\n   * The text that is displayed in the select field when selected. If not set,\n   * defaults to the textContent of the item slotted into the `\"headline\"` slot.\n   */\n  get displayText() {\n    return this.selectOptionController.displayText;\n  }\n\n  @property({attribute: 'display-text'})\n  set displayText(text: string) {\n    this.selectOptionController.setDisplayText(text);\n  }\n\n  private readonly selectOptionController = new SelectOptionController(this, {\n    getHeadlineElements: () => {\n      return this.headlineElements;\n    }\n  });\n\n  protected override render() {\n    return this.renderListItem(html`\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()}\n          ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n  }\n\n  /**\n   * Renders the root list item.\n   *\n   * @param content the child content of the list item.\n   */\n  protected renderListItem(content: unknown) {\n    return html`\n      <li\n        id=\"item\"\n        tabindex=${this.disabled ? -1 : 0}\n        role=${this.selectOptionController.role}\n        aria-label=${(this as ARIAMixinStrict).ariaLabel || nothing}\n        aria-selected=${(this as ARIAMixinStrict).ariaSelected || nothing}\n        aria-checked=${(this as ARIAMixinStrict).ariaChecked || nothing}\n        aria-expanded=${(this as ARIAMixinStrict).ariaExpanded || nothing}\n        aria-haspopup=${(this as ARIAMixinStrict).ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        @click=${this.selectOptionController.onClick}\n        @keydown=${this.selectOptionController.onKeydown}\n      >${content}</li>\n    `;\n  }\n\n  /**\n   * Handles rendering of the ripple element.\n   */\n  protected renderRipple() {\n    return html`\n      <md-ripple\n          part=\"ripple\"\n          for=\"item\"\n          ?disabled=${this.disabled}></md-ripple>`;\n  }\n\n  /**\n   * Handles rendering of the focus ring.\n   */\n  protected renderFocusRing() {\n    return html`\n      <md-focus-ring\n          part=\"focus-ring\"\n          for=\"item\"\n          inward></md-focus-ring>`;\n  }\n\n  /**\n   * Classes applied to the list item root.\n   */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'disabled': this.disabled,\n      'selected': this.selected,\n    };\n  }\n\n  /**\n   * Handles rendering the headline and supporting text.\n   */\n  protected renderBody() {\n    return html`\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot name=\"trailing-supporting-text\"\n          slot=\"trailing-supporting-text\"></slot>\n    `;\n  }\n\n  override focus() {\n    // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n    // work programmatically like in FF and select-option\n    this.listItemRoot?.focus();\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as forcedColorsStyles} from '../menu/internal/menuitem/forced-colors-styles.css.js';\nimport {styles} from '../menu/internal/menuitem/menu-item-styles.css.js';\n\n// TODO(b/236285090): update with HCM best practices\nimport {SelectOptionEl} from './internal/selectoption/select-option.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-select-option': MdSelectOption;\n  }\n}\n\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the option that\n * can be placed inside of an md-select.\n *\n * This component is a subclass of `md-menu-item` and can accept the same slots,\n * properties, and events as `md-menu-item`.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-select-option')\nexport class MdSelectOption extends SelectOptionEl {\n  static override styles = [styles, forcedColorsStyles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\n\n/**\n * A divider component.\n */\nexport class Divider extends LitElement {\n  /**\n   * Indents the divider with equal padding on both sides.\n   */\n  @property({type: Boolean, reflect: true}) inset = false;\n\n  /**\n   * Indents the divider with padding on the leading side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-start'})\n  insetStart = false;\n\n  /**\n   * Indents the divider with padding on the trailing side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-end'})\n  insetEnd = false;\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_color: var(--md-divider-color, var(--md-sys-color-outline-variant, #cac4d0));--_thickness: var(--md-divider-thickness, 1px);box-sizing:border-box;color:var(--_color);display:flex;height:var(--_thickness);width:100%}:host([inset]),:host([inset-start]){padding-inline-start:16px}:host([inset]),:host([inset-end]){padding-inline-end:16px}:host::before{background:currentColor;content:\"\";height:100%;width:100%}@media(forced-colors: active){:host::before{background:CanvasText}}/*# sourceMappingURL=divider-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Divider} from './internal/divider.js';\nimport {styles} from './internal/divider-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-divider': MdDivider;\n  }\n}\n\n/**\n * @summary A divider is a thin line that groups content in lists and\n * containers.\n *\n * @description Dividers can reinforce tapability, such as when used to separate\n * list items or define tappable regions in an accordion.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-divider')\nexport class MdDivider extends Divider {\n  static override styles = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {EASING} from '../../internal/motion/animation.js';\n\n/**\n * A dialog animation's arguments. See `Element.prototype.animate`.\n */\nexport type DialogAnimationArgs = Parameters<Element['animate']>;\n\n/**\n * A collection of dialog animations. Each element of a dialog may have multiple\n * animations.\n */\nexport interface DialogAnimation {\n  /**\n   * Animations for the dialog itself.\n   */\n  dialog?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the scrim backdrop.\n   */\n  scrim?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the container of the dialog.\n   */\n  container?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the headline section.\n   */\n  headline?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the contents section.\n   */\n  content?: DialogAnimationArgs[];\n  /**\n   * Animations for the actions section.\n   */\n  actions?: DialogAnimationArgs[];\n}\n\n/**\n * The default dialog open animation.\n */\nexport const DIALOG_DEFAULT_OPEN_ANIMATION: DialogAnimation = {\n  dialog: [\n    [\n      // Dialog slide down\n      [{'transform': 'translateY(-50px)'}, {'transform': 'translateY(0)'}],\n      {duration: 500, easing: EASING.EMPHASIZED}\n    ],\n  ],\n  scrim: [\n    [\n      // Scrim fade in\n      [{'opacity': 0}, {'opacity': 0.32}], {duration: 500, easing: 'linear'}\n    ],\n  ],\n  container: [\n    [\n      // Container fade in\n      [{'opacity': 0}, {'opacity': 1}],\n      {duration: 50, easing: 'linear', pseudoElement: '::before'}\n    ],\n    [\n      // Container grow\n      // Note: current spec says to grow from 0dp->100% and shrink from\n      // 100%->35%. We change this to 35%->100% to simplify the animation that\n      // is supposed to clip content as it grows. From 0dp it's possible to see\n      // text/actions appear before the container has fully grown.\n      [{'height': '35%'}, {'height': '100%'}],\n      {duration: 500, easing: EASING.EMPHASIZED, pseudoElement: '::before'},\n    ],\n  ],\n  headline: [\n    [\n      // Headline fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.2}, {'opacity': 1}],\n      {duration: 250, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n  content: [\n    [\n      // Content fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.2}, {'opacity': 1}],\n      {duration: 250, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n  actions: [\n    [\n      // Actions fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.5}, {'opacity': 1}],\n      {duration: 300, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n};\n\n/**\n * The default dialog close animation.\n */\nexport const DIALOG_DEFAULT_CLOSE_ANIMATION: DialogAnimation = {\n  dialog: [\n    [\n      // Dialog slide up\n      [{'transform': 'translateY(0)'}, {'transform': 'translateY(-50px)'}],\n      {duration: 150, easing: EASING.EMPHASIZED_ACCELERATE}\n    ],\n  ],\n  scrim: [\n    [\n      // Scrim fade out\n      [{'opacity': 0.32}, {'opacity': 0}], {duration: 150, easing: 'linear'}\n    ],\n  ],\n  container: [\n    [\n      // Container shrink\n      [{'height': '100%'}, {'height': '35%'}],\n      {\n        duration: 150,\n        easing: EASING.EMPHASIZED_ACCELERATE,\n        pseudoElement: '::before',\n      },\n    ],\n    [\n      // Container fade out\n      [{'opacity': '1'}, {'opacity': '0'}],\n      {delay: 100, duration: 50, easing: 'linear', pseudoElement: '::before'},\n    ]\n  ],\n  headline: [\n    [\n      // Headline fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n  content: [\n    [\n      // Content fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n  actions: [\n    [\n      // Actions fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'}\n    ],\n  ],\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../divider/divider.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {redispatchEvent} from '../../internal/controller/events.js';\n\nimport {DIALOG_DEFAULT_CLOSE_ANIMATION, DIALOG_DEFAULT_OPEN_ANIMATION, DialogAnimation, DialogAnimationArgs} from './animations.js';\n\n/**\n * A dialog component.\n *\n * @fires open Dispatched when the dialog is opening before any animations.\n * @fires opened Dispatched when the dialog has opened after any animations.\n * @fires close Dispatched when the dialog is closing before any animations.\n * @fires closed Dispatched when the dialog has closed after any animations.\n * @fires cancel Dispatched when the dialog has been canceled by clicking on the\n *     scrim or pressing Escape.\n */\nexport class Dialog extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Dialog);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true\n  };\n\n  /**\n   * Opens the dialog when set to `true` and closes it when set to `false`.\n   */\n  @property({type: Boolean})\n  get open() {\n    return this.isOpen;\n  }\n\n  set open(open: boolean) {\n    if (open === this.isOpen) {\n      return;\n    }\n\n    this.isOpen = open;\n    if (open) {\n      this.setAttribute('open', '');\n      this.show();\n    } else {\n      this.removeAttribute('open');\n      this.close();\n    }\n  }\n\n  /**\n   * Gets or sets the dialog's return value, usually to indicate which button\n   * a user pressed to close it.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue\n   */\n  @property({attribute: false}) returnValue = '';\n\n  /**\n   * The type of dialog for accessibility. Set this to `alert` to announce a\n   * dialog as an alert dialog.\n   */\n  @property() type?: 'alert';\n\n  /**\n   * Gets the opening animation for a dialog. Set to a new function to customize\n   * the animation.\n   */\n  getOpenAnimation = () => DIALOG_DEFAULT_OPEN_ANIMATION;\n\n  /**\n   * Gets the closing animation for a dialog. Set to a new function to customize\n   * the animation.\n   */\n  getCloseAnimation = () => DIALOG_DEFAULT_CLOSE_ANIMATION;\n\n  private isOpen = false;\n  private isOpening = false;\n  // getIsConnectedPromise() immediately sets the resolve property.\n  private isConnectedPromiseResolve!: () => void;\n  private isConnectedPromise = this.getIsConnectedPromise();\n  @query('dialog') private readonly dialog!: HTMLDialogElement|null;\n  @query('.scrim') private readonly scrim!: HTMLDialogElement|null;\n  @query('.container') private readonly container!: HTMLDialogElement|null;\n  @query('.headline') private readonly headline!: HTMLDialogElement|null;\n  @query('.content') private readonly content!: HTMLDialogElement|null;\n  @query('.actions') private readonly actions!: HTMLDialogElement|null;\n  @state() private isAtScrollTop = false;\n  @state() private isAtScrollBottom = false;\n  @query('.scroller') private readonly scroller!: HTMLElement|null;\n  @query('.top.anchor') private readonly topAnchor!: HTMLElement|null;\n  @query('.bottom.anchor') private readonly bottomAnchor!: HTMLElement|null;\n  private nextClickIsFromContent = false;\n  private intersectionObserver?: IntersectionObserver;\n  // Dialogs should not be SSR'd while open, so we can just use runtime checks.\n  @state() private hasHeadline = false;\n  @state() private hasActions = false;\n  @state() private hasIcon = false;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('submit', this.handleSubmit);\n    }\n  }\n\n  /**\n   * Opens the dialog and fires a cancelable `open` event. After a dialog's\n   * animation, an `opened` event is fired.\n   *\n   * Add an `autocomplete` attribute to a child of the dialog that should\n   * receive focus after opening.\n   *\n   * @return A Promise that resolves after the animation is finished and the\n   *     `opened` event was fired.\n   */\n  async show() {\n    this.isOpening = true;\n    // Dialogs can be opened before being attached to the DOM, so we need to\n    // wait until we're connected before calling `showModal()`.\n    await this.isConnectedPromise;\n    await this.updateComplete;\n    const dialog = this.dialog!;\n    // Check if already opened or if `dialog.close()` was called while awaiting.\n    if (dialog.open || !this.isOpening) {\n      this.isOpening = false;\n      return;\n    }\n\n    const preventOpen =\n        !this.dispatchEvent(new Event('open', {cancelable: true}));\n    if (preventOpen) {\n      this.open = false;\n      return;\n    }\n\n    // All Material dialogs are modal.\n    dialog.showModal();\n    this.open = true;\n    // Reset scroll position if re-opening a dialog with the same content.\n    if (this.scroller) {\n      this.scroller.scrollTop = 0;\n    }\n    // Native modal dialogs ignore autofocus and instead force focus to the\n    // first focusable child. Override this behavior if there is a child with\n    // an autofocus attribute.\n    this.querySelector<HTMLElement>('[autofocus]')?.focus();\n\n    await this.animateDialog(this.getOpenAnimation());\n    this.dispatchEvent(new Event('opened'));\n    this.isOpening = false;\n  }\n\n  /**\n   * Closes the dialog and fires a cancelable `close` event. After a dialog's\n   * animation, a `closed` event is fired.\n   *\n   * @param returnValue A return value usually indicating which button was used\n   *     to close a dialog. If a dialog is canceled by clicking the scrim or\n   *     pressing Escape, it will not change the return value after closing.\n   * @return A Promise that resolves after the animation is finished and the\n   *     `closed` event was fired.\n   */\n  async close(returnValue = this.returnValue) {\n    this.isOpening = false;\n    if (!this.isConnected) {\n      // Disconnected dialogs do not fire close events or animate.\n      this.open = false;\n      return;\n    }\n\n    await this.updateComplete;\n    const dialog = this.dialog!;\n    // Check if already closed or if `dialog.show()` was called while awaiting.\n    if (!dialog.open || this.isOpening) {\n      this.open = false;\n      return;\n    }\n\n    const prevReturnValue = this.returnValue;\n    this.returnValue = returnValue;\n    const preventClose =\n        !this.dispatchEvent(new Event('close', {cancelable: true}));\n    if (preventClose) {\n      this.returnValue = prevReturnValue;\n      return;\n    }\n\n    await this.animateDialog(this.getCloseAnimation());\n    dialog.close(returnValue);\n    this.open = false;\n    this.dispatchEvent(new Event('closed'));\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.isConnectedPromiseResolve();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.isConnectedPromise = this.getIsConnectedPromise();\n  }\n\n  protected override render() {\n    const scrollable =\n        this.open && !(this.isAtScrollTop && this.isAtScrollBottom);\n    const classes = {\n      'has-headline': this.hasHeadline,\n      'has-actions': this.hasActions,\n      'has-icon': this.hasIcon,\n      'scrollable': scrollable,\n      'show-top-divider': scrollable && !this.isAtScrollTop,\n      'show-bottom-divider': scrollable && !this.isAtScrollBottom,\n    };\n\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <div class=\"scrim\"></div>\n      <dialog\n        class=${classMap(classes)}\n        aria-label=${ariaLabel || nothing}\n        aria-labelledby=${this.hasHeadline ? 'headline' : nothing}\n        role=${this.type === 'alert' ? 'alertdialog' : nothing}\n        @cancel=${this.handleCancel}\n        @click=${this.handleDialogClick}\n        .returnValue=${this.returnValue || nothing}\n      >\n        <div class=\"container\"\n          @click=${this.handleContentClick}\n        >\n          <div class=\"headline\">\n            <div class=\"icon\" aria-hidden=\"true\">\n              <slot name=\"icon\" @slotchange=${this.handleIconChange}></slot>\n            </div>\n            <h2 id=\"headline\" aria-hidden=${!this.hasHeadline || nothing}>\n              <slot name=\"headline\"\n                  @slotchange=${this.handleHeadlineChange}></slot>\n            </h2>\n            <md-divider></md-divider>\n          </div>\n          <div class=\"scroller\">\n            <div class=\"content\">\n              <div class=\"top anchor\"></div>\n              <slot name=\"content\"></slot>\n              <div class=\"bottom anchor\"></div>\n            </div>\n          </div>\n          <div class=\"actions\">\n            <md-divider></md-divider>\n            <slot name=\"actions\"\n              @slotchange=${this.handleActionsChange}></slot>\n          </div>\n        </div>\n      </dialog>\n    `;\n  }\n\n  protected override firstUpdated() {\n    this.intersectionObserver = new IntersectionObserver(entries => {\n      for (const entry of entries) {\n        this.handleAnchorIntersection(entry);\n      }\n    }, {root: this.scroller!});\n\n    this.intersectionObserver.observe(this.topAnchor!);\n    this.intersectionObserver.observe(this.bottomAnchor!);\n  }\n\n  private handleDialogClick() {\n    if (this.nextClickIsFromContent) {\n      // Avoid doing a layout calculation below if we know the click came from\n      // content.\n      this.nextClickIsFromContent = false;\n      return;\n    }\n\n    // Click originated on the backdrop. Native `<dialog>`s will not cancel,\n    // but Material dialogs do.\n    const preventDefault =\n        !this.dispatchEvent(new Event('cancel', {cancelable: true}));\n    if (preventDefault) {\n      return;\n    }\n\n    this.close();\n  }\n\n  private handleContentClick() {\n    this.nextClickIsFromContent = true;\n  }\n\n  private handleSubmit(event: SubmitEvent) {\n    const form = event.target as HTMLFormElement;\n    const {submitter} = event;\n    if (form.method !== 'dialog' || !submitter) {\n      return;\n    }\n\n    // Close reason is the submitter's value attribute, or the dialog's\n    // `returnValue` if there is no attribute.\n    this.close(submitter.getAttribute('value') ?? this.returnValue);\n  }\n\n  private handleCancel(event: Event) {\n    if (event.target !== this.dialog) {\n      // Ignore any cancel events dispatched by content.\n      return;\n    }\n\n    const preventDefault = !redispatchEvent(this, event);\n    // We always prevent default on the original dialog event since we'll\n    // animate closing it before it actually closes.\n    event.preventDefault();\n    if (preventDefault) {\n      return;\n    }\n\n    this.close();\n  }\n\n  private async animateDialog(animation: DialogAnimation) {\n    const {dialog, scrim, container, headline, content, actions} = this;\n    if (!dialog || !scrim || !container || !headline || !content || !actions) {\n      return;\n    }\n\n    const {\n      container: containerAnimate,\n      dialog: dialogAnimate,\n      scrim: scrimAnimate,\n      headline: headlineAnimate,\n      content: contentAnimate,\n      actions: actionsAnimate\n    } = animation;\n\n    const elementAndAnimation: Array<[Element, DialogAnimationArgs[]]> = [\n      [dialog, dialogAnimate ?? []], [scrim, scrimAnimate ?? []],\n      [container, containerAnimate ?? []], [headline, headlineAnimate ?? []],\n      [content, contentAnimate ?? []], [actions, actionsAnimate ?? []]\n    ];\n\n    const animations: Animation[] = [];\n    for (const [element, animation] of elementAndAnimation) {\n      for (const animateArgs of animation) {\n        animations.push(element.animate(...animateArgs));\n      }\n    }\n\n    await Promise.all(animations.map(animation => animation.finished));\n  }\n\n  private handleHeadlineChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasHeadline = slot.assignedElements().length > 0;\n  }\n\n  private handleActionsChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasActions = slot.assignedElements().length > 0;\n  }\n\n  private handleIconChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasIcon = slot.assignedElements().length > 0;\n  }\n\n  private handleAnchorIntersection(entry: IntersectionObserverEntry) {\n    const {target, isIntersecting} = entry;\n    if (target === this.topAnchor) {\n      this.isAtScrollTop = isIntersecting;\n    }\n\n    if (target === this.bottomAnchor) {\n      this.isAtScrollBottom = isIntersecting;\n    }\n  }\n\n  private getIsConnectedPromise() {\n    return new Promise<void>(resolve => {\n      this.isConnectedPromiseResolve = resolve;\n    });\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_container-color: var(--md-dialog-container-color, var(--md-sys-color-surface-container-high, #ece6f0));--_container-shape: var(--md-dialog-container-shape, 28px);--_headline-color: var(--md-dialog-headline-color, var(--md-sys-color-on-surface, #1d1b20));--_headline-font: var(--md-dialog-headline-font, var(--md-sys-typescale-headline-small-font, var(--md-ref-typeface-brand, Roboto)));--_headline-line-height: var(--md-dialog-headline-line-height, var(--md-sys-typescale-headline-small-line-height, 2rem));--_headline-size: var(--md-dialog-headline-size, var(--md-sys-typescale-headline-small-size, 1.5rem));--_headline-weight: var(--md-dialog-headline-weight, var(--md-sys-typescale-headline-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_supporting-text-color: var(--md-dialog-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-dialog-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-dialog-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));--_supporting-text-size: var(--md-dialog-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));--_supporting-text-weight: var(--md-dialog-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)));--_icon-color: var(--md-dialog-icon-color, var(--md-sys-color-secondary, #625b71));--_icon-size: var(--md-dialog-icon-size, 24px);--_container-shape-start-start: var( --md-dialog-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-dialog-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-dialog-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-dialog-container-shape-end-start, var(--_container-shape) );border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:contents;margin:auto;max-height:min(560px,100% - 48px);max-width:min(560px,100% - 48px);min-height:140px;min-width:280px;position:fixed;height:fit-content;width:fit-content}dialog{background:rgba(0,0,0,0);border:none;border-radius:inherit;flex-direction:column;height:inherit;margin:inherit;max-height:inherit;max-width:inherit;min-height:inherit;min-width:inherit;outline:none;overflow:visible;padding:0;width:inherit}dialog[open]{display:flex}::backdrop{background:none}.scrim{background:var(--md-sys-color-scrim, #000);display:none;inset:0;opacity:32%;pointer-events:none;position:fixed;z-index:1}:host([open]) .scrim{display:flex}h2{all:unset;align-self:stretch}.headline{align-items:center;color:var(--_headline-color);display:flex;flex-direction:column;font-family:var(--_headline-font);font-size:var(--_headline-size);line-height:var(--_headline-line-height);font-weight:var(--_headline-weight);position:relative}slot[name=headline]::slotted(*){align-items:center;align-self:stretch;box-sizing:border-box;display:flex;gap:8px;padding:24px 24px 0}.icon{display:flex}slot[name=icon]::slotted(*){color:var(--_icon-color);fill:currentColor;font-size:var(--_icon-size);padding-top:24px;height:var(--_icon-size);width:var(--_icon-size)}.has-icon slot[name=headline]::slotted(*){justify-content:center;padding-top:16px}.scrollable slot[name=headline]::slotted(*){padding-bottom:16px}.scrollable.has-headline slot[name=content]::slotted(*){padding-top:8px}.container{border-radius:inherit;display:flex;flex-direction:column;flex-grow:1;overflow:hidden;position:relative;transform-origin:top}.container::before{background:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute}.scroller{display:flex;flex:1;flex-direction:column;overflow:hidden;z-index:1}.scrollable .scroller{overflow-y:scroll}.content{color:var(--_supporting-text-color);font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);height:min-content;position:relative}slot[name=content]::slotted(*){box-sizing:border-box;padding:24px}.anchor{position:absolute}.top.anchor{top:0}.bottom.anchor{bottom:0}.actions{position:relative}slot[name=actions]::slotted(*){box-sizing:border-box;display:flex;gap:8px;justify-content:flex-end;padding:16px 24px 24px}.has-actions slot[name=content]::slotted(*){padding-bottom:8px}md-divider{display:none;position:absolute}.has-headline.show-top-divider .headline md-divider,.has-actions.show-bottom-divider .actions md-divider{display:flex}.headline md-divider{bottom:0}.actions md-divider{top:0}@media(forced-colors: active){dialog{outline:2px solid WindowText}}/*# sourceMappingURL=dialog-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {Dialog} from './internal/dialog.js';\nimport {styles} from './internal/dialog-styles.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-dialog': MdDialog;\n  }\n}\n\n/**\n * @summary Dialogs can require an action, communicate information, or help\n * users accomplish a task. There are two types of dialogs: basic and\n * full-screen.\n *\n * @description\n * A dialog is a modal window that appears in front of app content to provide\n * critical information or ask for a decision. Dialogs disable all app\n * functionality when they appear, and remain on screen until confirmed,\n * dismissed, or a required action has been taken.\n *\n * Dialogs are purposefully interruptive, so they should be used sparingly.\n * A less disruptive alternative is to use a menu, which provides options\n * without interrupting a user’s experience.\n *\n * On mobile devices only, complex dialogs should be displayed fullscreen.\n *\n * __Example usages:__\n * - Common use cases for basic dialogs include alerts, quick selection, and\n * confirmation.\n * - More complex dialogs may contain actions that require a series of tasks\n * to complete. One example is creating a calendar entry with the event title,\n * date, location, and time.\n */\n@customElement('md-dialog')\nexport class MdDialog extends Dialog {\n  static override styles = [styles];\n}\n", "import { LitElement, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { Task } from '@lit/task';\n\nimport type { MdFilledButton } from '@material/web/button/filled-button.js';\nimport type { MdCheckbox } from '@material/web/checkbox/checkbox.js';\nimport type { MdFilledTextField } from '@material/web/textfield/filled-text-field.js';\nimport type { MdFilledSelect } from '@material/web/select/filled-select.js';\nimport type { MdDialog } from '@material/web/dialog/dialog.js';\n\nimport { componentStyles } from './baller-form.css.js';\nimport { ApplicationData, ApplicationDataInit } from './application-data.js';\nimport { EnrollmentService } from './enrollment-service.js';\nimport { SpamService } from './spam-service.js';\nimport { tooltipMessages } from './tooltips.js';\n\nimport '@material/web/button/filled-button.js';\nimport '@material/web/button/filled-tonal-button.js';\nimport '@material/web/button/outlined-button.js';\nimport '@material/web/textfield/filled-text-field.js';\nimport '@material/web/elevation/elevation.js';\nimport '@material/web/checkbox/checkbox.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/select/filled-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/dialog/dialog.js';\n\n/**\n * @tagname baller-form\n *\n * @summary The Baller League Player Registration Form\n *\n * @property {string} brazeEndpoint - The URL we will send the application form to\n * @property {string} captchaSiteKey - The Recaptcha v3 site key\n * @property {string} captchaEndpoint - The URL we will validate our Recaptcha token at\n *\n * @fires {CustomEvent} completed-application - When the form is successfully submitted\n * @fires {CustomEvent} signup-form-displayed - When the form is first shown to the user\n * @fires {CustomEvent} submission_error - When the user attempts to submit the form but an error occurs\n */\n@customElement('baller-form')\nexport class BallerForm extends LitElement {\n  // Public Static Fields\n\n  static styles = [componentStyles];\n\n  // Private Static Methods\n\n  private static _reportFieldValidity(event: FocusEvent) {\n    // @ts-ignore\n    event.target.reportValidity();\n  }\n\n  // Public Class Fields\n\n  @property({ type: String, attribute: 'site-key' }) captchaSiteKey =\n    'RECAPTCHA-SITE-KEY';\n\n  @property({ type: String, attribute: 'captcha-endpoint' }) captchaEndpoint =\n    '/ballerleague/v1/spam_check';\n\n  @property({ type: String, attribute: 'braze-endpoint' }) brazeEndpoint =\n    '/ballerleague/v1/submit_application';\n\n  @query('md-filled-button[name=\"apply\"]')\n  submitButton!: MdFilledButton;\n\n  @query('form#application-form')\n  applicationFormElement!: HTMLFormElement;\n\n  @query('md-filled-text-field[autocomplete=\"given-name\"]')\n  firstName!: MdFilledTextField;\n\n  @query('md-filled-text-field[autocomplete=\"family-name\"]')\n  familyName!: MdFilledTextField;\n\n  @query('md-filled-text-field[autocomplete=\"email\"]')\n  email!: MdFilledTextField;\n\n  @query('md-filled-text-field[autocomplete=\"tel\"]')\n  tel!: MdFilledTextField;\n\n  @query('md-filled-text-field[autocomplete=\"bday\"]')\n  birthday!: MdFilledTextField;\n\n  @query('md-filled-select[name=\"shirt-size\"]')\n  shirt!: MdFilledSelect\n\n  @query('md-filled-select[name=\"experience\"]')\n  experience!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"bundesland\"]')\n  bundesland!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"current-country\"]')\n  currentCountry!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"position\"]')\n  position!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"active-experience\"]')\n  activeExperience!: MdFilledSelect;\n\n  @query('md-filled-text-field[name=\"international-current-team-country\"]')\n  currentInternationalTeamCountry!: MdFilledSelect;\n\n  @query('md-filled-text-field[name=\"current-international-league\"]')\n  currentInternationalLeague!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"team-type\"]')\n  teamType!: MdFilledSelect;\n\n  @query('md-filled-select[name=\"spielklasse\"]')\n  spielklasse!: MdFilledSelect;\n\n  @query('md-filled-text-field[name=\"other-experience\"]')\n  otherExperience!: MdFilledTextField;\n\n  @query('md-filled-select[name=\"highest-domestic-experience\"]')\n  highestSpielklasse!: MdFilledSelect;\n  \n  @query('md-filled-select[name=\"highest-experience\"]')\n  highestExperience!: MdFilledSelect;\n\n  @query('md-filled-text-field[name=\"historical-experience-country\"]')\n  highestExperienceCountry!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"historical-experience-league\"]')\n  highestExperienceLeague!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"club\"]')\n  clubName!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"highlight-tape\"]')\n  highlightTape!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"transfermarkt\"]')\n  transfermarkt!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"youtube\"]')\n  youtube!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"instagram\"]')\n  instagram!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"tiktok\"]')\n  tiktok!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"xing\"]')\n  xing!: MdFilledTextField;\n\n  @query('md-filled-text-field[name=\"freeform\"]')\n  freeform!: MdFilledTextField;\n\n  @query('[data-element=\"tos\"]')\n  termsOfServiceBox!: MdCheckbox;\n\n  @query('[data-element=\"teilnahmebedingungen\"]')\n  teilnahmebedingungenBox!: MdCheckbox;\n\n  @query('md-dialog[data-reason=\"success\"]')\n  successDialog!: MdDialog;\n\n  @query('md-dialog[data-reason=\"error\"]')\n  errorDialog!: MdDialog;\n\n  // Private Class Fields\n\n  @state()\n  leageOptions = this._renderMensLeagueDropdown();\n\n  private _enrollmentService?: EnrollmentService;\n\n  private _spamService?: SpamService;\n\n  private _submissionTask = new Task(this, {\n    task: async() => {\n      if (this._enrollmentService && this._spamService) {\n        const isValidUser = await this._spamService.isValidUser();\n\n        if (isValidUser) {\n          const userApplication = this._normalizeData();\n          const applicationSubmissionResult = await this._enrollmentService.process(userApplication);\n          return applicationSubmissionResult;\n        }\n\n        throw new Error(\"Failed reCAPTCHA check\");\n      }\n        \n      throw new Error(\"ApplicationData, SpamService or EnrollmentService fields not set\");\n    }\n  });\n\n  // Method Overrides\n\n  protected override firstUpdated() {\n    this._initializeServices();\n    this.dispatchEvent(\n      new CustomEvent('signup-form-displayed', { bubbles: true })\n    );\n  }\n\n  protected override render() {\n    return html`\n      ${this._renderForm()}\n\n      ${this._submissionTask.render({\n        initial: () => this._renderInitialState(),\n        pending: () => this._renderPendingState(),\n        complete: (value) => this._renderSuccessState(value),\n        error: (error) => this._renderErrorState(error),\n      })}\n    `;\n  }\n\n  // Private Methods\n\n  private _initializeServices(){\n    this._enrollmentService = new EnrollmentService(this.brazeEndpoint);\n    this._spamService = new SpamService(\n      this.captchaSiteKey,\n      this.captchaEndpoint\n    );\n\n    // Add the reCAPTCHA script to the page if the feature is enabled\n    if (this._spamService.featureEnabled) {\n      this.applicationFormElement.insertAdjacentElement(\n        'afterbegin',\n        this._spamService.generateScriptElement()\n      );\n    }\n  }\n\n  // Take all the fields in the form and put them into a class to normalize the data\n  private _normalizeData(): ApplicationData {\n    const userData: ApplicationDataInit = {\n      familyName: this.familyName.value,\n      givenName: this.firstName.value,\n      email: this.email.value,\n      telephone: this.tel.value,\n      birthDate: this.birthday.valueAsDate!,\n      shirtSize: this.shirt.value,\n      bundesland: this.bundesland.value,\n      customCurrentCountry: this.currentCountry.value,\n      position: this.position.value,\n      currentPlayingStatus: this.activeExperience.value,\n      currentFootballCountry: this.currentInternationalTeamCountry.value,\n      teamType: this.teamType.value,\n      germanLeague: this.spielklasse.value,\n      internationalLeague: this.currentInternationalLeague.value,\n      otherExperience: this.otherExperience.value,\n      highestDomesticLeague: this.highestSpielklasse.value,\n      highestExperience: this.highestExperience.value,\n      highestInternationalCountry: this.highestExperienceCountry.value,\n      highestInternationalLeague: this.highestExperienceLeague.value,\n      clubName: this.clubName.value,\n      highlightTape: this.highlightTape.value,\n      transfermarktProfile: this.transfermarkt.value,\n      youTube: this.youtube.value,\n      instagram: this.instagram.value,\n      tiktok: this.tiktok.value,\n      xing: this.xing.value,\n      comments: this.freeform.value,\n      acceptedPrivacy: this.termsOfServiceBox.checked,\n      acceptedTos: this.teilnahmebedingungenBox.checked\n    };\n\n    const applicationData = new ApplicationData(userData);\n\n    return applicationData;\n  }\n\n  private _validateAge(){\n    let isOldEnough = false;\n\n    // Calculate the difference between the date input field and today's date.\n    const today = new Date();\n    const dateInputFieldDate = new Date(this.birthday.value);\n    const differenceInDays = (today.getTime() - dateInputFieldDate.getTime()) / (1000 * 60 * 60 * 24);\n\n    // Check if the number of days since the date input field value is greater than or equal to 18 years.\n    if (differenceInDays >= 18 * 365.25) {\n      isOldEnough = true;\n      \n      this.birthday.setCustomValidity('');\n      this.birthday.error = false;\n      this.birthday.errorText = '';\n\n      this.birthday.reportValidity();\n    }\n\n    if (!isOldEnough) {\n      this.birthday.error = true;\n      this.birthday.errorText = 'Du musst mindestens 18 Jahre alt sein.'\n      this.birthday.setCustomValidity('Sie müssen mindestens 18 Jahre alt sein.');\n      this.birthday.dispatchEvent(new Event('invalid'));\n      \n      this.birthday.reportValidity();      \n    }\n  }\n\n  private _shouldEnableSubmit(): boolean {\n    const hasAcceptedDatenschutz = this.termsOfServiceBox.checked;\n    const hasAcceptedTeilnahmebedingungen = this.teilnahmebedingungenBox.checked;\n\n    return hasAcceptedDatenschutz && hasAcceptedTeilnahmebedingungen;\n  }\n\n  \n\n  // Event Handlers\n\n  private _onSuccessDialogClose(){\n    this.successDialog.close();\n    this.applicationFormElement.reset();\n  }\n\n  private _onErrorDialogClose(){\n    this.errorDialog.close();\n  }\n\n  private _onSubmitEvent(e: SubmitEvent){\n    e.preventDefault();\n\n    // First check that the form data is valid before proceeding\n    if (this.applicationFormElement.checkValidity()) {\n      this._submissionTask.run();\n    } else {\n      // Some field in the form isn't valid so find it and scroll to it\n      const formFields = this.applicationFormElement.querySelectorAll('md-filled-text-field, md-filled-select');\n      \n      for (const field of Array.from(formFields)) {\n        // @ts-ignore\n        if (!field.checkValidity()) {\n          // @ts-ignore\n          field.focus({preventScroll: false});\n\n          this.dispatchEvent(new CustomEvent('invalid-field', {\n            detail: field.localName,\n            bubbles: true\n          }));\n\n          break;\n        }\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _handleFederalStateSelection(e: Event){\n    // @ts-ignore\n    if (e.target.value === 'Ausland') {\n      this.currentCountry.hidden = false;\n      this.currentCountry.classList.remove('hidden');\n    } else {\n      this.currentCountry.hidden = true;\n      this.currentCountry.classList.add('hidden');\n    }\n  }\n\n  private _handleExperienceSelection(e: Event){\n    // @ts-ignore\n    if (e.target.value === 'andere') {\n      this.otherExperience.hidden = false;\n      this.otherExperience.classList.remove('hidden');\n    } else {\n      this.otherExperience.hidden = true;\n      this.otherExperience.classList.add('hidden');\n    }\n  }\n\n  private _handleActiveExperienceSelection(e: Event){\n    // @ts-ignore\n    const activeExperience = e.target.value;\n\n    switch (activeExperience) {\n      case 'deutschland':\n        // Unhide the German active experience section\n        this.shadowRoot?.getElementById('domestic-active-experience')?.classList.remove('hidden');\n        this.shadowRoot?.getElementById('international-active-experience')?.classList.add('hidden');\n        this.clubName.classList.remove('hidden');\n        break;\n      case 'international':\n        // Unhide the international active experience section\n        this.shadowRoot?.getElementById('international-active-experience')?.classList.remove('hidden');\n        this.shadowRoot?.getElementById('domestic-active-experience')?.classList.add('hidden');\n        this.clubName.classList.remove('hidden');\n        break;\n      default:\n        this.shadowRoot?.getElementById('international-active-experience')?.classList.add('hidden');\n        this.shadowRoot?.getElementById('domestic-active-experience')?.classList.add('hidden');\n        this.clubName.classList.add('hidden');\n        break;\n    }\n  }\n\n  private _handleHighestExperienceSelection(e: Event){\n    // @ts-ignore\n    const highestExperience = e.target.value;\n\n    switch (highestExperience) {\n      case 'deutschland':\n        // Unhide the German active experience section\n        this.shadowRoot?.getElementById('domestic-historical-experience')?.classList.remove('hidden');\n        this.shadowRoot?.getElementById('international-historical-experience')?.classList.add('hidden');\n        break;\n      case 'international':\n        // Unhide the international active experience section\n        this.shadowRoot?.getElementById('international-historical-experience')?.classList.remove('hidden');\n        this.shadowRoot?.getElementById('domestic-historical-experience')?.classList.add('hidden');\n        break;\n      default:\n        this.shadowRoot?.getElementById('international-historical-experience')?.classList.add('hidden');\n        this.shadowRoot?.getElementById('domestic-historical-experience')?.classList.add('hidden');\n        break;\n    }\n  }\n\n  private _handleLegalChange() {\n    if (this._shouldEnableSubmit()) {\n      this.submitButton.disabled = false;\n    } else {\n      this.submitButton.disabled = true;\n    }\n  }\n\n\n  private async _handleTeamTypeSelection(e: Event){\n    // @ts-ignore\n    const selectedTeamType = e.target.value;\n\n    switch (selectedTeamType) {\n      case 'herren':\n        this.leageOptions = this._renderMensLeagueDropdown();\n        break;\n      case 'a-junioren':\n        this.leageOptions = this._renderBoysLeagueDropdown();\n        break;\n      case 'frauen':\n        this.leageOptions = this._renderWomensLeagueDropdown();\n        break;\n      case 'a-juniorinnen':\n        this.leageOptions = this._renderGirlsLeagueDropdown();\n        break;\n      default:\n        break;\n    }\n\n    this.spielklasse.reset();\n    this.spielklasse.disabled = false;\n\n    this.requestUpdate();\n    await this.updateComplete;\n  }\n\n  // Templates\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderInitialState(){\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderPendingState(){\n\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, class-methods-use-this\n  private _renderSuccessState(data: void){\n    // this.successDialog.open = true;\n    const successPage = new URL('/bewerbung-erfolgreich/', window.location.origin);\n    window.location.href = successPage.href;\n  }\n\n  private _renderErrorState(error: unknown){\n    this.dispatchEvent(new CustomEvent('submission_error', {detail: error}));\n    console.error(error);\n    this.errorDialog.open = true;\n  }\n\n  private _renderForm(){\n    return html`\n    <section id=\"form-wrapper\">\n      <form id=\"application-form\">\n        <div>\n          ${this._renderPersonalQuestions()}\n          ${this._renderFootballQuestions()}\n          ${this._renderSocialQuestions()}\n        </div>\n        <div class=\"form-footer\">\n          <md-filled-button\n            @click=${this._onSubmitEvent}\n            type=\"button\"\n            name=\"apply\"\n            disabled\n            style=\"width: 100%\"\n          >\n          Jetz bewerben\n          </md-filled-button>\n        </div>\n      </form>\n    </section>\n\n    ${this._renderSuccessDialog()}\n    ${this._renderErrorDialog()}\n    `;\n  }\n\n  private _renderSuccessDialog(){\n    return html`\n      <md-dialog type=\"alert\" data-reason=\"success\">\n        <div slot=\"headline\" class=\"display-small\">Glückwunsch</div>\n        <form slot=\"content\" id=\"form-id\" method=\"dialog\">\n          Wir haben Ihre Bewerbung erhalten.\n        </form>\n        <div slot=\"actions\">\n          <md-filled-button form=\"form-id\" value=\"close\" @click=${this._onSuccessDialogClose}>\n            Schließen\n          </md-filled-button>\n        </div>\n      </md-dialog>\n    `;\n  }\n\n  private _renderErrorDialog(){\n    return html`\n      <md-dialog type=\"alert\" data-reason=\"error\">\n        <div slot=\"headline\" class=\"display-small\">ein Fehler ist aufgetreten</div>\n        <form slot=\"content\" id=\"form-id\" method=\"dialog\">\n          Bitte versuchen Sie es morgen noch einmal\n        </form>\n        <div slot=\"actions\">\n          <md-filled-button form=\"form-id\" value=\"close\" @click=${this._onErrorDialogClose}>\n            Schließen\n          </md-filled-button>\n        </div>\n      </md-dialog>\n    `;\n  }\n\n  private _renderPersonalQuestions() {\n    return html`\n      <div>\n        <div class=\"form-header\">\n          <h2 class=\"display-small\">Über Dich:</h2>\n        </div>\n        <div class=\"form-fields\">\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"Vorname\"\n              required\n              autocomplete=\"given-name\"\n              max=\"250\"\n              style=\"width: 100%\"\n              @blur=${BallerForm._reportFieldValidity}\n            ></md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"Nachname\"\n              required\n              max=\"250\"\n              autocomplete=\"family-name\"\n              style=\"width: 100%\"\n              @blur=${BallerForm._reportFieldValidity}\n            ></md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"Geburtsdatum\"\n              required\n              autocomplete=\"bday\"\n              type=\"date\"\n              style=\"width: 100%\"\n              @blur=${this._validateAge}\n            ></md-filled-text-field>\n            ${this._renderTooltip(tooltipMessages.birthday)}\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"E-Mail\"\n              required\n              autocomplete=\"email\"\n              type=\"email\"\n              max=\"250\"\n              style=\"width: 100%\"\n              @blur=${BallerForm._reportFieldValidity}\n            ></md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"Telefon\"\n              autocomplete=\"tel\"\n              type=\"tel\"\n              max=\"20\"\n              @blur=${BallerForm._reportFieldValidity}\n              style=\"width: 100%\"\n            ></md-filled-text-field>\n          ${this._renderTooltip(tooltipMessages.phone)}\n          </div>\n          \n          <div class=\"field-with-tooltip\">\n            <md-filled-select\n              label=\"Kleidergröße\"\n              name=\"shirt-size\"\n              required\n              style=\"width: 100%;\"\n            >\n            <md-select-option value=\"XS\">\n              <div slot=\"headline\">XS</div>\n            </md-select-option>\n            <md-select-option value=\"S\">\n              <div slot=\"headline\">S</div>\n              </md-select-option>\n              <md-select-option value=\"M\">\n              <div slot=\"headline\">M</div>\n              </md-select-option>\n              <md-select-option value=\"L\">\n                <div slot=\"headline\">L</div>\n              </md-select-option>\n              <md-select-option value=\"XL\">\n                <div slot=\"headline\">XL</div>\n              </md-select-option>\n            </md-filled-select>\n            ${this._renderTooltip(tooltipMessages.clothes)}\n          </div>\n\n          <div class=\"field-with-tooltip\">\n          <md-filled-select\n            label=\"Dein Bundesland\"\n            name=\"bundesland\"\n            required\n            @change=${this._handleFederalStateSelection}\n            style=\"width: 100%\"\n          >\n          <md-select-option value=\"Baden-Württemberg\">\n            <div slot=\"headline\">Baden-Württemberg</div>\n           </md-select-option>\n           <md-select-option value=\"Bayern\">\n             <div slot=\"headline\">Bayern</div>\n            </md-select-option>\n            <md-select-option value=\"Berlin\">\n             <div slot=\"headline\">Berlin</div>\n            </md-select-option>\n            <md-select-option value=\"Brandenburg\">\n              <div slot=\"headline\">Brandenburg</div>\n            </md-select-option>\n            <md-select-option value=\"Bremen\">\n              <div slot=\"headline\">Bremen</div>\n            </md-select-option>\n            <md-select-option value=\"Hamburg\">\n              <div slot=\"headline\">Hamburg</div>\n            </md-select-option>\n            <md-select-option value=\"Hessen\">\n              <div slot=\"headline\">Hessen</div>\n            </md-select-option>\n            <md-select-option value=\"Mecklenburg-Vorpommern\">\n              <div slot=\"headline\">Mecklenburg-Vorpommern</div>\n            </md-select-option>\n            <md-select-option value=\"Niedersachsen\">\n              <div slot=\"headline\">Niedersachsen</div>\n            </md-select-option>\n            <md-select-option value=\"Nordrhein-Westfalen\">\n              <div slot=\"headline\">Nordrhein-Westfalen</div>\n            </md-select-option>\n            <md-select-option value=\"Rheinland-Pfalz\">\n              <div slot=\"headline\">Rheinland-Pfalz</div>\n            </md-select-option>\n            <md-select-option value=\"Saarland\">\n              <div slot=\"headline\">Saarland</div>\n            </md-select-option>\n            <md-select-option value=\"Sachsen\">\n              <div slot=\"headline\">Sachsen</div>\n            </md-select-option>\n            <md-select-option value=\"Sachsen-Anhalt\">\n              <div slot=\"headline\">Sachsen-Anhalt</div>\n            </md-select-option>\n            <md-select-option value=\"Schleswig-Holstein\">\n              <div slot=\"headline\">Schleswig-Holstein</div>\n            </md-select-option>\n            <md-select-option value=\"Thüringen\">\n              <div slot=\"headline\">Thüringen</div>\n            </md-select-option>\n            <md-select-option value=\"Ausland\">\n              <div slot=\"headline\">Ich wohne im Ausland</div>\n            </md-select-option>\n          </md-filled-select>\n          <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-select\n              label=\"Land\"\n              name=\"current-country\"\n              class=\"hidden\"\n              style=\"width: 100%\"\n            >\n\n            <md-select-option value=\"Belgien\">\n              <div slot=\"headline\">Belgien</div>\n            </md-select-option>\n            <md-select-option value=\"Bulgarien\">\n              <div slot=\"headline\">Bulgarien</div>\n              </md-select-option>\n              <md-select-option value=\"Dänemark\">\n              <div slot=\"headline\">Dänemark</div>\n              </md-select-option>\n              <md-select-option value=\"Estland\">\n                <div slot=\"headline\">Estland</div>\n              </md-select-option>\n              <md-select-option value=\"Finnland\">\n                <div slot=\"headline\">Finnland</div>\n              </md-select-option>\n              <md-select-option value=\"Frankreich\">\n                <div slot=\"headline\">Frankreich</div>\n              </md-select-option>\n              <md-select-option value=\"Griechenland\">\n                <div slot=\"headline\">Griechenland</div>\n              </md-select-option>\n              <md-select-option value=\"Irland\">\n                <div slot=\"headline\">Irland</div>\n              </md-select-option>\n              <md-select-option value=\"Italien\">\n                <div slot=\"headline\">Italien</div>\n              </md-select-option>\n              <md-select-option value=\"Kroatien\">\n                <div slot=\"headline\">Kroatien</div>\n              </md-select-option>\n              <md-select-option value=\"Lettland\">\n                <div slot=\"headline\">Lettland</div>\n              </md-select-option>\n              <md-select-option value=\"Litauen\">\n                <div slot=\"headline\">Litauen</div>\n              </md-select-option>\n              <md-select-option value=\"Luxemburg\">\n                <div slot=\"headline\">Luxemburg</div>\n              </md-select-option>\n              <md-select-option value=\"Malta\">\n                <div slot=\"headline\">Malta</div>\n              </md-select-option>\n              <md-select-option value=\"Niederlande\">\n                <div slot=\"headline\">Niederlande</div>\n              </md-select-option>\n              <md-select-option value=\"Polen\">\n                <div slot=\"headline\">Polen</div>\n              </md-select-option>\n              <md-select-option value=\"Portugal\">\n                <div slot=\"headline\">Portugal</div>\n              </md-select-option>\n              <md-select-option value=\"Rumänien\">\n                <div slot=\"headline\">Rumänien</div>\n              </md-select-option>\n              <md-select-option value=\"Schweden\">\n                <div slot=\"headline\">Schweden</div>\n              </md-select-option>\n              <md-select-option value=\"Slowakei\">\n                <div slot=\"headline\">Slowakei</div>\n              </md-select-option>\n              <md-select-option value=\"Slowenien\">\n                <div slot=\"headline\">Slowenien</div>\n              </md-select-option>\n              <md-select-option value=\"Spanien\">\n                <div slot=\"headline\">Spanien</div>\n              </md-select-option>\n              <md-select-option value=\"Tschechische Republik\">\n                <div slot=\"headline\">Tschechische Republik</div>\n              </md-select-option>\n              <md-select-option value=\"Ungarn\">\n                <div slot=\"headline\">Ungarn</div>\n              </md-select-option>\n              <md-select-option value=\"Zypern\">\n                <div slot=\"headline\">Zypern</div>\n              </md-select-option>\n              <md-select-option value=\"Österreich\">\n                <div slot=\"headline\">Österreich</div>\n              </md-select-option>\n            </md-filled-select>\n            <div class=\"invisible-icon\"></div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private _renderTeamTypeDropdown(){\n    return html`\n      <div class=\"field-with-tooltip\">\n        <md-filled-select\n          label=\"Teamtyp\"\n          name=\"team-type\"\n          @change=${this._handleTeamTypeSelection}\n          style=\"width: 100%\"\n        >\n          <md-select-option value=\"herren\">\n            <div slot=\"headline\">Herren</div>\n          </md-select-option>\n          <md-select-option value=\"a-junioren\">\n            <div slot=\"headline\">A-Junioren</div>\n          </md-select-option>\n          <md-select-option value=\"frauen\">\n            <div slot=\"headline\">Frauen</div>\n          </md-select-option>\n          <md-select-option value=\"a-juniorinnen\">\n            <div slot=\"headline\">A-Juniorinnen</div>\n          </md-select-option>\n        </md-filled-select>\n      <div class=\"invisible-icon\"></div>\n      </div>\n    `;\n  }\n\n  private _renderFootballQuestions() {\n    return html`\n    <div>\n      <div class=\"form-header\">\n        <h2 class=\"display-small\">Deine Fußballerfahrung</h2>\n      </div>\n      <div class=\"form-fields\">\n      <div class=\"field-with-tooltip\">\n        <md-filled-select\n          label=\"Deine Position\"\n          name=\"position\"\n          required\n          style=\"width: 100%\"\n        >\n          <md-select-option value=\"stürmer\">\n            <div slot=\"headline\">Stürmer</div>\n          </md-select-option>\n          <md-select-option value=\"mittelfeldspieler\">\n            <div slot=\"headline\">Mittelfeldspieler</div>\n          </md-select-option>\n          <md-select-option value=\"verteidiger\">\n            <div slot=\"headline\">Verteidiger</div>\n          </md-select-option>\n          <md-select-option value=\"torwart\">\n            <div slot=\"headline\">Torwart</div>\n          </md-select-option>\n        </md-filled-select>\n        <div class=\"invisible-icon\"></div>\n      </div>\n        ${this._renderActiveExperience()}\n        <div id=\"international-active-experience\" class=\"hidden form-fields\">\n          ${this._renderInternationalActiveExperience()}\n        </div>\n        <div id=\"domestic-active-experience\" class=\"hidden form-fields\">\n          ${this._renderTeamTypeDropdown()}\n          ${this._renderSpielklasse()}\n        </div>\n\n        <md-filled-text-field\n          label=\"Welche sonstige Spielklasse?\"\n          name=\"other-experience\"\n          hidden\n          max=\"250\"\n          class=\"hidden\"\n        ></md-filled-text-field>\n        \n          <md-filled-text-field\n            label=\"In welchem Verein spielst Du\"\n            name=\"club\"\n            max=\"250\"\n            style=\"width: 100%\"\n            @blur=${BallerForm._reportFieldValidity}\n            class=\"hidden\"\n          ></md-filled-text-field>\n\n        ${this._renderHistoricalExperience()}\n        <div id=\"domestic-historical-experience\" class=\"hidden form-fields\">\n          ${this._renderDomesticHistoricalExperience()}\n        </div>\n\n        <div id=\"international-historical-experience\" class=\"hidden form-fields\">\n          ${this._renderInternationalHistoricalExperience()}\n        </div>\n        \n      </div>\n    </div>\n  `;\n  }\n\n  private _renderSocialQuestions() {\n    return html`\n      <div>\n        <div class=\"form-header\">\n          <h2 class=\"display-small\">Zeig uns, was Du kannst</h2>\n          <h3 class=\"headline-small\">Um so mehr wir von Dir wissen, um so höher sind Deine Chancen.</h3>\n        </div>\n        <div class=\"form-fields\">\n        <div class=\"field-with-tooltip\">\n          <md-filled-text-field\n            label=\"Highlight Tape (URL)\"\n            type=\"url\"\n            name=\"highlight-tape\"\n            max=\"250\"\n            style=\"width: 100%\"\n            @blur=${BallerForm._reportFieldValidity}\n          ></md-filled-text-field>\n          \n          ${this._renderTooltip(tooltipMessages.highlight)}\n        </div>\n          <div class=\"field-with-tooltip\">\n          <md-filled-text-field\n            label=\"Link Transfermarkt\"\n            type=\"url\"\n            name=\"transfermarkt\"\n            max=\"250\"\n            style=\"width: 100%\"\n            @blur=${BallerForm._reportFieldValidity}\n          ></md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"YouTube\"\n              autocomplete=\"username\"\n              max=\"250\"\n              name=\"youtube\"\n              style=\"width: 100%\"\n            >\n            </md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"Instagram\"\n              autocomplete=\"username\"\n              max=\"250\"\n              name=\"instagram\"\n              style=\"width: 100%\"\n            >\n            </md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"TikTok\"\n              autocomplete=\"username\"\n              max=\"250\"\n              name=\"tiktok\"\n              style=\"width: 100%\"\n            >\n            </md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field\n              label=\"XING\"\n              autocomplete=\"username\"\n              max=\"250\"\n              name=\"xing\" \n              style=\"width: 100%\"\n            >\n            </md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n\n          <div class=\"field-with-tooltip\">\n            <md-filled-text-field type=\"textarea\" rows=\"10\" name=\"freeform\" label=\"Achievements oder Anmerkungen\" maxLength=250 style=\"width: 100%\">\n            </md-filled-text-field>\n            <div class=\"invisible-icon\"></div>\n          </div>\n          <label class=\"label-medium inline-label\">\n            <md-checkbox\n              touch-target=\"wrapper\"\n              @change=${this._handleLegalChange}\n              data-element=\"tos\"\n              style=\"min-width: 1.2rem\"\n            ></md-checkbox>\n            <span>Ich stimme den <a href=\"/datenschutz/\" style=\"color: #0698A0; text-decoration: none;\">Datenschutzbestimmungen</a> von XING zu.</span>\n          </label>\n\n          <label class=\"label-medium inline-label\">\n            <md-checkbox\n              touch-target=\"wrapper\"\n              @change=${this._handleLegalChange}\n              data-element=\"teilnahmebedingungen\"\n              style=\"min-width: 1.2rem\"\n            ></md-checkbox>\n            <span>Ich stimme den <a href=\"/datenschutz/\" style=\"color: #0698A0; text-decoration: none;\">Datenschutzbestimmungen</a> der Baller League zu.</span>\n          </label>\n        </div>\n      </div>\n    `;\n  \n\n}\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderMensLeagueDropdown(){\n    return html`\n      <md-select-option value=\"1-bundesliga\">\n        <div slot=\"headline\">1. Bundesliga</div>\n      </md-select-option>\n      <md-select-option value=\"2-bundesliga\">\n        <div slot=\"headline\">2. Bundesliga</div>\n      </md-select-option>\n      <md-select-option value=\"3-liga\">\n        <div slot=\"headline\">3. Liga</div>\n      </md-select-option>\n      <md-select-option value=\"regionalliga\">\n        <div slot=\"headline\">Regionalliga</div>\n      </md-select-option>\n      <md-select-option value=\"oberliga\">\n        <div slot=\"headline\">Oberliga</div>\n      </md-select-option>\n      <md-select-option value=\"verbands-landesliga\">\n        <div slot=\"headline\">Verbands/Landesliga</div>\n      </md-select-option>\n      <md-select-option value=\"bezirks-kreisklasse\">\n        <div slot=\"headline\">Bezirks/Kreisklasse</div>\n      </md-select-option>\n      <md-select-option value=\"andere\">\n        <div slot=\"headline\">Andere</div>\n      </md-select-option>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderBoysLeagueDropdown(){\n    return html`\n      <md-select-option value=\"bundesliga\">\n        <div slot=\"headline\">Bundesliga</div>\n      </md-select-option>\n      <md-select-option value=\"regionalliga-oberliga\">\n        <div slot=\"headline\">Regionalliga/Oberliga</div>\n      </md-select-option>\n      <md-select-option value=\"verbands-landesliga\">\n        <div slot=\"headline\">Verbands/Landesliga</div>\n      </md-select-option>\n      <md-select-option value=\"andere\">\n        <div slot=\"headline\">Andere</div>\n      </md-select-option>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderWomensLeagueDropdown(){\n    return html`\n      <md-select-option value=\"1-bundesliga\">\n        <div slot=\"headline\">1. Bundesliga</div>\n      </md-select-option>\n      <md-select-option value=\"2-bundesliga\">\n        <div slot=\"headline\">2. Bundesliga</div>\n      </md-select-option>\n      <md-select-option value=\"regionalliga\">\n        <div slot=\"headline\">Regionalliga</div>\n      </md-select-option>\n      <md-select-option value=\"verbands-landesliga\">\n        <div slot=\"headline\">Verbands/Landesliga</div>\n      </md-select-option>\n      <md-select-option value=\"andere\">\n        <div slot=\"headline\">Andere</div>\n      </md-select-option>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderGirlsLeagueDropdown(){\n    return html`\n      <md-select-option value=\"regionalliga-oberliga\">\n        <div slot=\"headline\">Regionalliga/Oberliga</div>\n      </md-select-option>\n      <md-select-option value=\"verbands-landesliga\">\n        <div slot=\"headline\">Verbands/Landesliga</div>\n      </md-select-option>\n      <md-select-option value=\"andere\">\n        <div slot=\"headline\">Andere</div>\n      </md-select-option>\n    `;\n  }\n\n  private _renderSpielklasse() {\n\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-select\n        label=\"Spielklasse\"\n        name=\"spielklasse\"\n        required\n        @change=${this._handleExperienceSelection}\n        style=\"width: 100%;\"\n      >\n      ${this.leageOptions}\n      </md-filled-select>\n      <div class=\"invisible-icon\"></div>\n    </div>\n    `;\n  }\n\n  private _renderActiveExperience(){\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-select\n        label=\"Wie bist Du gerade aktiv\"\n        name=\"active-experience\"\n        required\n        @change=${this._handleActiveExperienceSelection}\n        style=\"width: 100%;\"\n      >\n        <md-select-option value=\"deutschland\">\n          <div slot=\"headline\">Ich spiele in Deutschland</div>\n        </md-select-option>\n        <md-select-option value=\"vereinslos\">\n          <div slot=\"headline\">Bin aktuell vereinslos</div>\n        </md-select-option>\n        <md-select-option value=\"international\">\n          <div slot=\"headline\">Ich spiele im Ausland</div>\n        </md-select-option>\n      </md-filled-select>\n      <div class=\"invisible-icon\"></div>\n    </div>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderInternationalActiveExperience(){\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-text-field\n        label=\"Land\"\n        maxLength=\"100\"\n        @blur=${BallerForm._reportFieldValidity}\n        name=\"international-current-team-country\"\n        style=\"width: 100%;\"\n      ></md-filled-text-field>\n      <div class=\"invisible-icon\"></div>\n    </div>\n\n    <div class=\"field-with-tooltip\">\n      <md-filled-text-field\n        label=\"Liga\"\n        maxLength=\"100\"\n        @blur=${BallerForm._reportFieldValidity}\n        name=\"current-international-league\"\n        style=\"width: 100%;\"\n      ></md-filled-text-field>\n      <div class=\"invisible-icon\"></div>\n    </div>\n    `;\n  }\n\n  private _renderHistoricalExperience(){\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-select\n        label=\"Deine höchstgespielte Spielklasse\"\n        name=\"highest-experience\"\n        required\n        @change=${this._handleHighestExperienceSelection}\n        style=\"width: 100%\"\n      >\n        <md-select-option value=\"dasselbe\">\n          <div slot=\"headline\">die, in der ich jetzt gerade spiele</div>\n        </md-select-option>\n        <md-select-option value=\"deutschland\">\n          <div slot=\"headline\">In Deutschland</div>\n        </md-select-option>\n        <md-select-option value=\"international\">\n          <div slot=\"headline\">Im Ausland</div>\n        </md-select-option>\n      </md-filled-select>\n      ${this._renderTooltip(tooltipMessages.experience)}\n    </div>\n    `;\n  }\n\n   // eslint-disable-next-line class-methods-use-this\n   private _renderInternationalHistoricalExperience(){\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-text-field\n        label=\"Land\"\n        maxLength=\"100\"\n        @blur=${BallerForm._reportFieldValidity}\n        name=\"historical-experience-country\"\n        style=\"width: 100%\"\n      ></md-filled-text-field>\n      <div class=\"invisible-icon\"></div>\n    </div>\n\n    <div class=\"field-with-tooltip\">\n      <md-filled-text-field\n        label=\"Liga\"\n        maxLength=\"100\"\n        @blur=${BallerForm._reportFieldValidity}\n        name=\"historical-experience-league\"\n        style=\"width: 100%\"\n      ></md-filled-text-field>\n      <div class=\"invisible-icon\"></div>\n    </div>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderDomesticHistoricalExperience(){\n    return html`\n    <div class=\"field-with-tooltip\">\n      <md-filled-select\n        label=\"Deine höchstgespielte Spielklasse\"\n        name=\"highest-domestic-experience\"\n        style=\"width: 100%\"\n      >\n        ${this.leageOptions}\n      </md-filled-select>\n      <div class=\"invisible-icon\"></div>\n    </div>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _renderTooltip(message: string){\n    return html`\n      <span class=\"tooltip-toggle\" aria-label=\"${message}\" tabindex=\"0\">\n        <svg viewBox=\"0 0 27 27\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"currentColor\" fill-rule=\"evenodd\">\n            <path d=\"M13.5 27C20.956 27 27 20.956 27 13.5S20.956 0 13.5 0 0 6.044 0 13.5 6.044 27 13.5 27zm0-2C7.15 25 2 19.85 2 13.5S7.15 2 13.5 2 25 7.15 25 13.5 19.85 25 13.5 25z\"/>\n            <path d=\"M12.05 7.64c0-.228.04-.423.12-.585.077-.163.185-.295.32-.397.138-.102.298-.177.48-.227.184-.048.383-.073.598-.073.203 0 .398.025.584.074.186.05.35.126.488.228.14.102.252.234.336.397.084.162.127.357.127.584 0 .22-.043.412-.127.574-.084.163-.196.297-.336.4-.14.106-.302.185-.488.237-.186.053-.38.08-.584.08-.215 0-.414-.027-.597-.08-.182-.05-.342-.13-.48-.235-.135-.104-.243-.238-.32-.4-.08-.163-.12-.355-.12-.576zm-1.02 11.517c.134 0 .275-.013.424-.04.148-.025.284-.08.41-.16.124-.082.23-.198.313-.35.085-.15.127-.354.127-.61v-5.423c0-.238-.042-.43-.127-.57-.084-.144-.19-.254-.318-.332-.13-.08-.267-.13-.415-.153-.148-.024-.286-.036-.414-.036h-.21v-.95h4.195v7.463c0 .256.043.46.127.61.084.152.19.268.314.35.125.08.263.135.414.16.15.027.29.04.418.04h.21v.95H10.82v-.95h.21z\"/>\n          </g>\n        </svg>\n      </span>\n    `;\n  }\n\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'baller-form': BallerForm;\n  }\n}\n"],
  "mappings": "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",
  "names": ["__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "global", "window", "supportsAdoptingStyleSheets", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "constructionToken", "Symbol", "cssTagCache", "WeakMap", "CSSResult", "constructor", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "unsafeCSS", "value", "String", "css", "values", "reduce", "acc", "v", "idx", "adoptStyles", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "forEach", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "getCompatibleStyle", "sheet", "rule", "cssRules", "global", "window", "trustedTypes", "emptyStringForBooleanAttribute", "emptyScript", "polyfillSupport", "reactiveElementPolyfillSupport", "defaultConverter", "toAttribute", "value", "type", "Boolean", "Object", "Array", "JSON", "stringify", "fromAttribute", "fromValue", "Number", "parse", "e", "notEqual", "old", "defaultPropertyDeclaration", "attribute", "String", "converter", "reflect", "hasChanged", "finalized", "ReactiveElement", "HTMLElement", "constructor", "super", "this", "__instanceProperties", "Map", "isUpdatePending", "hasUpdated", "__reflectingProperty", "__initialize", "static", "initializer", "finalize", "_a", "_initializers", "push", "observedAttributes", "attributes", "elementProperties", "forEach", "v", "p", "attr", "__attributeNameForProperty", "__attributeToPropertyMap", "set", "name", "options", "state", "noAccessor", "prototype", "hasOwnProperty", "key", "Symbol", "descriptor", "getPropertyDescriptor", "defineProperty", "get", "oldValue", "requestUpdate", "configurable", "enumerable", "superCtor", "getPrototypeOf", "props", "properties", "propKeys", "getOwnPropertyNames", "getOwnPropertySymbols", "createProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "i", "addController", "controller", "__controllers", "renderRoot", "isConnected", "_b", "hostConnected", "call", "removeController", "splice", "indexOf", "_v", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "attributeChangedCallback", "_old", "_$attributeToProperty", "__propertyToAttribute", "attrValue", "undefined", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "shouldRequestUpdate", "has", "__reflectingProperties", "__enqueueUpdate", "async", "reject", "result", "scheduleUpdate", "performUpdate", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "k", "mode", "_d", "reactiveElementVersions", "global", "window", "trustedTypes", "policy", "createPolicy", "createHTML", "s", "boundAttributeSuffix", "marker", "Math", "random", "String", "slice", "markerMatch", "nodeMarker", "d", "document", "createMarker", "createComment", "isPrimitive", "value", "isArray", "Array", "isIterable", "Symbol", "iterator", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "RegExp", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "type", "strings", "values", "_$litType$", "html", "svg", "noChange", "for", "nothing", "templateCache", "WeakMap", "walker", "createTreeWalker", "trustFromTemplateString", "tsa", "stringFromTSA", "hasOwnProperty", "Error", "getTemplateHtml", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "undefined", "Template", "constructor", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "svgElement", "firstChild", "remove", "append", "childNodes", "nextNode", "nodeType", "hasAttributes", "attrsToRemove", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "toLowerCase", "split", "m", "index", "ctor", "PropertyPart", "BooleanAttributePart", "EventPart", "AttributePart", "removeAttribute", "tagName", "textContent", "emptyScript", "data", "indexOf", "static", "_options", "innerHTML", "resolveDirective", "part", "parent", "attributeIndex", "currentDirective", "_a", "__directives", "__directive", "nextDirectiveConstructor", "_b", "call", "_$initialize", "_c", "_d", "_$resolve", "TemplateInstance", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "_clone", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "ChildPart", "nextSibling", "ElementPart", "_update", "_$setValue", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "__isConnected", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "_insert", "insertBefore", "createTextNode", "result", "_$getTemplate", "h", "instance", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "setConnected", "element", "fill", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "emptyStringForBooleanAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "handleEvent", "event", "host", "_$LH", "_boundAttributeSuffix", "_marker", "_markerMatch", "_HTML_RESULT", "_getTemplateHtml", "_TemplateInstance", "_isIterable", "_resolveDirective", "_ChildPart", "_AttributePart", "_BooleanAttributePart", "_EventPart", "_PropertyPart", "_ElementPart", "polyfillSupport", "litHtmlPolyfillSupport", "litHtmlVersions", "render", "container", "partOwnerNode", "renderBefore", "LitElement", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "_a", "_b", "renderBefore", "firstChild", "update", "changedProperties", "value", "render", "hasUpdated", "isConnected", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "globalThis", "litElementHydrateSupport", "call", "polyfillSupport", "litElementPolyfillSupport", "_c", "globalThis", "litElementVersions", "push", "customElement", "tagName", "classOrDescriptor", "clazz", "customElements", "define", "descriptor", "kind", "elements", "finisher", "standardProperty", "options", "element", "kind", "descriptor", "finisher", "clazz", "createProperty", "key", "Symbol", "placement", "originalKey", "initializer", "this", "call", "legacyProperty", "proto", "name", "constructor", "property", "protoOrDescriptor", "state", "options", "property", "decorateProperty", "finisher", "descriptor", "protoOrDescriptor", "name", "key", "_a", "originalKey", "info", "undefined", "kind", "placement", "ctor", "constructor", "Object", "defineProperty", "query", "selector", "cache", "decorateProperty", "descriptor", "name", "get", "_b", "_a", "this", "renderRoot", "querySelector", "enumerable", "configurable", "key", "Symbol", "o", "t", "queryAll", "selector", "decorateProperty", "descriptor", "_name", "get", "_b", "_a", "this", "renderRoot", "querySelectorAll", "enumerable", "configurable", "slotAssignedElements", "_a", "window", "HTMLSlotElement", "prototype", "assignedElements", "slot", "opts", "assignedNodes", "filter", "node", "nodeType", "Node", "ELEMENT_NODE", "queryAssignedElements", "options", "selector", "decorateProperty", "descriptor", "_name", "get", "slotSelector", "slotEl", "this", "renderRoot", "querySelector", "elements", "matches", "enumerable", "configurable", "initialState", "Symbol", "Task", "taskComplete", "this", "_taskComplete", "status", "TaskStatus", "Promise", "res", "rej", "_resolveTaskComplete", "_rejectTaskComplete", "reject", "_error", "resolve", "_value", "host", "task", "args", "_callId", "_host", "addController", "taskConfig", "_task", "_argsFn", "_argsEqual", "argsEqual", "shallowArrayEquals", "_onComplete", "onComplete", "_onError", "onError", "autoRun", "initialValue", "_previousArgs", "_getArgs", "hostUpdate", "_performTask", "hostUpdated", "Array", "isArray", "Error", "prev", "run", "result", "error", "_abortController", "abort", "queueMicrotask", "requestUpdate", "key", "AbortController", "errored", "signal", "e", "reason", "value", "renderer", "initial", "pending", "complete", "oldArgs", "newArgs", "length", "every", "v", "i", "notEqual", "componentStyles", "i", "ApplicationData", "_ApplicationData", "args", "birthDate", "year", "month", "day", "formattedMonth", "formattedDay", "location", "germanLeague", "internationalLeague", "currentStatus", "highestTeamCountry", "teamType", "domesticLeague", "stateValue", "countryValue", "EnrollmentService", "_EnrollmentService", "endpoint", "response", "data", "jsonData", "brazeResponse", "parsedResponse", "SpamService", "_SpamService", "siteKey", "endpoint", "script", "token", "err", "abortSignal", "response", "scriptUrl", "tooltipMessages", "Elevation", "s", "x", "styles", "i", "MdElevation", "Elevation", "styles", "__decorate", "e", "ATTACHABLE_CONTROLLER", "FOR_ATTRIBUTE_OBSERVER", "records", "record", "AttachableController", "htmlFor", "control", "host", "onControlChange", "EVENTS", "FocusRing", "s", "AttachableController", "htmlFor", "control", "event", "HANDLED_BY_FOCUS_RING", "prev", "next", "changed", "__decorate", "n", "styles", "i", "MdFocusRing", "FocusRing", "styles", "__decorate", "e", "PartType", "ATTRIBUTE", "CHILD", "PROPERTY", "BOOLEAN_ATTRIBUTE", "EVENT", "ELEMENT", "directive", "c", "values", "_$litDirective$", "Directive", "constructor", "_partInfo", "_$isConnected", "this", "_$parent", "_$initialize", "part", "parent", "attributeIndex", "__part", "__attributeIndex", "_$resolve", "props", "update", "_part", "render", "classMap", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "ATTRIBUTE", "name", "_a", "strings", "length", "Error", "render", "classInfo", "Object", "keys", "filter", "key", "join", "update", "part", "this", "_previousClasses", "Set", "_staticClasses", "split", "s", "has", "add", "classList", "element", "forEach", "remove", "delete", "value", "_b", "noChange", "EASING", "createAnimationSignal", "animationAbortController", "PRESS_GROW_MS", "MINIMUM_PRESS_MS", "INITIAL_ORIGIN_SCALE", "PADDING", "SOFT_EDGE_MINIMUM_SIZE", "SOFT_EDGE_CONTAINER_RATIO", "PRESS_PSEUDO", "ANIMATION_FILL", "State", "EVENTS", "TOUCH_DELAY_MS", "Ripple", "s", "AttachableController", "htmlFor", "control", "classes", "x", "o", "changedProps", "event", "resolve", "height", "width", "maxDim", "softEdgeSize", "initialSize", "maxRadius", "pointerEvent", "scrollX", "scrollY", "left", "top", "documentX", "documentY", "pageX", "pageY", "positionEvent", "endPoint", "startPoint", "translateStart", "translateEnd", "EASING", "animation", "pressAnimationPlayState", "isPrimaryButton", "y", "bottom", "right", "pointerType", "prev", "next", "__decorate", "n", "t", "i", "styles", "i", "MdRipple", "Ripple", "styles", "__decorate", "e", "brand", "Symbol", "for", "unwrapStaticValue", "value", "r", "literal", "strings", "values", "_$litStatic$", "reduce", "acc", "v", "idx", "value", "Error", "r", "brand", "stringsCache", "Map", "withStatic", "coreTag", "l", "length", "staticValue", "dynamicValue", "staticStrings", "dynamicValues", "s", "i", "hasStatics", "unwrapStaticValue", "push", "key", "join", "get", "raw", "set", "html", "coreHtml", "svg", "coreSvg", "ARIA_PROPERTIES", "ARIA_ATTRIBUTES", "ariaPropertyToAttribute", "ariaPropertyToAttribute", "property", "setupHostAria", "ctor", "focusable", "host", "ariaProperty", "ARIA_PROPERTIES", "polyfillElementInternalsAria", "internals", "checkIfElementInternalsSupportsAria", "firstConnectedCallbacks", "hasBeenConnected", "internalAriaValue", "value", "setValue", "internalRoleValue", "setRole", "propertiesSetByUser", "callback", "requestUpdateOnAriaChange", "ctor", "ariaProperty", "ARIA_PROPERTIES", "ariaPropertyToAttribute", "element", "controller", "internals", "redispatchEvent", "element", "event", "copy", "dispatched", "dispatchActivationClick", "isActivationClick", "squelchEvent", "squelched", "isSquelchingEvents", "squelchEventsForMicrotask", "setupFormSubmitter", "ctor", "instance", "submitter", "event", "type", "internals", "elementInternals", "form", "resolve", "submitEvent", "Button", "s", "name", "internals", "_a", "event", "isActivationClick", "dispatchActivationClick", "isDisabled", "button", "i", "ariaLabel", "ariaHasPopup", "ariaExpanded", "n", "o", "A", "icon", "x", "requestUpdateOnAriaChange", "setupFormSubmitter", "__decorate", "l", "FilledButton", "Button", "x", "styles", "i", "styles", "i", "styles", "i", "MdFilledButton", "FilledButton", "styles", "__decorate", "e", "FilledTonalButton", "Button", "x", "styles", "i", "MdFilledTonalButton", "FilledTonalButton", "styles", "__decorate", "e", "OutlinedButton", "Button", "x", "styles", "i", "MdOutlinedButton", "OutlinedButton", "styles", "__decorate", "e", "Field", "s", "props", "floatingLabel", "restingLabel", "outline", "classes", "x", "o", "A", "changed", "supportingOrErrorText", "counterText", "start", "end", "role", "element", "D", "isFloating", "visible", "labelText", "wasFocused", "wasPopulated", "wasFloating", "shouldBeFloating", "EASING", "floatingLabelEl", "restingLabelEl", "floatingX", "floatingY", "floatingHeight", "restingX", "restingY", "restingHeight", "floatingScrollWidth", "restingScrollWidth", "scale", "xDelta", "yDelta", "restTransform", "floatTransform", "restingClientWidth", "width", "__decorate", "n", "l", "t", "i", "FilledField", "Field", "x", "styles", "i", "styles", "i", "MdFilledField", "FilledField", "styles", "__decorate", "e", "styles", "i", "styles", "i", "_ChildPart", "ChildPart", "_$LH", "isSingleExpression", "part", "strings", "RESET_VALUE", "setCommittedValue", "part", "value", "_$committedValue", "live", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "PROPERTY", "ATTRIBUTE", "BOOLEAN_ATTRIBUTE", "Error", "isSingleExpression", "render", "value", "update", "part", "noChange", "nothing", "element", "name", "hasAttribute", "getAttribute", "String", "setCommittedValue", "important", "importantFlag", "styleMap", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "ATTRIBUTE", "name", "_a", "strings", "length", "Error", "render", "styleInfo", "Object", "keys", "reduce", "style", "prop", "value", "includes", "replace", "toLowerCase", "update", "part", "element", "this", "_previousStyleProperties", "Set", "add", "forEach", "delete", "removeProperty", "isImportant", "endsWith", "setProperty", "slice", "noChange", "stringConverter", "value", "TextField", "s", "name", "value", "input", "invalidEvent", "event", "valid", "prevMessage", "error", "args", "start", "end", "direction", "stepDecrement", "stepIncrement", "attribute", "newValue", "oldValue", "classes", "x", "o", "changedProperties", "n", "style", "ariaLabel", "A", "autocomplete", "l", "prefix", "suffix", "inputMode", "text", "isSuffix", "redispatchEvent", "state", "requestUpdateOnAriaChange", "__decorate", "stringConverter", "t", "i", "FilledTextField", "TextField", "i", "styles", "i", "MdFilledTextField", "FilledTextField", "i", "styles", "__decorate", "e", "Checkbox", "s", "name", "event", "isActivationClick", "dispatchActivationClick", "error", "changed", "shouldAddFormValue", "state", "prevNone", "prevChecked", "prevIndeterminate", "isChecked", "isIndeterminate", "containerClasses", "o", "ariaLabel", "ariaInvalid", "x", "A", "target", "redispatchEvent", "input", "requestUpdateOnAriaChange", "__decorate", "n", "t", "i", "styles", "i", "MdCheckbox", "Checkbox", "styles", "__decorate", "e", "Icon", "s", "x", "styles", "i", "MdIcon", "Icon", "styles", "__decorate", "e", "styles", "i", "styles", "i", "activateFirstItem", "items", "isActivatable", "isItemNotDisabled", "firstItem", "getFirstActivatableItem", "activateLastItem", "lastItem", "getLastActivatableItem", "getActiveItem", "items", "isActivatable", "isItemNotDisabled", "i", "item", "getFirstActivatableItem", "getLastActivatableItem", "getNextItem", "index", "nextIndex", "getPrevItem", "prevIndex", "activateNextItem", "activeItemRecord", "next", "activateFirstItem", "activatePreviousItem", "prev", "activateLastItem", "isItemNotDisabled", "item", "NavigableKeys", "ListController", "config", "event", "key", "items", "activeItemRecord", "getActiveItem", "isRtl", "inlinePrevious", "inlineNext", "activateNextItem", "activatePreviousItem", "activateFirstItem", "activateLastItem", "item", "target", "encounteredActivated", "firstActivatableItem", "getFirstActivatableItem", "isItem", "getPossibleItems", "deactivateItem", "activateItem", "isNavigableKey", "isActivatable", "maybeItems", "itemOrParent", "subItem", "createCloseMenuEvent", "initiator", "reason", "createDefaultCloseMenuEvent", "createCloseMenuEvent", "SelectionKey", "CloseReason", "KeydownCloseKey", "isClosableKey", "code", "value", "isSelectableKey", "isElementInSubtree", "target", "container", "focusEv", "composedPath", "listener", "ev", "FocusState", "Corner", "SurfacePositionController", "host", "getProperties", "surfaceEl", "anchorEl", "anchorCornerRaw", "surfaceCornerRaw", "positioning", "xOffset", "yOffset", "repositionStrategy", "anchorCorner", "surfaceCorner", "surfaceRect", "anchorRect", "surfaceBlock", "surfaceInline", "anchorBlock", "anchorInline", "isLTR", "blockInset", "blockOutOfBoundsCorrection", "surfaceBlockProperty", "flippedSurfaceBlock", "flippedAnchorBlock", "flippedBlock", "inlineInset", "inlineOutOfBoundsCorrection", "surfaceInlineProperty", "flippedSurfaceInline", "flippedAnchorInline", "flippedInline", "config", "relativeToWindow", "isSurfaceBlockStart", "isSurfaceBlockEnd", "blockAnchorOffset", "blockTopLayerOffset", "isLTRBool", "isRTL", "isSurfaceInlineStart", "isSurfaceInlineEnd", "inlineAnchorOffset", "inlineTopLayerOffsetLTR", "inlineTopLayerOffsetRTL", "inlineTopLayerOffset", "props", "hasChanged", "key", "value", "openChanged", "hasAnchor", "hasSurface", "TYPEAHEAD_RECORD", "TypeaheadController", "getProperties", "event", "el", "index", "record", "lastActiveIndex", "numRecords", "rebaseIndexOnActive", "matchingRecords", "a", "b", "isNewQuery", "nextRecord", "DEFAULT_TYPEAHEAD_BUFFER_TIME", "submenuNavKeys", "NavigableKeys", "menuNavKeys", "getFocusedElement", "activeDoc", "activeEl", "Menu", "s", "element", "Corner", "FocusState", "createAnimationSignal", "ListController", "maybeItem", "item", "key", "arrowOpen", "TypeaheadController", "polyfillElementInternalsAria", "SurfacePositionController", "event", "isElementInSubtree", "anchorEl", "oldRestoreFocus", "items", "activeItemRecord", "getActiveItem", "animationAborted", "first", "getFirstActivatableItem", "last", "getLastActivatableItem", "path", "changed", "x", "o", "isClosableKey", "surfaceEl", "slotEl", "openDirection", "signal", "height", "openingUpwards", "children", "FULL_DURATION", "SURFACE_OPACITY_DURATION", "ITEM_OPACITY_DURATION", "DELAY_BETWEEN_ITEMS", "surfaceHeightAnimation", "EASING", "upPositionCorrectionAnimation", "surfaceOpacityAnimation", "childrenAnimations", "i", "directionalIndex", "child", "animation", "resolveAnimation", "value", "animationFinished", "resolve", "reject", "animationEnded", "res", "rej", "closingDownwards", "SURFACE_OPACITY_DELAY", "ITEM_OPACITY_INITIAL_DELAY", "END_HEIGHT_PERCENTAGE", "downPositionCorrectionAnimation", "setupHostAria", "__decorate", "n", "l", "t", "styles", "i", "MdMenu", "Menu", "styles", "__decorate", "e", "getSelectedItems", "items", "selectedItemRecords", "i", "item", "VALUE", "Select", "s", "DEFAULT_TYPEAHEAD_BUFFER_TIME", "_a", "value", "_option", "index", "option", "name", "optionToSelect", "invalidEvent", "event", "valid", "prevMessage", "error", "changed", "x", "o", "n", "A", "ariaLabel", "typeaheadController", "isOpenKey", "lastActiveRecord", "TYPEAHEAD_RECORD", "isElementInSubtree", "items", "getSelectedItems", "selectedOptions", "hasSelectedOptionChanged", "firstSelectedOption", "activeItem", "getActiveItem", "selectedItem", "redispatchEvent", "reason", "item", "hasChanged", "isSelectableKey", "requestingOptionEl", "valueMissing", "customError", "validationMessage", "select", "state", "requestUpdateOnAriaChange", "__decorate", "t", "i", "l", "FilledSelect", "Select", "i", "styles", "i", "styles", "i", "MdFilledSelect", "FilledSelect", "styles", "__decorate", "e", "styles", "i", "styles", "i", "Item", "s", "x", "isMultiline", "slotsWithContent", "slot", "slotHasContent", "__decorate", "n", "e", "node", "isElement", "isTextWithContent", "styles", "i", "MdItem", "Item", "styles", "__decorate", "e", "MenuItemController", "host", "config", "createDefaultCloseMenuEvent", "CloseReason", "event", "keyCode", "isClosableKey", "getHeadlineElements", "headlineElements", "textParts", "headlineElement", "text", "createRequestSelectionEvent", "createRequestDeselectionEvent", "SelectOptionController", "text", "headlineElements", "textParts", "headlineElement", "host", "config", "e", "MenuItemController", "SelectOptionEl", "s", "SelectOptionController", "text", "x", "content", "A", "o", "requestUpdateOnAriaChange", "__decorate", "n", "i", "l", "MdSelectOption", "SelectOptionEl", "styles", "__decorate", "e", "Divider", "s", "__decorate", "n", "styles", "i", "MdDivider", "Divider", "styles", "__decorate", "e", "DIALOG_DEFAULT_OPEN_ANIMATION", "EASING", "DIALOG_DEFAULT_CLOSE_ANIMATION", "Dialog", "s", "open", "DIALOG_DEFAULT_OPEN_ANIMATION", "DIALOG_DEFAULT_CLOSE_ANIMATION", "dialog", "returnValue", "prevReturnValue", "scrollable", "classes", "ariaLabel", "x", "o", "A", "entries", "entry", "event", "form", "submitter", "preventDefault", "redispatchEvent", "animation", "scrim", "container", "headline", "content", "actions", "containerAnimate", "dialogAnimate", "scrimAnimate", "headlineAnimate", "contentAnimate", "actionsAnimate", "elementAndAnimation", "animations", "element", "animateArgs", "slot", "target", "isIntersecting", "resolve", "requestUpdateOnAriaChange", "__decorate", "n", "i", "t", "styles", "i", "MdDialog", "Dialog", "styles", "__decorate", "e", "BallerForm", "BallerForm_1", "s", "h", "userApplication", "event", "x", "value", "error", "EnrollmentService", "SpamService", "userData", "ApplicationData", "isOldEnough", "today", "dateInputFieldDate", "hasAcceptedDatenschutz", "hasAcceptedTeilnahmebedingungen", "formFields", "field", "data", "successPage", "tooltipMessages", "message", "componentStyles", "__decorate", "n", "i", "t", "e"]
}
